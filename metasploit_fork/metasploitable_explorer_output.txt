CVE-2010-4478
{
    "id": "bundle--613d4c79-80f2-414b-a574-4792b13abcf0",
    "objects": [
        {
            "created": "2020-05-24T00:01:19.399Z",
            "description": "OpenSSH 5.6 and earlier, when J-PAKE is enabled, does not properly validate the public parameters in the J-PAKE protocol, which allows remote attackers to bypass the need for knowledge of the shared secret, and successfully authenticate, by sending crafted values in each round of the protocol, a related issue to CVE-2010-4252.",
            "external_references": [
                {
                    "external_id": "CVE-2010-4478",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "modified": "2020-05-24T00:01:19.399Z",
            "name": "CVE-2010-4478",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-287"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10673",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10673"
                },
                {
                    "name": "http://seb.dbzteam.org/crypto/jpake-session-key-retrieval.pdf",
                    "refsource": "MISC",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://seb.dbzteam.org/crypto/jpake-session-key-retrieval.pdf"
                },
                {
                    "name": "http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/jpake.c#rev1.5",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/jpake.c#rev1.5"
                },
                {
                    "name": "http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/jpake.c.diff?r1=1.4;r2=1.5;f=h",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/jpake.c.diff?r1=1.4;r2=1.5;f=h"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=659297",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=659297"
                },
                {
                    "name": "https://github.com/seb-m/jpake",
                    "refsource": "MISC",
                    "tags": [],
                    "url": "https://github.com/seb-m/jpake"
                },
                {
                    "name": "oval:org.mitre.oval:def:12338",
                    "refsource": "OVAL",
                    "tags": [],
                    "url": "https://oval.cisecurity.org/repository/search/definition/oval%3Aorg.mitre.oval%3Adef%3A12338"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:06.010Z",
            "id": "relationship--7692c1ae-6d7d-438d-be3c-c173dab388b7",
            "modified": "2020-06-04T19:13:06.010Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--2e2ed1f8-f736-4fc9-83bc-308595fc6e03",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.011Z",
            "id": "relationship--3b124c6d-bcdf-4420-9187-accc963ce7b3",
            "modified": "2020-06-04T19:13:06.011Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--8f665166-dfd1-40cb-91e8-b78bee1ceb6a",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.011Z",
            "id": "relationship--48564c79-4823-4ebf-8826-6464c4452171",
            "modified": "2020-06-04T19:13:06.011Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--22802ed6-ddc6-4da7-b6be-60b10d26198b",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.011Z",
            "id": "relationship--efb3a30a-e6ee-48ad-a5ad-396f6f8da84e",
            "modified": "2020-06-04T19:13:06.011Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--862d18f1-a87c-4f1b-acc2-882697d5d6e5",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.011Z",
            "id": "relationship--2a0f0869-f712-4c89-8f95-386bdb18fa3d",
            "modified": "2020-06-04T19:13:06.011Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--1fa1539d-4a13-4453-bf43-ad0987b2fbf5",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.012Z",
            "id": "relationship--ca1049c4-7a18-4c87-a297-2a90178b2628",
            "modified": "2020-06-04T19:13:06.012Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--359d056e-6d5c-4d54-97d6-5a9f586bcccf",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.012Z",
            "id": "relationship--cf4bbcf2-cca0-4442-86c6-b7c900c3483e",
            "modified": "2020-06-04T19:13:06.012Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--63f43efb-7a34-4302-b3dc-8245100fdea9",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.012Z",
            "id": "relationship--4688c6d6-19d3-478b-b7f5-36b36d49a753",
            "modified": "2020-06-04T19:13:06.012Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--bec2babe-f38d-49ed-a901-4c7dbbe87b1e",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.012Z",
            "id": "relationship--3a16573c-a8c0-47ce-ab1f-305e7ab8e4d2",
            "modified": "2020-06-04T19:13:06.012Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--b9cddd44-a617-4a56-8560-0ca1cd9af42a",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.012Z",
            "id": "relationship--5cb6b9b7-993e-4ec7-86b6-d17948545895",
            "modified": "2020-06-04T19:13:06.012Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--38964770-4f39-4191-89cf-73a625162b2b",
            "target_ref": "vulnerability--48d34a1b-1142-3301-88bd-f9de667acadd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.012Z",
            "id": "relationship--32b1cb85-a6c1-4774-9ca1-ea0379c2637c",
            "modified": "2020-06-04T19:13:06.012Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
            "target_ref": "attack-pattern--bec2babe-f38d-49ed-a901-4c7dbbe87b1e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.013Z",
            "id": "relationship--9ce846a1-2dad-4248-8559-1e3e592731e5",
            "modified": "2020-06-04T19:13:06.013Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--c16e5409-ee53-4d79-afdc-4099dc9292df",
            "target_ref": "attack-pattern--b9cddd44-a617-4a56-8560-0ca1cd9af42a",
            "type": "relationship"
        },
        {
            "created": "2017-12-14T16:46:06.044Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token. For example, Microsoft promotes the use of access tokens as a security best practice. Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command <code>runas</code>.(Citation: Microsoft runas)\n  \nAdversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection. An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAccess tokens can be leveraged by adversaries through three methods:(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\n**Token Impersonation/Theft** - An adversary creates a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread. This is useful for when the target user has a non-network logon session on the system.\n\n**Create Process with a Token** - An adversary creates a new access token with <code>DuplicateToken(Ex)</code> and uses it with <code>CreateProcessWithTokenW</code> to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user.\n\n**Make and Impersonate Token** - An adversary has a username and password but the user is not logged onto the system. The adversary can then create a logon session for the user using the <code>LogonUser</code> function. The function will return a copy of the new session's access token and the adversary can use <code>SetThreadToken</code> to assign the token to a thread.\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account.\n\nMetasploit\u2019s Meterpreter payload allows arbitrary token manipulation and uses token impersonation to escalate privileges.(Citation: Metasploit access token) The Cobalt Strike beacon payload allows arbitrary token impersonation and can also create tokens. (Citation: Cobalt Strike Access Token)",
            "external_references": [
                {
                    "external_id": "T1134",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1134"
                },
                {
                    "external_id": "CAPEC-633",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/633.html"
                },
                {
                    "description": "Microsoft TechNet. (n.d.). Runas. Retrieved April 21, 2017.",
                    "source_name": "Microsoft runas",
                    "url": "https://technet.microsoft.com/en-us/library/bb490994.aspx"
                },
                {
                    "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
                    "source_name": "Pentestlab Token Manipulation",
                    "url": "https://pentestlab.blog/2017/04/03/token-manipulation/"
                },
                {
                    "description": "Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",
                    "source_name": "BlackHat Atkinson Winchester Token Manipulation",
                    "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf"
                },
                {
                    "description": "Offensive Security. (n.d.). What is Incognito. Retrieved April 21, 2017.",
                    "source_name": "Metasploit access token",
                    "url": "https://www.offensive-security.com/metasploit-unleashed/fun-incognito/"
                },
                {
                    "description": "Mudge, R. (n.d.). Windows Access Tokens and Alternate Credentials. Retrieved April 21, 2017.",
                    "source_name": "Cobalt Strike Access Token",
                    "url": "https://blog.cobaltstrike.com/2015/12/16/windows-access-tokens-and-alternate-credentials/"
                },
                {
                    "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
                    "source_name": "Microsoft Command-line Logging",
                    "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing"
                },
                {
                    "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                    "source_name": "Microsoft LogonUser",
                    "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx"
                },
                {
                    "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                    "source_name": "Microsoft DuplicateTokenEx",
                    "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx"
                },
                {
                    "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                    "source_name": "Microsoft ImpersonateLoggedOnUser",
                    "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx"
                }
            ],
            "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "modified": "2019-10-14T20:45:04.451Z",
            "name": "Access Token Manipulation",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Tom Ueltschi @c_APT_ure",
                "Travis Smith, Tripwire",
                "Robby Winchester, @robwinchester3",
                "Jared Atkinson, @jaredcatkinson"
            ],
            "x_mitre_data_sources": [
                "API monitoring",
                "Access tokens",
                "Process monitoring",
                "Process command-line parameters"
            ],
            "x_mitre_detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)",
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ],
            "x_mitre_permissions_required": [
                "User",
                "Administrator"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_version": "1.0"
        },
        {
            "created": "2017-05-31T21:31:13.061Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server. In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (see, for example, China Chopper Web shell client). (Citation: Lee 2013)\n\nWeb shells may serve as [Redundant Access](https://attack.mitre.org/techniques/T1108) or as a persistence mechanism in case an adversary's primary access methods are detected and removed.",
            "external_references": [
                {
                    "external_id": "T1100",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1100"
                },
                {
                    "external_id": "CAPEC-650",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/650.html"
                },
                {
                    "description": "Lee, T., Hanzlik, D., Ahl, I. (2013, August 7). Breaking Down the China Chopper Web Shell - Part I. Retrieved March 27, 2015.",
                    "source_name": "Lee 2013",
                    "url": "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html"
                },
                {
                    "description": "US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016.",
                    "source_name": "US-CERT Alert TA15-314A Web Shells",
                    "url": "https://www.us-cert.gov/ncas/alerts/TA15-314A"
                }
            ],
            "id": "attack-pattern--c16e5409-ee53-4d79-afdc-4099dc9292df",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "modified": "2019-07-17T20:11:10.736Z",
            "name": "Web Shell",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_data_sources": [
                "Anti-virus",
                "Authentication logs",
                "File monitoring",
                "Netflow/Enclave netflow",
                "Process monitoring"
            ],
            "x_mitre_detection": "Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013)\n\n<code><?php @eval($_POST['password']);></code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running [cmd](https://attack.mitre.org/software/S0106) or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)",
            "x_mitre_effective_permissions": [
                "SYSTEM",
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "x_mitre_system_requirements": [
                "Adversary access to Web server with vulnerability or account to upload and serve the Web shell file."
            ],
            "x_mitre_version": "1.0"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker. This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns.",
            "external_references": [
                {
                    "external_id": "CAPEC-114",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/114.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                }
            ],
            "id": "attack-pattern--2e2ed1f8-f736-4fc9-83bc-308595fc6e03",
            "modified": "2015-11-09T00:00:00.000Z",
            "name": "Authentication Abuse",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_prerequisites": [
                "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc. which is flawed in some way."
            ],
            "x_capec_resources_required": [
                "A client application, command-line access to a binary, or scripting language capable of interacting with the authentication mechanism."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to get to secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.",
            "external_references": [
                {
                    "external_id": "CAPEC-115",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/115.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                }
            ],
            "id": "attack-pattern--8f665166-dfd1-40cb-91e8-b78bee1ceb6a",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Authentication Bypass",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_prerequisites": [
                "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc."
            ],
            "x_capec_resources_required": [
                "A client application, such as a web browser, or a scripting language capable of interacting with the target."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials. Alternatively, an adversary may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the apparent identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the apparent identity of the message but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.",
            "external_references": [
                {
                    "external_id": "CAPEC-151",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/151.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                }
            ],
            "id": "attack-pattern--22802ed6-ddc6-4da7-b6be-60b10d26198b",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Identity Spoofing",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authentication": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Gain Privileges"
                ]
            },
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The identity associated with the message or resource must be removable or modifiable in an undetectable way."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
            "external_references": [
                {
                    "external_id": "CAPEC-194",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/194.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                }
            ],
            "id": "attack-pattern--862d18f1-a87c-4f1b-acc2-882697d5d6e5",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Fake the Source of Data",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Integrity": [
                    "Alter Execution Logic (By faking the source of data or services, an adversary can cause a target to make incorrect decisions about how to proceed.)",
                    "Gain Privileges (By impersonating identities that have an increased level of access, an adversary gain privilege that they many not have otherwise had.)",
                    "Hide Activities (Faking the source of data or services can be used to create a false trail in logs as the target will associate any actions with the impersonated identity instead of the adversary.)"
                ]
            },
            "x_capec_prerequisites": [
                "This attack is only applicable when a vulnerable entity associates data or services with an identity. Without such an association, there would be no reason to fake the source."
            ],
            "x_capec_resources_required": [
                "Resources required vary depending on the nature of the attack. Possible tools needed by an attacker could include tools to create custom network packets, specific client software, and tools to capture network traffic. Many variants of this attack require no attacker resources, however."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "external_references": [
                {
                    "external_id": "CAPEC-22",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-290",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/290.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "external_id": "CWE-693",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/693.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--1fa1539d-4a13-4453-bf43-ad0987b2fbf5",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Exploiting Trust in Client",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Web applications may use JavaScript to perform client side validation, request encoding/formatting, and other security functions, which provides some usability benefits and eliminates some client-server round-tripping. However, the web server cannot assume that the requests it receives have been subject to those validations, because an attacker can use an alternate method for crafting the HTTP Request and submit data that contains poisoned values designed to spoof a user and/or get the web server to disclose information.",
                "Web 2.0 style applications may be particularly vulnerable because they in large part rely on existing infrastructure which provides scalability without the ability to govern the clients. Attackers identify vulnerabilities that either assume the client side is responsible for some security services (without the requisite ability to ensure enforcement of these checks) and/or the lack of a hardened, default deny server configuration that allows for an attacker probing for weaknesses in unexpected ways. Client side validation, request formatting and other services may be performed, but these are strictly usability enhancements not security enhancements.",
                "Many web applications use client side scripting like JavaScript to enforce authentication, authorization, session state and other variables, but at the end of day they all make requests to the server. These client side checks may provide usability and performance gains, but they lack integrity in terms of the http request. It is possible for an attacker to post variables directly to the server without using any of the client script security checks and customize the patterns to impersonate other users or probe for more information.",
                "Many message oriented middleware systems like MQ Series are rely on information that is passed along with the message request for making authorization decisions, for example what group or role the request should be passed. However, if the message server does not or cannot authenticate the authorization information in the request then the server's policy decisions about authorization are trivial to subvert because the client process can simply elevate privilege by passing in elevated group or role information which the message server accepts and acts on."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."
            ],
            "x_capec_resources_required": [
                "Ability to communicate synchronously or asynchronously with server"
            ],
            "x_capec_skills_required": {
                "Medium": "The attacker must have fairly detailed knowledge of the syntax and semantics of client/server communications protocols and grammars"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated. Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required. Unfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The attacker can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated. Once the attacker gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme.",
            "external_references": [
                {
                    "external_id": "CAPEC-57",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/57.html"
                },
                {
                    "external_id": "CWE-300",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/300.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-724",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/724.html"
                },
                {
                    "external_id": "CWE-693",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/693.html"
                }
            ],
            "id": "attack-pattern--359d056e-6d5c-4d54-97d6-5a9f586bcccf",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges"
                ]
            },
            "x_capec_example_instances": [
                "The Rest service provider uses SSL to protect the communications between the service requester (client) to the service provider. In the instance where SSL is terminated before the communications reach the web server, it is very common in enterprise data centers to terminate SSL at a router, firewall, load balancer, proxy or other device, then the attacker can insert a sniffer into the communication stream and gather all the authentication tokens (such as session credentials, username/passwords combinations, and so on). The Rest service requester and service provider do not have any way to detect this attack."
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "Opportunity to intercept must exist beyond the point where SSL is terminated.",
                "The attacker must be able to insert a listener actively (proxying the communication) or passively (sniffing the communication) in the client-server communication path."
            ],
            "x_capec_skills_required": {
                "Low": "To insert a network sniffer or other listener into the communication stream"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2017-04-15T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The advarsary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
            "external_references": [
                {
                    "external_id": "CAPEC-593",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/593.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                }
            ],
            "id": "attack-pattern--63f43efb-7a34-4302-b3dc-8245100fdea9",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Session Hijacking",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Availability": [
                    "Gain Privileges (A successful attack can enable an adversary to gain unauthorized access to an application.)"
                ],
                "Confidentiality": [
                    "Gain Privileges (A successful attack can enable an adversary to gain unauthorized access to an application.)"
                ],
                "Integrity": [
                    "Gain Privileges (A successful attack can enable an adversary to gain unauthorized access to an application.)"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An application that leverages sessions to perform authentication."
            ],
            "x_capec_resources_required": [
                "The adversary must have the ability to communicate with the application over the network."
            ],
            "x_capec_skills_required": {
                "Low": "Exploiting a poorly protected identity token is a well understood attack with many helpful resources available."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2018-04-12T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
            "external_references": [
                {
                    "external_id": "CAPEC-633",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/633.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                }
            ],
            "id": "attack-pattern--bec2babe-f38d-49ed-a901-4c7dbbe87b1e",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Token Impersonation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Integrity": [
                    "Alter Execution Logic (By faking the source of data or services, an adversary can cause a target to make incorrect decisions about how to proceed.)",
                    "Gain Privileges (By impersonating identities that have an increased level of access, an adversary gain privilege that they many not have otherwise had.)",
                    "Hide Activities (Faking the source of data or services can be used to create a false trail in logs as the target will associated any actions with the impersonated identity instead of the adversary.)"
                ]
            },
            "x_capec_prerequisites": [
                "This pattern of attack is only applicable when a downstream user leverages tokens to verify identity, and then takes action based on that identity."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2018-05-31T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
            "external_references": [
                {
                    "external_id": "CAPEC-650",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/650.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-553",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/553.html"
                }
            ],
            "id": "attack-pattern--b9cddd44-a617-4a56-8560-0ca1cd9af42a",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Upload a Web Shell to a Web Server",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands"
                ]
            },
            "x_capec_prerequisites": [
                "The web server is susceptible to one of the various web application exploits that allows for uploading a shell file."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed on to the other component as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identify between two components. MITM attacks differ from sniffing attacks since they often modify the communications prior to delivering it to the intended recipient. These attacks also differ from interception attacks since they may forward the sender's original unmodified data, after copying it, instead of keeping it for themselves.",
            "external_references": [
                {
                    "external_id": "CAPEC-94",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/94.html"
                },
                {
                    "external_id": "CWE-300",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/300.html"
                },
                {
                    "external_id": "CWE-290",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/290.html"
                },
                {
                    "external_id": "CWE-593",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/593.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-294",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/294.html"
                },
                {
                    "external_id": "CWE-724",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/724.html"
                },
                {
                    "description": "M. Bishop, Computer Security: Art and Science, 2003, Addison-Wesley",
                    "external_id": "REF-553",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--38964770-4f39-4191-89cf-73a625162b2b",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Man in the Middle Attack",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Leveraging security vulnerabilities and inherent functionality within web browsers, an adversary may be able to execute a \"Man in the Browser\" (MITB) attack. The initial compromise of this attack is generally a Trojan delivered to a victim's system via phishing attacks, drive-by malware installations, or malicious browser extensions. Once the Trojan is on the victim system, the adversary can observe and intercept traffic such as cookies, HTTP sessions, and SSL client certificate, which may allow for browser pivoting into an authenticated session. MITB attacks also circumvent common security mechanisms such as two and three factor authentication, as well as SSL/PKI.</xhtml:p>\n               <xhtml:p>For example, after installing a Trojan, an adversary positions himself between the victim and their banking institution. The victim begins by initiating a funds transfer from their personal savings to their personal checking account. Using injected JavaScript, the adversary captures this request and modifies it to transfer an increased amount of funds to an account that he controls, before sending it to the bank. The bank processes the transfer and sends the confirmation notice back to the victim, which is instead intercepted by the adversary. The adversary modifies the confirmation to reflect the original transaction details and sends this modified message back to the victim. Upon receiving the confirmation, the victim assumes the transfer was successful and is unaware that their money has just been transferred to the adversary.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "There are two components communicating with each other.",
                "An attacker is able to identify the nature and mechanism of communication between the two target components.",
                "An attacker can eavesdrop on the communication between the target components.",
                "Strong mutual authentication is not used between the two target components yielding opportunity for attacker interposition.",
                "The communication occurs in clear (not encrypted) or with insufficient and spoofable encryption."
            ],
            "x_capec_skills_required": {
                "Medium": "This attack can get sophisticated since the attack may use cryptography."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2017-15906
{
    "error": "vulnerability not found"
}
CVE-2016-10708
{
    "id": "bundle--3102b76d-2727-4b3f-888b-b445299b2f44",
    "objects": [
        {
            "created": "2020-05-24T00:02:24.610Z",
            "description": "sshd in OpenSSH before 7.4 allows remote attackers to cause a denial of service (NULL pointer dereference and daemon crash) via an out-of-sequence NEWKEYS message, as demonstrated by Honggfuzz, related to kex.c and packet.c.",
            "external_references": [
                {
                    "external_id": "CVE-2016-10708",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--159c8eba-0b9e-3266-bc5f-b7dc5434a0cc",
            "modified": "2020-05-24T00:02:24.610Z",
            "name": "CVE-2016-10708",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-476"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://blog.swiecki.net/2018/01/fuzzing-tcp-servers.html",
                    "refsource": "MISC",
                    "tags": [
                        "Patch",
                        "Third Party Advisory"
                    ],
                    "url": "http://blog.swiecki.net/2018/01/fuzzing-tcp-servers.html"
                },
                {
                    "name": "102780",
                    "refsource": "BID",
                    "tags": [
                        "Third Party Advisory",
                        "VDB Entry"
                    ],
                    "url": "http://www.securityfocus.com/bid/102780"
                },
                {
                    "name": "https://anongit.mindrot.org/openssh.git/commit/?id=28652bca29046f62c7045e933e6b931de1d16737",
                    "refsource": "MISC",
                    "tags": [
                        "Patch",
                        "Third Party Advisory"
                    ],
                    "url": "https://anongit.mindrot.org/openssh.git/commit/?id=28652bca29046f62c7045e933e6b931de1d16737"
                },
                {
                    "name": "https://kc.mcafee.com/corporate/index?page=content&id=SB10284",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10284"
                },
                {
                    "name": "[debian-lts-announce] 20180126 [SECURITY] [DLA 1257-1] openssh security update",
                    "refsource": "MLIST",
                    "tags": [
                        "Mailing List",
                        "Third Party Advisory"
                    ],
                    "url": "https://lists.debian.org/debian-lts-announce/2018/01/msg00031.html"
                },
                {
                    "name": "[debian-lts-announce] 20180910 [SECURITY] [DLA 1500-1] openssh security update",
                    "refsource": "MLIST",
                    "tags": [
                        "Mailing List",
                        "Third Party Advisory"
                    ],
                    "url": "https://lists.debian.org/debian-lts-announce/2018/09/msg00010.html"
                },
                {
                    "name": "https://security.netapp.com/advisory/ntap-20180423-0003/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "https://security.netapp.com/advisory/ntap-20180423-0003/"
                },
                {
                    "name": "USN-3809-1",
                    "refsource": "UBUNTU",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "https://usn.ubuntu.com/3809-1/"
                },
                {
                    "name": "https://www.openssh.com/releasenotes.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "https://www.openssh.com/releasenotes.html"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2010-4755
{
    "id": "bundle--e7d1c455-148d-4083-a737-39d087ddfc40",
    "objects": [
        {
            "created": "2020-05-24T00:01:19.219Z",
            "description": "The (1) remote_glob function in sftp-glob.c and the (2) process_put function in sftp.c in OpenSSH 5.8 and earlier, as used in FreeBSD 7.3 and 8.1, NetBSD 5.0.2, OpenBSD 4.7, and other products, allow remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in SSH_FXP_STAT requests to an sftp daemon, a different vulnerability than CVE-2010-2632.",
            "external_references": [
                {
                    "external_id": "CVE-2010-4755",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--982cbe7d-e9da-378b-bdbc-7e9ca9e0d097",
            "modified": "2020-05-24T00:01:19.219Z",
            "name": "CVE-2010-4755",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-399"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://cvsweb.netbsd.org/cgi-bin/cvsweb.cgi/src/crypto/dist/ssh/Attic/sftp.c#rev1.21.6.1",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://cvsweb.netbsd.org/cgi-bin/cvsweb.cgi/src/crypto/dist/ssh/Attic/sftp.c#rev1.21.6.1"
                },
                {
                    "name": "http://cvsweb.netbsd.org/cgi-bin/cvsweb.cgi/src/crypto/dist/ssh/Attic/sftp-glob.c#rev1.13.12.1",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://cvsweb.netbsd.org/cgi-bin/cvsweb.cgi/src/crypto/dist/ssh/Attic/sftp-glob.c#rev1.13.12.1"
                },
                {
                    "name": "http://cxib.net/stuff/glob-0day.c",
                    "refsource": "MISC",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://cxib.net/stuff/glob-0day.c"
                },
                {
                    "name": "NetBSD-SA2010-008",
                    "refsource": "NETBSD",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2010-008.txt.asc"
                },
                {
                    "name": "20101007 Multiple Vendors libc/glob(3) resource exhaustion (+0day remote ftpd-anon)",
                    "refsource": "SREASONRES",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://securityreason.com/achievement_securityalert/89"
                },
                {
                    "name": "http://securityreason.com/exploitalert/9223",
                    "refsource": "MISC",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://securityreason.com/exploitalert/9223"
                },
                {
                    "name": "8116",
                    "refsource": "SREASON",
                    "tags": [],
                    "url": "http://securityreason.com/securityalert/8116"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2008-5161
{
    "id": "bundle--fb6e7e92-27f0-4c7e-846c-9043b220ccfb",
    "objects": [
        {
            "created": "2020-05-24T00:01:54.858Z",
            "description": "Error handling in the SSH protocol in (1) SSH Tectia Client and Server and Connector 4.0 through 4.4.11, 5.0 through 5.2.4, and 5.3 through 5.3.8; Client and Server and ConnectSecure 6.0 through 6.0.4; Server for Linux on IBM System z 6.0.4; Server for IBM z/OS 5.5.1 and earlier, 6.0.0, and 6.0.1; and Client 4.0-J through 4.3.3-J and 4.0-K through 4.3.10-K; and (2) OpenSSH 4.7p1 and possibly other versions, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plaintext data from an arbitrary block of ciphertext in an SSH session via unknown vectors. | http://securitytracker.com/alerts/2008/Nov/1021235.html\n\nCBC mode connections are affected | With a valid username and password patches are available at the following link:\nhttps://downloads.ssh.com/",
            "external_references": [
                {
                    "external_id": "CVE-2008-5161",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "modified": "2020-05-24T00:01:54.858Z",
            "name": "CVE-2008-5161",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-200"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://isc.sans.org/diary.html?storyid=5366",
                    "refsource": "MISC",
                    "tags": [],
                    "url": "http://isc.sans.org/diary.html?storyid=5366"
                },
                {
                    "name": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10705",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10705"
                },
                {
                    "name": "APPLE-SA-2009-11-09-1",
                    "refsource": "APPLE",
                    "tags": [],
                    "url": "http://lists.apple.com/archives/security-announce/2009/Nov/msg00000.html"
                },
                {
                    "name": "HPSBMA02447",
                    "refsource": "HP",
                    "tags": [],
                    "url": "http://marc.info/?l=bugtraq&m=125017764422557&w=2"
                },
                {
                    "name": "http://openssh.org/txt/cbc.adv",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://openssh.org/txt/cbc.adv"
                },
                {
                    "name": "49872",
                    "refsource": "OSVDB",
                    "tags": [],
                    "url": "http://osvdb.org/49872"
                },
                {
                    "name": "50035",
                    "refsource": "OSVDB",
                    "tags": [],
                    "url": "http://osvdb.org/50035"
                },
                {
                    "name": "50036",
                    "refsource": "OSVDB",
                    "tags": [],
                    "url": "http://osvdb.org/50036"
                },
                {
                    "name": "RHSA-2009:1287",
                    "refsource": "REDHAT",
                    "tags": [],
                    "url": "http://rhn.redhat.com/errata/RHSA-2009-1287.html"
                },
                {
                    "name": "32740",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/32740"
                },
                {
                    "name": "32760",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/32760"
                },
                {
                    "name": "32833",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/32833"
                },
                {
                    "name": "33121",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/33121"
                },
                {
                    "name": "33308",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/33308"
                },
                {
                    "name": "34857",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/34857"
                },
                {
                    "name": "36558",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/36558"
                },
                {
                    "name": "247186",
                    "refsource": "SUNALERT",
                    "tags": [],
                    "url": "http://sunsolve.sun.com/search/document.do?assetkey=1-66-247186-1"
                },
                {
                    "name": "http://support.apple.com/kb/HT3937",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://support.apple.com/kb/HT3937"
                },
                {
                    "name": "http://support.attachmate.com/techdocs/2398.html",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://support.attachmate.com/techdocs/2398.html"
                },
                {
                    "name": "http://support.avaya.com/elmodocs2/security/ASA-2008-503.htm",
                    "refsource": "MISC",
                    "tags": [],
                    "url": "http://support.avaya.com/elmodocs2/security/ASA-2008-503.htm"
                },
                {
                    "name": "http://www.cpni.gov.uk/Docs/Vulnerability_Advisory_SSH.txt",
                    "refsource": "MISC",
                    "tags": [],
                    "url": "http://www.cpni.gov.uk/Docs/Vulnerability_Advisory_SSH.txt"
                },
                {
                    "name": "VU#958563",
                    "refsource": "CERT-VN",
                    "tags": [
                        "US Government Resource"
                    ],
                    "url": "http://www.kb.cert.org/vuls/id/958563"
                },
                {
                    "name": "http://www.rtpro.yamaha.co.jp/RT/FAQ/Security/CPNI957037.html",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://www.rtpro.yamaha.co.jp/RT/FAQ/Security/CPNI957037.html"
                },
                {
                    "name": "20081121 OpenSSH security advisory: cbc.adv",
                    "refsource": "BUGTRAQ",
                    "tags": [],
                    "url": "http://www.securityfocus.com/archive/1/498558/100/0/threaded"
                },
                {
                    "name": "20081123 Revised: OpenSSH security advisory: cbc.adv",
                    "refsource": "BUGTRAQ",
                    "tags": [],
                    "url": "http://www.securityfocus.com/archive/1/498579/100/0/threaded"
                },
                {
                    "name": "32319",
                    "refsource": "BID",
                    "tags": [],
                    "url": "http://www.securityfocus.com/bid/32319"
                },
                {
                    "name": "1021235",
                    "refsource": "SECTRACK",
                    "tags": [],
                    "url": "http://www.securitytracker.com/id?1021235"
                },
                {
                    "name": "1021236",
                    "refsource": "SECTRACK",
                    "tags": [],
                    "url": "http://www.securitytracker.com/id?1021236"
                },
                {
                    "name": "1021382",
                    "refsource": "SECTRACK",
                    "tags": [],
                    "url": "http://www.securitytracker.com/id?1021382"
                },
                {
                    "name": "http://www.ssh.com/company/news/article/953/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.ssh.com/company/news/article/953/"
                },
                {
                    "name": "ADV-2008-3172",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2008/3172"
                },
                {
                    "name": "ADV-2008-3173",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2008/3173"
                },
                {
                    "name": "ADV-2008-3409",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2008/3409"
                },
                {
                    "name": "ADV-2009-1135",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2009/1135"
                },
                {
                    "name": "ADV-2009-3184",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2009/3184"
                },
                {
                    "name": "openssh-sshtectia-cbc-info-disclosure(46620)",
                    "refsource": "XF",
                    "tags": [],
                    "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/46620"
                },
                {
                    "name": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05157667",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05157667"
                },
                {
                    "name": "https://kc.mcafee.com/corporate/index?page=content&id=SB10106",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10106"
                },
                {
                    "name": "https://kc.mcafee.com/corporate/index?page=content&id=SB10163",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10163"
                },
                {
                    "name": "oval:org.mitre.oval:def:11279",
                    "refsource": "OVAL",
                    "tags": [],
                    "url": "https://oval.cisecurity.org/repository/search/definition/oval%3Aorg.mitre.oval%3Adef%3A11279"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:06.304Z",
            "id": "relationship--f70466e1-61a9-44bf-9efb-5c9b9ed209c3",
            "modified": "2020-06-04T19:13:06.304Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--913426fa-ea1f-43b0-8492-1d363ea109d6",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.304Z",
            "id": "relationship--ddad4e6f-cd60-46c4-81b9-752979f42cc2",
            "modified": "2020-06-04T19:13:06.304Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--f190e1b3-e8d6-4aef-817c-b3e7782e2aed",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.304Z",
            "id": "relationship--4febb34f-1fad-4a0d-a45e-a1fd22c5f4c0",
            "modified": "2020-06-04T19:13:06.304Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--87b0d2df-b246-4bf9-aee8-4912e2fa1a30",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.304Z",
            "id": "relationship--8e8744c9-964e-4d8b-adc9-3cbefe0f169d",
            "modified": "2020-06-04T19:13:06.304Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--1fa1539d-4a13-4453-bf43-ad0987b2fbf5",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.304Z",
            "id": "relationship--6f03756c-0598-465c-9f78-3f2a2ae082f3",
            "modified": "2020-06-04T19:13:06.304Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--76e6fe1e-34f2-40cd-8f12-f4d4f9c41808",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.305Z",
            "id": "relationship--ae346d6c-b841-4989-892d-970a9a2974fc",
            "modified": "2020-06-04T19:13:06.305Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--9c520f01-d8ec-425f-90ef-41422cfe083e",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.305Z",
            "id": "relationship--bcc979a5-e08c-493c-aa0a-ac02f5092aba",
            "modified": "2020-06-04T19:13:06.305Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--ef825216-5e5d-43e4-87bf-edcf278fd8c1",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.305Z",
            "id": "relationship--5eb89d87-4430-4916-96e6-9aa1c4bb3606",
            "modified": "2020-06-04T19:13:06.305Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--e6c6d5fb-33e8-43ec-bff5-c0ade9d51304",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.305Z",
            "id": "relationship--8135b1be-3017-48fc-b29d-9f13df10e3f2",
            "modified": "2020-06-04T19:13:06.305Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--88933ba2-fe2a-4b71-ac08-2537c5903b2e",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.305Z",
            "id": "relationship--5812764e-500f-4a1d-b2f3-4dc58025d2a0",
            "modified": "2020-06-04T19:13:06.305Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d780db94-413f-402d-a4d9-cf179b316c8c",
            "target_ref": "vulnerability--f6c3012f-35d4-322a-9ee2-ca2a07f1c127",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.305Z",
            "id": "relationship--5fb18908-fe86-422e-8665-240e5bf2d6f1",
            "modified": "2020-06-04T19:13:06.305Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
            "target_ref": "attack-pattern--d780db94-413f-402d-a4d9-cf179b316c8c",
            "type": "relationship"
        },
        {
            "created": "2017-05-31T21:30:28.187Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used. Adversaries may also use local host files in order to discover the hostname to IP address mappings of remote systems. \n\n### Windows\n\nExamples of tools and commands that acquire this information include \"ping\" or \"net view\" using [Net](https://attack.mitre.org/software/S0039). The contents of the <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> file can be viewed to gain insight into the existing hostname to IP mappings on the system.\n\n### Mac\n\nSpecific to Mac, the <code>bonjour</code> protocol to discover additional Mac-based systems within the same broadcast domain. Utilities such as \"ping\" and others can be used to gather information about remote systems. The contents of the <code>/etc/hosts</code> file can be viewed to gain insight into existing hostname to IP mappings on the system.\n\n### Linux\n\nUtilities such as \"ping\" and others can be used to gather information about remote systems. The contents of the <code>/etc/hosts</code> file can be viewed to gain insight into existing hostname to IP mappings on the system.\n\n### Cloud\n\nIn cloud environments, the above techniques may be used to discover remote systems depending upon the host operating system. In addition, cloud environments often provide APIs with information about remote systems and services.\n",
            "external_references": [
                {
                    "external_id": "T1018",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1018"
                },
                {
                    "external_id": "CAPEC-292",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/292.html"
                }
            ],
            "id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "modified": "2019-10-08T20:36:57.696Z",
            "name": "Remote System Discovery",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Praetorian",
                "RedHuntLabs (@redhuntlabs)"
            ],
            "x_mitre_data_sources": [
                "Network protocol analysis",
                "Process monitoring",
                "Process use of network",
                "Process command-line parameters"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1086). ",
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows",
                "GCP",
                "Azure",
                "AWS"
            ],
            "x_mitre_version": "2.0"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary actively probes the target in a manner that is designed to solicit information that could be leveraged for malicious purposes. This is achieved by exploring the target via ordinary interactions for the purpose of gathering intelligence about the target, or by sending data that is syntactically invalid or non-standard in an attempt to produce a response that contains the desired data. As a result of these interactions, the adversary is able to obtain information from the target that aids the attacker in making inferences about its security, configuration, or potential vulnerabilities. Examplar exchanges with the target may trigger unhandled exceptions or verbose error messages that reveal information like stack traces, configuration information, path information, or database design. This type of attack also includes the manipulation of query strings in a URI to produce invalid SQL queries, or by trying alternative path values in the hope that the server will return useful information.",
            "external_references": [
                {
                    "external_id": "CAPEC-116",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/116.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                }
            ],
            "id": "attack-pattern--913426fa-ea1f-43b0-8492-1d363ea109d6",
            "modified": "2017-05-01T00:00:00.000Z",
            "name": "Excavation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An adversary requires some way of interacting with the system."
            ],
            "x_capec_resources_required": [
                "A tool, such as a MITM Proxy or a fuzzer, that is capable of generating and injecting custom inputs to be used in the attack."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker.",
            "external_references": [
                {
                    "external_id": "CAPEC-13",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/13.html"
                },
                {
                    "external_id": "CWE-353",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/353.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-15",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/15.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--f190e1b3-e8d6-4aef-817c-b3e7782e2aed",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Subverting Environment Variable Values",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Changing the LD_LIBRARY_PATH environment variable in TELNET will cause TELNET to use an alternate (possibly Trojan) version of a function library. The Trojan library must be accessible using the target file system and should include Trojan code that will allow the user to log in with a bad password. This requires that the attacker upload the Trojan library to a specific location on the target. As an alternative to uploading a Trojan file, some file systems support file paths that include remote addresses, such as \\\\172.16.2.100\\shared_files\\trojan_dll.dll. See also: Path Manipulation (CVE-1999-0073)",
                "The HISTCONTROL environment variable keeps track of what should be saved by the history command and eventually into the ~/.bash_history file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". HISTCONTROL can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \" ls\" will not be saved, but \"ls\" would be saved by history. HISTCONTROL does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An environment variable is accessible to the user.",
                "An environment variable used by the application can be tainted with user supplied data.",
                "Input data used in an environment variable is not validated properly.",
                "The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable."
            ],
            "x_capec_skills_required": {
                "High": "Some more advanced attacks may require knowledge about protocols and probing technique which help controlling a variable. The malicious user may try to understand the authentication mechanism in order to defeat it.",
                "Low": "In a web based scenario, the client controls the data that it submitted to the server. So anybody can try to send malicious data and try to bypass the authentication mechanism."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary engages in probing and exploration activities to identify constituents and properties of the target. Footprinting is a general term to describe a variety of information gathering techniques, often used by attackers in preparation for some attack. It consists of using tools to learn as much as possible about the composition, configuration, and security mechanisms of the targeted application, system or network. Information that might be collected during a footprinting effort could include open ports, applications and their versions, network topology, and similar information. While footprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.",
            "external_references": [
                {
                    "external_id": "CAPEC-169",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/169.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Manic Velocity, Footprinting And The Basics Of Hacking, Web Textfiles",
                    "external_id": "REF-31",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://web.textfiles.com/hacking/footprinting.txt"
                },
                {
                    "description": "Eddie Sutton, Footprint: What Is And How Do You Erase Them",
                    "external_id": "REF-32",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.infosecwriters.com/text_resources/pdf/Footprinting.pdf"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--87b0d2df-b246-4bf9-aee8-4912e2fa1a30",
            "modified": "2017-05-01T00:00:00.000Z",
            "name": "Footprinting",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_example_instances": [
                "In this example let us look at the website http://www.example.com to get much information we can about Alice. From the website, we find that Alice also runs foobar.org. We type in www example.com into the prompt of the Name Lookup window in a tool, and our result is this IP address: 192.173.28.130 We type the domain into the Name Lookup prompt and we are given the same IP. We can safely say that example and foobar.org are hosted on the same box. But if we were to do a reverse name lookup on the IP, which domain will come up? www.example.com or foobar.org? Neither, the result is nijasvspirates.org. So nijasvspirates.org is the name of the box hosting 31337squirrel.org and foobar.org. So now that we have the IP, let's check to see if nijasvspirates is awake. We type the IP into the prompt in the Ping window. We'll set the interval between packets to 1 millisecond. We'll set the number of seconds to wait until a ping times out to 5. We'll set the ping size to 500 bytes and we'll send ten pings. Ten packets sent and ten packets received. nijasvspirates.org returned a message to my computer within an average of 0.35 seconds for every packet sent. nijasvspirates is alive. We open the Whois window and type nijasvspirates.org into the Query prompt, and whois.networksolutions.com into the Server prompt. This means we'll be asking Network Solutions to tell us everything they know about nijasvspirates.org. The result is this laundry list of info: Registrant: FooBar (nijasvspirates -DOM) p.o.box 11111 SLC, UT 84151 US Domain Name: nijasvspirates.ORG Administrative Contact, Billing Contact: Smith, John jsmith@anonymous.net FooBar p.o.box 11111 SLC, UT 84151 555-555-6103 Technical Contact: Johnson, Ken kj@fierymonkey.org fierymonkey p.o.box 11111 SLC, UT 84151 555-555-3849 Record last updated on 17-Aug-2001. Record expires on 11-Aug-2002. Record created on 11-Aug-2000. Database last updated on 12-Dec-2001 04:06:00 EST. Domain servers in listed order: NS1. fierymonkey.ORG 192.173.28.130 NS2. fierymonkey.ORG 64.192.168.80 A corner stone of footprinting is Port Scanning. Let's port scan nijasvspirates.org and see what kind of services are running on that box. We type in the nijasvspirates IP into the Host prompt of the Port Scan window. We'll start searching from port number 1, and we'll stop at the default Sub7 port, 27374. Our results are: 21 TCP ftp 22 TCP ssh SSH-1.99-OpenSSH_2.30 25 TCP smtp 53 TCP domain 80 TCP www 110 TCP pop3 111 TCP sunrpc 113 TCP ident Just by this we know that Alice is running a website and email, using POP3, SUNRPC (SUN Remote Procedure Call), and ident."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An application must publicize identifiable information about the system or application through voluntary or involuntary means. Certain identification details of information systems are visible on communication networks (e.g., if an adversary uses a sniffer to inspect the traffic) due to their inherent structure and protocol standards. Any system or network that can be detected can be footprinted. However, some configuration choices may limit the useful information that can be collected during a footprinting attack."
            ],
            "x_capec_resources_required": [
                "The adversary requires a variety of tools to collect information about the target. These include port/network scanners and tools to analyze responses from applications to determine version and configuration information. Footprinting a system adequately may also take a few days if the attacker wishes the footprinting attempt to go undetected."
            ],
            "x_capec_skills_required": {
                "Low": "The adversary knows how to send HTTP request, run the scan tool."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "external_references": [
                {
                    "external_id": "CAPEC-22",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-290",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/290.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "external_id": "CWE-693",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/693.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--1fa1539d-4a13-4453-bf43-ad0987b2fbf5",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Exploiting Trust in Client",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Web applications may use JavaScript to perform client side validation, request encoding/formatting, and other security functions, which provides some usability benefits and eliminates some client-server round-tripping. However, the web server cannot assume that the requests it receives have been subject to those validations, because an attacker can use an alternate method for crafting the HTTP Request and submit data that contains poisoned values designed to spoof a user and/or get the web server to disclose information.",
                "Web 2.0 style applications may be particularly vulnerable because they in large part rely on existing infrastructure which provides scalability without the ability to govern the clients. Attackers identify vulnerabilities that either assume the client side is responsible for some security services (without the requisite ability to ensure enforcement of these checks) and/or the lack of a hardened, default deny server configuration that allows for an attacker probing for weaknesses in unexpected ways. Client side validation, request formatting and other services may be performed, but these are strictly usability enhancements not security enhancements.",
                "Many web applications use client side scripting like JavaScript to enforce authentication, authorization, session state and other variables, but at the end of day they all make requests to the server. These client side checks may provide usability and performance gains, but they lack integrity in terms of the http request. It is possible for an attacker to post variables directly to the server without using any of the client script security checks and customize the patterns to impersonate other users or probe for more information.",
                "Many message oriented middleware systems like MQ Series are rely on information that is passed along with the message request for making authorization decisions, for example what group or role the request should be passed. However, if the message server does not or cannot authenticate the authorization information in the request then the server's policy decisions about authorization are trivial to subvert because the client process can simply elevate privilege by passing in elevated group or role information which the message server accepts and acts on."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."
            ],
            "x_capec_resources_required": [
                "Ability to communicate synchronously or asynchronously with server"
            ],
            "x_capec_skills_required": {
                "Medium": "The attacker must have fairly detailed knowledge of the syntax and semantics of client/server communications protocols and grammars"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary compares output from a target system to known indicators that uniquely identify specific details about the target. Fingerprinting by itself is not usually detrimental to the target. However, the information gathered through fingerprinting often enables an adversary to discover existing weaknesses in the target.",
            "external_references": [
                {
                    "external_id": "CAPEC-224",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/224.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                }
            ],
            "id": "attack-pattern--76e6fe1e-34f2-40cd-8f12-f4d4f9c41808",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Fingerprinting",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "A means by which to interact with the target system directly."
            ],
            "x_capec_resources_required": [
                "If on a network, the adversary needs a tool capable of viewing network communications at the packet level and with header information, like Mitmproxy, Wireshark, or Fiddler."
            ],
            "x_capec_skills_required": {
                "Medium": "Some fingerprinting activity requires very specific knowledge of how different operating systems respond to various TCP/IP requests. Application fingerprinting can be as easy as envoking the application with the correct command line argument, or mouse clicking in the appropriate place on the screen."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping', in order to determine if a target system is responsive. If the request is not blocked by a firewall or ACL, the target host will respond with an ICMP Type 0 Echo Reply datagram. This type of exchange is usually referred to as a 'Ping' due to the Ping utility present in almost all operating systems. Ping, as commonly implemented, allows a user to test for alive hosts, measure round-trip time, and measure the percentage of packet loss. Performing this operation for a range of hosts on the network is known as a 'Ping Sweep'. While the Ping utility is useful for small-scale host discovery, it was not designed for rapid or efficient host discovery over large network blocks. Other scanning utilities have been created that make ICMP ping sweeps easier to perform. Most networks filter ingress ICMP Type 8 messages for security reasons. Various other methods of performing ping sweeps have developed as a result. It is important to recognize the key security goal of the adversary is to discover if an IP address is alive, or has a responsive host. To this end, virtually any type of ICMP message, as defined by RFC 792 is useful. An adversary can cycle through various types of ICMP messages to determine if holes exist in the firewall configuration. When ICMP ping sweeps fail to discover hosts, other protocols can be used for the same purpose, such as TCP SYN or ACK segments, UDP datagrams sent to closed ports, etc.",
            "external_references": [
                {
                    "external_id": "CAPEC-285",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "J. Postel, RFC792 - Internet Control Messaging Protocol, 1981--09, Defense Advanced Research Projects Agency (DARPA)",
                    "external_id": "REF-123",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.faqs.org/rfcs/rfc792.html"
                },
                {
                    "description": "R. Braden, Ed., RFC1122 - Requirements for Internet Hosts - Communication Layers, 1989--10",
                    "external_id": "REF-124",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.faqs.org/rfcs/rfc1122.html"
                },
                {
                    "description": "Mark Wolfgang, Host Discovery with Nmap, 2002--11",
                    "external_id": "REF-125",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://nmap.org/docs/discovery.pdf"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--9c520f01-d8ec-425f-90ef-41422cfe083e",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "ICMP Echo Request Ping",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Other (A successful attack of this kind can identify open ports and available services on a system.)"
                ]
            },
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The ability to send an ICMP type 8 query (Echo Request) to a remote target and receive an ICMP type 0 message (ICMP Echo Reply) in response. Any firewalls or access control lists between the sender and receiver must allow ICMP Type 8 and ICMP Type 0 messages in order for a ping operation to succeed."
            ],
            "x_capec_resources_required": [
                "Scanners or utilities that provide the ability to send custom ICMP queries."
            ],
            "x_capec_skills_required": {
                "Low": "The adversary needs to know certain linux commands for this type of attack."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary uses a SYN scan to determine the status of ports on the remote target. SYN scanning is the most common type of port scanning that is used because of its enormous advantages and few drawbacks. As a result, novice attackers tend to overly rely on the SYN scan while performing system reconnaissance. As a scanning method, the primary advantages of SYN scanning are its universality and speed. RFC 793 defines the required behavior of any TCP/IP device in that an incoming connection request begins with a SYN packet, which in turn must be followed by a SYN/ACK packet from the receiving service. For this reason, like TCP Connect scanning, SYN scanning works against any TCP stack. Unlike TCP Connect scanning, it is possible to scan thousands of ports per second using this method. This type of scanning is usually referred to as 'half-open' scanning because it does not complete the three-way handshake. The scanning rate is extremely fast because no time is wasted completing the handshake or tearing down the connection. TCP SYN scanning can also immediately detect 3 of the 4 important types of port status: open, closed, and filtered. When a SYN is sent to an open port and unfiltered port, a SYN/ACK will be generated. This technique allows an attacker to scan through stateful firewalls due to the common configuration that TCP SYN segments for a new connection will be allowed for almost any port. When a SYN packet is sent to a closed port a RST is generated, indicating the port is closed. When SYN scanning to a particular port generates no response, or when the request triggers ICMP Type 3 unreachable errors, the port is filtered. A TCP Connect scan has the following characteristics:",
            "external_references": [
                {
                    "external_id": "CAPEC-287",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Defense Advanced Research Projects Agency Information Processing Techniques Office, Information Sciences Institute University of Southern California, RFC793 - Transmission Control Protocol, 1981--09, Defense Advanced Research Projects Agency (DARPA)",
                    "external_id": "REF-128",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.faqs.org/rfcs/rfc793.html"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, The Art of Port Scanning (Volume: 7, Issue. 51), Phrack Magazine, 1997",
                    "external_id": "REF-130",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://phrack.org/issues/51/11.html"
                }
            ],
            "id": "attack-pattern--ef825216-5e5d-43e4-87bf-edcf278fd8c1",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "TCP SYN Scan",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other (A successful attack of this kind can identify open ports and available services on a system.)",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "This scan type is not possible with some operating systems (Windows XP SP 2). On Linux and Unix systems it requires root privileges to use raw sockets."
            ],
            "x_capec_resources_required": [
                "The ability to send TCP SYN segments to a host during network reconnaissance via the use of a network mapper or scanner, or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary enumerates the MX records for a given via a DNS query. This type of information gathering returns the names of mail servers on the network. Mail servers are often not exposed to the Internet but are located within the DMZ of a network protected by a firewall. A side effect of this configuration is that enumerating the MX records for an organization my reveal the IP address of the firewall or possibly other internal systems. Attackers often resort to MX record enumeration when a DNS Zone Transfer is not possible.",
            "external_references": [
                {
                    "external_id": "CAPEC-290",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/290.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--e6c6d5fb-33e8-43ec-bff5-c0ade9d51304",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Enumerate Mail Exchange (MX) Records",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "The adversary requires access to a DNS server that will return the MX records for a network."
            ],
            "x_capec_resources_required": [
                "A command-line utility or other application capable of sending requests to the DNS server is necessary."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some external DNS servers will return a list of IP address and valid hostnames. Under certain conditions, it may even be possible to obtain Zone data about the organization's internal network. When successful the attacker learns valuable information about the topology of the target organization, including information about particular servers, their role within the IT structure, and possibly information about the operating systems running upon the network. This is configuration dependent behavior so it may also be required to search out multiple DNS servers while attempting to find one with ZONE transfers allowed.",
            "external_references": [
                {
                    "external_id": "CAPEC-291",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/291.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--88933ba2-fe2a-4b71-ac08-2537c5903b2e",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "DNS Zone Transfers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_prerequisites": [
                "Access to a DNS server that allows Zone transfers."
            ],
            "x_capec_resources_required": [
                "A client application capable of interacting with the DNS server or a command-line utility or web application that automates DNS interactions."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary sends a probe to an IP address to determine if the host is alive. Host discovery is one of the earliest phases of network reconnaissance. The adversary usually starts with a range of IP addresses belonging to a target network and uses various methods to determine if a host is present at that IP address. Host discovery is usually referred to as 'Ping' scanning using a sonar analogy. The goal is to send a packet through to the IP address and solicit a response from the host. As such, a 'ping' can be virtually any crafted packet whatsoever, provided the adversary can identify a functional host based on its response. An attack of this nature is usually carried out with a 'ping sweep,' where a particular kind of ping is sent to a range of IP addresses.",
            "external_references": [
                {
                    "external_id": "CAPEC-292",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/292.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d780db94-413f-402d-a4d9-cf179b316c8c",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Host Discovery",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "The adversary requires logical access to the target network in order to carry out host discovery."
            ],
            "x_capec_resources_required": [
                "The resources required will differ based upon the type of host discovery being performed. Usually a network scanning tool or scanning script is required due to the volume of requests that must be generated."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2011-4130
{
    "id": "bundle--24682e26-313e-411e-981a-0106904821bf",
    "objects": [
        {
            "created": "2020-05-24T00:02:09.459Z",
            "description": "Use-after-free vulnerability in the Response API in ProFTPD before 1.3.3g allows remote authenticated users to execute arbitrary code via vectors involving an error that occurs after an FTP data transfer.",
            "external_references": [
                {
                    "external_id": "CVE-2011-4130",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--d92fd3e7-62b1-3c39-ad35-4e0a5e5c78e7",
            "modified": "2020-05-24T00:02:09.459Z",
            "name": "CVE-2011-4130",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-399"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3711",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Exploit",
                        "Patch"
                    ],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3711"
                },
                {
                    "name": "http://www.proftpd.org/docs/NEWS-1.3.3g",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://www.proftpd.org/docs/NEWS-1.3.3g"
                },
                {
                    "name": "50631",
                    "refsource": "BID",
                    "tags": [],
                    "url": "http://www.securityfocus.com/bid/50631"
                },
                {
                    "name": "http://www.zerodayinitiative.com/advisories/ZDI-11-328/",
                    "refsource": "MISC",
                    "tags": [],
                    "url": "http://www.zerodayinitiative.com/advisories/ZDI-11-328/"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2010-3867
{
    "id": "bundle--f68f67be-b70e-4925-a9e9-9dc4605052ca",
    "objects": [
        {
            "created": "2020-05-24T00:01:18.265Z",
            "description": "Multiple directory traversal vulnerabilities in the mod_site_misc module in ProFTPD before 1.3.3c allow remote authenticated users to create directories, delete directories, create symlinks, and modify file timestamps via directory traversal sequences in a (1) SITE MKDIR, (2) SITE RMDIR, (3) SITE SYMLINK, or (4) SITE UTIME command.",
            "external_references": [
                {
                    "external_id": "CVE-2010-3867",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--f966121e-4749-3fe7-8273-60f92ca13c3e",
            "modified": "2020-05-24T00:01:18.265Z",
            "name": "CVE-2010-3867",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-22"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3519",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3519"
                },
                {
                    "name": "FEDORA-2010-17091",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2010-November/050687.html"
                },
                {
                    "name": "FEDORA-2010-17098",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2010-November/050703.html"
                },
                {
                    "name": "FEDORA-2010-17220",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2010-November/050726.html"
                },
                {
                    "name": "42047",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/42047"
                },
                {
                    "name": "42052",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/42052"
                },
                {
                    "name": "42217",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/42217"
                },
                {
                    "name": "SSA:2010-305-03",
                    "refsource": "SLACKWARE",
                    "tags": [],
                    "url": "http://slackware.com/security/viewer.php?l=slackware-security&y=2010&m=slackware-security.498209"
                },
                {
                    "name": "DSA-2191",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2011/dsa-2191"
                },
                {
                    "name": "MDVSA-2010:227",
                    "refsource": "MANDRIVA",
                    "tags": [],
                    "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2010:227"
                },
                {
                    "name": "[oss-security] 20101101 Re: Proftpd pre-authentication buffer overflow in Telnet code",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://www.openwall.com/lists/oss-security/2010/11/01/4"
                },
                {
                    "name": "http://www.proftpd.org/docs/NEWS-1.3.3c",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://www.proftpd.org/docs/NEWS-1.3.3c"
                },
                {
                    "name": "44562",
                    "refsource": "BID",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://www.securityfocus.com/bid/44562"
                },
                {
                    "name": "ADV-2010-2853",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2010/2853"
                },
                {
                    "name": "ADV-2010-2941",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2010/2941"
                },
                {
                    "name": "ADV-2010-2959",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2010/2959"
                },
                {
                    "name": "ADV-2010-2962",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2010/2962"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:06.469Z",
            "id": "relationship--30de688e-24d0-4637-a930-d41f6cc637c2",
            "modified": "2020-06-04T19:13:06.469Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--faf0ec21-da60-4efc-8c8e-7a6b63bea170",
            "target_ref": "vulnerability--f966121e-4749-3fe7-8273-60f92ca13c3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.470Z",
            "id": "relationship--b69e84bd-0b15-40cd-a885-612fbb759f7e",
            "modified": "2020-06-04T19:13:06.470Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--feed1b00-2f2b-490f-aee1-0de5b1fbf732",
            "target_ref": "vulnerability--f966121e-4749-3fe7-8273-60f92ca13c3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.470Z",
            "id": "relationship--95c979f3-4200-48ee-b955-f478e164ab85",
            "modified": "2020-06-04T19:13:06.470Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--36fd3642-e601-4392-b25b-48df2fdecf62",
            "target_ref": "vulnerability--f966121e-4749-3fe7-8273-60f92ca13c3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.470Z",
            "id": "relationship--b7cf21bf-1fa1-4864-b019-ada1e32e5c18",
            "modified": "2020-06-04T19:13:06.470Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--07e5901d-0f6d-41a9-ac19-e00eecece95f",
            "target_ref": "vulnerability--f966121e-4749-3fe7-8273-60f92ca13c3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.470Z",
            "id": "relationship--4f1d3f7e-616d-44e6-827d-aefd72540d61",
            "modified": "2020-06-04T19:13:06.470Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--eba7bbc3-fb5e-46c4-8547-742d1d144fb3",
            "target_ref": "vulnerability--f966121e-4749-3fe7-8273-60f92ca13c3e",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary uses path manipulation methods to exploit insufficient input validation of a target to obtain access to data that should be not be retrievable by ordinary well-formed requests. A typical variety of this attack involves specifying a path to a desired file together with dot-dot-slash characters, resulting in the file access API or function traversing out of the intended directory structure and into the root file system. By replacing or modifying the expected path information the access function or API retrieves the file desired by the attacker. These attacks either involve the attacker providing a complete path to a targeted file or using control characters (e.g. path separators (/ or \\) and/or dots (.)) to reach desired directories or files.",
            "external_references": [
                {
                    "external_id": "CAPEC-126",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/126.html"
                },
                {
                    "external_id": "CWE-22",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "The OWASP Application Security Desk Reference, 2009, The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-8",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://www.owasp.org/index.php/Path_Traversal"
                },
                {
                    "description": "OWASP Testing Guide (v3), 2010, The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-9",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://www.owasp.org/index.php/Testing_for_Path_Traversal_(OWASP-AZ-001)"
                },
                {
                    "description": "WASC Threat Classification 2.0, 2010, The Web Application Security Consortium (WASC)",
                    "external_id": "REF-10",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://projects.webappsec.org/w/page/13246952/Path-Traversal"
                }
            ],
            "id": "attack-pattern--faf0ec21-da60-4efc-8c8e-7a6b63bea170",
            "modified": "2017-01-09T00:00:00.000Z",
            "name": "Path Traversal",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_alternate_terms": [
                "Directory Traversal"
            ],
            "x_capec_consequences": {
                "Availability": [
                    "Execute Unauthorized Commands (The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.)",
                    "Unreliable Execution (The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the software.)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.)",
                    "Read Data (The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.)"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.)",
                    "Modify Data (The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>An example of using path traversal to attack some set of resources on a web server is to use a standard HTTP request</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">http://example/../../../../../etc/passwd</xhtml:div>\n               <xhtml:p>From an attacker point of view, this may be sufficient to gain access to the password file on a poorly protected system. If the attacker can list directories of critical resources then read only access is not sufficient to protect the system.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The attacker must be able to control the path that is requested of the target.",
                "The target must fail to adequately sanitize incoming paths"
            ],
            "x_capec_resources_required": [
                "The ability to manually manipulate path information either directly through a client application relative to the service or application or via a proxy application."
            ],
            "x_capec_skills_required": {
                "Low": "Simple command line attacks or to inject the malicious payload in a web page.",
                "Medium": "Customizing attacks to bypass non trivial filters in the application."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
            "external_references": [
                {
                    "external_id": "CAPEC-64",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/64.html"
                },
                {
                    "external_id": "CWE-177",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/177.html"
                },
                {
                    "external_id": "CWE-171",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/171.html"
                },
                {
                    "external_id": "CWE-173",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html"
                },
                {
                    "external_id": "CWE-172",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/172.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-21",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/21.html"
                },
                {
                    "external_id": "CWE-22",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gunter Ollmann, URL Encoded Attacks - Attacks using the common web browser, CGISecurity.com",
                    "external_id": "REF-495",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cgisecurity.com/lib/URLEmbeddedAttacks.html"
                },
                {
                    "description": "T. Berners-Lee, R. Fielding, L. Masinter, RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax, 2005--01",
                    "external_id": "REF-496",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.ietf.org/rfc/rfc3986.txt"
                },
                {
                    "description": "T. Berners-Lee, L. Masinter, M. McCahill, RFC 1738 - Uniform Resource Locators (URL), 1994--12",
                    "external_id": "REF-497",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.ietf.org/rfc/rfc1738.txt"
                },
                {
                    "description": "HTML URL Encoding Reference, W3Schools.com, Refsnes Data",
                    "external_id": "REF-498",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.w3schools.com/tags/ref_urlencode.asp"
                },
                {
                    "description": "The URLEncode and URLDecode Page, Albion Research Ltd",
                    "external_id": "REF-499",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.albionresearch.com/misc/urlencode.php"
                },
                {
                    "description": "David Wheeler, Secure Programming for Linux and Unix HOWTO",
                    "external_id": "REF-500",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.dwheeler.com/secure-programs/Secure-Programs-HOWTO/filter-html.html#VALIDATING-URIS"
                }
            ],
            "id": "attack-pattern--feed1b00-2f2b-490f-aee1-0de5b1fbf732",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Attack Example: Combined Encodings CesarFTP</xhtml:p>\n               <xhtml:p>Alexandre Cesari released a freeware FTP server for Windows that fails to provide proper filtering against multiple encoding. The FTP server, CesarFTP, included a Web server component that could be attacked with a combination of the triple-dot and URL encoding attacks.</xhtml:p>\n               <xhtml:p>An attacker could provide a URL that included a string like</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">/...%5C/</xhtml:div>\n               <xhtml:p>This is an interesting exploit because it involves an aggregation of several tricks: the escape character, URL encoding, and the triple dot.</xhtml:p>See also: CVE-2001-1335"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application accepts and decodes URL string request.",
                "The application performs insufficient filtering/canonicalization on the URLs."
            ],
            "x_capec_skills_required": {
                "Low": "An attacker can try special characters in the URL and bypass the URL validation.",
                "Medium": "The attacker may write a script to defeat the input filtering mechanism."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
            "external_references": [
                {
                    "external_id": "CAPEC-76",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/76.html"
                },
                {
                    "external_id": "CWE-23",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/23.html"
                },
                {
                    "external_id": "CWE-22",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-77",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/77.html"
                },
                {
                    "external_id": "CWE-346",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/346.html"
                },
                {
                    "external_id": "CWE-348",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/348.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-264",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/264.html"
                },
                {
                    "external_id": "CWE-272",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/272.html"
                },
                {
                    "external_id": "CWE-59",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/59.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-15",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/15.html"
                },
                {
                    "external_id": "CWE-715",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/715.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--36fd3642-e601-4392-b25b-48df2fdecf62",
            "modified": "2017-01-09T00:00:00.000Z",
            "name": "Manipulating Web Input to File System Calls",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>The attacker uses relative path traversal to access files in the application. This is an example of accessing user's password file.</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"attack\">http://www.example.com/getProfile.jsp?filename=../../../../etc/passwd</xhtml:div>\n               <xhtml:p>However, the target application employs regular expressions to make sure no relative path sequences are being passed through the application to the web page. The application would replace all matches from this regex with the empty string.</xhtml:p>\n               <xhtml:p>Then an attacker creates special payloads to bypass this filter:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"attack\">http://www.example.com/getProfile.jsp?filename=%2e%2e/%2e%2e/%2e%2e/%2e%2e /etc/passwd</xhtml:div>\n               <xhtml:p>When the application gets this input string, it will be the desired vector by the attacker.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Program must allow for user controlled variables to be applied directly to the filesystem"
            ],
            "x_capec_skills_required": {
                "Low": "To identify file system entry point and execute against an over-privileged system interface"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the use of the backslash in alternate encoding. An attacker can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the attacker tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.",
            "external_references": [
                {
                    "external_id": "CAPEC-78",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/78.html"
                },
                {
                    "external_id": "CWE-180",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/180.html"
                },
                {
                    "external_id": "CWE-181",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/181.html"
                },
                {
                    "external_id": "CWE-173",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html"
                },
                {
                    "external_id": "CWE-171",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/171.html"
                },
                {
                    "external_id": "CWE-172",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/172.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-21",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/21.html"
                },
                {
                    "external_id": "CWE-22",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--07e5901d-0f6d-41a9-ac19-e00eecece95f",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Using Escaped Slashes in Alternate Encoding",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>For example, the byte pair \\0 might result in a single zero byte (a NULL) being sent. Another example is \\t, which is sometimes converted into a tab character. There is often an equivalent encoding between the back slash and the escaped back slash. This means that \\/ results in a single forward slash. A single forward slash also results in a single forward slash. The encoding looks like this:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">/ yields /\\/ yields /</xhtml:div>\n            ",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Escaped Slashes in Alternate Encodings</xhtml:div>\n               <xhtml:p>An attack leveraging this pattern is very simple. If you believe the target may be filtering the slash, attempt to supply \\/ and see what happens. Example command strings to try out include</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">CWD ..\\/..\\/..\\/..\\/winnt</xhtml:div>\n               <xhtml:p>which converts in many cases to</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">CWD ../../../../winnt</xhtml:div>\n               <xhtml:p>To probe for this kind of problem, a small C program that uses string output routines can be very useful. File system calls make excellent testing fodder. The simple snippet</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">int main(int argc, char* argv[]){<xhtml:div style=\"margin-left:10px;\">puts(\"\\/ \\\\ \\? \\. \\| \");return 0;</xhtml:div>\n                  }</xhtml:div>\n               <xhtml:p>produces the output</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">/ \\ ? . |</xhtml:div>\n               <xhtml:p>Clearly, the back slash is ignored, and thus we have hit on a number of alternative encodings to experiment with. Given our previous example, we can extend the attack to include other possibilities:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">CWD ..\\?\\?\\?\\?\\/..\\/..\\/..\\/winntCWD \\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/winntCWD ..\\|\\|\\|\\|\\/..\\/..\\/..\\/winnt</xhtml:div>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application accepts the backlash character as escape character.",
                "The application server does incomplete input data decoding, filtering and validation."
            ],
            "x_capec_skills_required": {
                "Low": "The attacker can naively try backslash character and discover that the target host uses it as escape character.",
                "Medium": "The attacker may need deep understanding of the host target in order to exploit the vulnerability. The attacker may also use automated tools to probe for this vulnerability."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
            "external_references": [
                {
                    "external_id": "CAPEC-79",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/79.html"
                },
                {
                    "external_id": "CWE-173",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html"
                },
                {
                    "external_id": "CWE-171",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/171.html"
                },
                {
                    "external_id": "CWE-180",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/180.html"
                },
                {
                    "external_id": "CWE-181",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/181.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-21",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/21.html"
                },
                {
                    "external_id": "CWE-22",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-185",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/185.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Markus Kuhn, UTF-8 and Unicode FAQ for Unix/Linux, 1999--06---04",
                    "external_id": "REF-525",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cl.cam.ac.uk/~mgk25/unicode.html"
                },
                {
                    "description": "Gunter Ollmann, URL Encoded Attacks - Attacks using the common web browser, CGISecurity.com",
                    "external_id": "REF-495",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cgisecurity.com/lib/URLEmbeddedAttacks.html"
                }
            ],
            "id": "attack-pattern--eba7bbc3-fb5e-46c4-8547-742d1d144fb3",
            "modified": "2017-01-09T00:00:00.000Z",
            "name": "Using Slashes in Alternate Encoding",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Slashes in Alternate Encodings</xhtml:div>\n               <xhtml:p>The two following requests are equivalent on most Web servers:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">http://target server/some_directory\\..\\..\\..\\winnt</xhtml:div>\n               <xhtml:p>is equivalent to</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">http://target server/some_directory/../../../winnt</xhtml:div>\n               <xhtml:p>Multiple encoding conversion problems can also be leveraged as various slashes are instantiated in URL-encoded, UTF-8, or Unicode. Consider the strings</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">http://target server/some_directory\\..%5C..%5C..\\winnt</xhtml:div>\n               <xhtml:p>where %5C is equivalent to the \\ character.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application server accepts paths to locate resources.",
                "The application server does insufficient input data validation on the resource path requested by the user.",
                "The access right to resources are not set properly."
            ],
            "x_capec_skills_required": {
                "Low": "An attacker can try variation of the slashes characters.",
                "Medium": "An attacker can use more sophisticated tool or script to scan a website and find a path filtering problem."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2010-4652
{
    "id": "bundle--b98f1bb5-a6ae-4b2c-9f39-8205336b68ae",
    "objects": [
        {
            "created": "2020-05-24T00:01:19.563Z",
            "description": "Heap-based buffer overflow in the sql_prepare_where function (contrib/mod_sql.c) in ProFTPD before 1.3.3d, when mod_sql is enabled, allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a crafted username containing substitution tags, which are not properly handled during construction of an SQL query.",
            "external_references": [
                {
                    "external_id": "CVE-2010-4652",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "modified": "2020-05-24T00:01:19.563Z",
            "name": "CVE-2010-4652",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-119"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3536",
                    "refsource": "MISC",
                    "tags": [
                        "Exploit",
                        "Patch"
                    ],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3536"
                },
                {
                    "name": "FEDORA-2011-0613",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053537.html"
                },
                {
                    "name": "FEDORA-2011-0610",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-January/053540.html"
                },
                {
                    "name": "http://phrack.org/issues.html?issue=67&id=7#article",
                    "refsource": "MISC",
                    "tags": [],
                    "url": "http://phrack.org/issues.html?issue=67&id=7#article"
                },
                {
                    "name": "http://proftpd.org/docs/RELEASE_NOTES-1.3.3d",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://proftpd.org/docs/RELEASE_NOTES-1.3.3d"
                },
                {
                    "name": "DSA-2191",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2011/dsa-2191"
                },
                {
                    "name": "MDVSA-2011:023",
                    "refsource": "MANDRIVA",
                    "tags": [],
                    "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2011:023"
                },
                {
                    "name": "44933",
                    "refsource": "BID",
                    "tags": [],
                    "url": "http://www.securityfocus.com/bid/44933"
                },
                {
                    "name": "ADV-2011-0248",
                    "refsource": "VUPEN",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.vupen.com/english/advisories/2011/0248"
                },
                {
                    "name": "ADV-2011-0331",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2011/0331"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=670170",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Exploit",
                        "Patch"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=670170"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:06.574Z",
            "id": "relationship--dc6edf50-9659-4256-8cfa-49635f405c2f",
            "modified": "2020-06-04T19:13:06.574Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.574Z",
            "id": "relationship--cdd2ae5f-e807-49ad-b216-f4a945598539",
            "modified": "2020-06-04T19:13:06.574Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.574Z",
            "id": "relationship--8b12b591-2782-43fe-ab39-fcdcb04a8db9",
            "modified": "2020-06-04T19:13:06.574Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--476ca631-2695-43f8-82f6-83c06a07ae36",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.575Z",
            "id": "relationship--23d0b827-d5e4-4e49-b98b-4eb7e8780901",
            "modified": "2020-06-04T19:13:06.575Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.575Z",
            "id": "relationship--b9e57458-ae89-4abf-a094-382e2d661d8d",
            "modified": "2020-06-04T19:13:06.575Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.575Z",
            "id": "relationship--e4def882-f710-4d67-afe8-9a31bf19fa3a",
            "modified": "2020-06-04T19:13:06.575Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.575Z",
            "id": "relationship--e484cca0-0a82-414d-83dd-43434e8ed76c",
            "modified": "2020-06-04T19:13:06.575Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.575Z",
            "id": "relationship--c5356e8b-42f8-4e95-8453-b25ee36cf2e0",
            "modified": "2020-06-04T19:13:06.575Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.575Z",
            "id": "relationship--ed58e560-0198-49ad-b375-6e9d899229f0",
            "modified": "2020-06-04T19:13:06.575Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.576Z",
            "id": "relationship--3e8fec10-03b3-4178-94b4-b00ae5f8f039",
            "modified": "2020-06-04T19:13:06.576Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "target_ref": "vulnerability--a593b052-54cd-33b6-aa78-b2474aa51b27",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "external_references": [
                {
                    "external_id": "CAPEC-10",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/10.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-99",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/99.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Sharefuzz",
                    "external_id": "REF-2",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://sharefuzz.sourceforge.net"
                }
            ],
            "id": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Environment Variables",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in $HOME</xhtml:div>\n               <xhtml:p>A buffer overflow in sccw allows local users to gain root access via the $HOME environmental variable.</xhtml:p>See also: CVE-1999-0906",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in TERM</xhtml:div>\n               <xhtml:p>A buffer overflow in the rlogin program involves its consumption of the TERM environmental variable.</xhtml:p>See also: CVE-1999-0046"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application uses environment variables.",
                "An environment variable exposed to the user is vulnerable to a buffer overflow.",
                "The vulnerable environment variable uses untrusted data.",
                "Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
            "external_references": [
                {
                    "external_id": "CAPEC-100",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/100.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-129",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/129.html"
                },
                {
                    "external_id": "CWE-805",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/805.html"
                },
                {
                    "external_id": "CWE-19",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/19.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                }
            ],
            "id": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Overflow Buffers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "The most straightforward example is an application that reads in input from the user and stores it in an internal buffer but does not check that the size of the input data is less than or equal to the size of the buffer. If the user enters excessive length data, the buffer may overflow leading to the application crashing, or worse, enabling the user to cause execution of injected code.",
                "Many web servers enforce security in web applications through the use of filter plugins. An example is the SiteMinder plugin used for authentication. An overflow in such a plugin, possibly through a long URL or redirect parameter, can allow an adversary not only to bypass the security checks but also execute arbitrary code on the target web server in the context of the user that runs the web server process."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Targeted software performs buffer operations.",
                "Targeted software inadequately performs bounds-checking on buffer operations.",
                "Adversary has the capability to influence the input to buffer operations."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack. Detecting and exploiting a buffer overflow does not require any resources beyond knowledge of and access to the target system."
            ],
            "x_capec_skills_required": {
                "High": "In cases of directed overflows, where the motive is to divert the flow of the program or application as per the adversaries' bidding, high level skills are required. This may involve detailed knowledge of the target system architecture and kernel.",
                "Low": "In most cases, overflowing a buffer does not require advanced skills beyond the ability to notice an overflow and stuff an input variable with content."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary manipulates an application's interaction with a buffer in an attempt to read or modify data they shouldn't have access to. Buffer attacks are distinguished in that it is the buffer space itself that is the target of the attack rather than any code responsible for interpreting the content of the buffer. In virtually all buffer attacks the content that is placed in the buffer is immaterial. Instead, most buffer attacks involve retrieving or providing more input than can be stored in the allocated buffer, resulting in the reading or overwriting of other unintended program memory.",
            "external_references": [
                {
                    "external_id": "CAPEC-123",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/123.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                }
            ],
            "id": "attack-pattern--476ca631-2695-43f8-82f6-83c06a07ae36",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Buffer Manipulation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution (A buffer manipulation attack often results in a crash of the application due to the corruption of memory.)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.)",
                    "Modify Data (If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.)",
                    "Read Data (If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.)"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The adversary must identify a programmatic means for interacting with a buffer, such as vulnerable C code, and be able to provide input to this interaction."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.",
            "external_references": [
                {
                    "external_id": "CAPEC-14",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/14.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-353",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/353.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Client-side Injection-induced Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in Internet Explorer 4.0 Via EMBED Tag</xhtml:div>\n               <xhtml:p>Authors often use <EMBED> tags in HTML documents. For example</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\"><EMBED TYPE=\"audio/midi\" SRC=\"/path/file.mid\" AUTOSTART=\"true\"></xhtml:div>\n               <xhtml:p>If an attacker supplies an overly long path in the SRC= directive, the mshtml.dll component will suffer a buffer overflow. This is a standard example of content in a Web page being directed to exploit a faulty module in the system. There are potentially thousands of different ways data can propagate into a given system, thus these kinds of attacks will continue to be found in the wild.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The targeted client software communicates with an external server.",
                "The targeted client software has a buffer overflow vulnerability."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap requires a more in-depth knowledge and higher skill level.",
                "Low": "To achieve a denial of service, an attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "external_references": [
                {
                    "external_id": "CAPEC-24",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/24.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Filter Failure through Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Filter Failure in Taylor UUCP Daemon</xhtml:div>\n               <xhtml:p>Sending in arguments that are too long to cause the filter to fail open is one instantiation of the filter failure attack. The Taylor UUCP daemon is designed to remove hostile arguments before they can be executed. If the arguments are too long, however, the daemon fails to remove them. This leaves the door open for attack.</xhtml:p>\n            ",
                "A filter is used by a web application to filter out characters that may allow the input to jump from the data plane to the control plane when data is used in a SQL statement (chaining this attack with the SQL injection attack). Leveraging a buffer overflow the attacker makes the filter fail insecurely and the tainted data is permitted to enter unfiltered into the system, subsequently causing a SQL injection.",
                "Audit Truncation and Filters with Buffer Overflow. Sometimes very large transactions can be used to destroy a log file or cause partial logging failures. In this kind of attack, log processing code might be examining a transaction in real-time processing, but the oversized transaction causes a logic branch or an exception of some kind that is trapped. In other words, the transaction is still executed, but the logging or filtering mechanism still fails. This has two consequences, the first being that you can run transactions that are not logged in any way (or perhaps the log entry is completely corrupted). The second consequence is that you might slip through an active filter that otherwise would stop your attack."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Ability to control the length of data passed to an active filter."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "external_references": [
                {
                    "external_id": "CAPEC-42",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/42.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "CERT Advisory CA-1997-05 MIME Conversion Buffer Overflow in Sendmail Versions 8.8.3 and 8.8.4, Software Engineering Institute: Carnegie Mellon University",
                    "external_id": "REF-364",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cert.org/advisories/CA-1997-05.html"
                }
            ],
            "id": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "MIME Conversion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Sendmail Overflow</xhtml:div>\n               <xhtml:p>A MIME conversion buffer overflow exists in Sendmail versions 8.8.3 and 8.8.4. Sendmail versions 8.8.3 and 8.8.4 are vulnerable to a buffer overflow in the MIME handling code. By sending a message with specially-crafted headers to the server, a remote attacker can overflow a buffer and execute arbitrary commands on the system with root privileges.</xhtml:p>\n               <xhtml:p>Sendmail performs a 7 bit to 8 bit conversion on email messages. This vulnerability is due to the fact that insufficient bounds checking was performed while performing these conversions. This gave attacker an opportunity to overwrite the internal stack of sendmail while it is executing with root privileges. An attacker first probes the target system to figure out what mail server is used on the system and what version. An attacker could then test out the exploit at their leisure on their own machine running the same version of the mail server before using it in the wild.</xhtml:p>See also: CVE-1999-0047"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target system uses a mail server.",
                "Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system."
            ],
            "x_capec_skills_required": {
                "High": "Causing arbitrary code to execute on the target system.",
                "Low": "It may be trivial to cause a DoS via this attack pattern"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-44",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/44.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "modified": "2015-12-07T00:00:00.000Z",
            "name": "Overflow Binary Resource File",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Binary files like music and video files are appended with additional data to cause buffer overflow on target systems. Because these files may be filled with otherwise popular content, the attacker has an excellent vector for wide distribution. There have been numerous cases, for example of malicious screen savers for sports teams that are distributed on the event of the team winning a championship."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Target software processes binary resource files.",
                "Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file."
            ],
            "x_capec_skills_required": {
                "Medium": "To modify file, deceive client into downloading, locate and exploit remote stack or heap vulnerability"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "external_references": [
                {
                    "external_id": "CAPEC-45",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/45.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Symbolic Links",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow with Symbolic Links in EFTP Server</xhtml:div>\n               <xhtml:p>The EFTP server has a buffer overflow that can be exploited if an attacker uploads a .lnk (link) file that contains more than 1,744 bytes. This is a classic example of an indirect buffer overflow. First the attacker uploads some content (the link file) and then the attacker causes the client consuming the data to be exploited. In this example, the ls command is exploited to compromise the server software.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The attacker can create symbolic link on the target host.",
                "The target host does not perform correct boundary checking while consuming data from a resources."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-46",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/46.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Overflow Variables and Tags",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in MidiPlug</xhtml:div>\n               <xhtml:p>A buffer overflow vulnerability exists in the Yamaha MidiPlug that can be accessed via a Text variable found in an EMBED tag.</xhtml:p>See also: CVE-1999-0946",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in Exim</xhtml:div>\n               <xhtml:p>A buffer overflow in Exim allows local users to gain root privileges by providing a long :include: option in a .forward file.</xhtml:p>See also: CVE-1999-0971"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target program consumes user-controllable data in the form of tags or variables.",
                "The target program does not perform sufficient boundary checking."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-47",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/47.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-130",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/130.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Parameter Expansion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Attack Example: FTP glob()</xhtml:p>\n               <xhtml:p>The glob() function in FTP servers has been susceptible to attack as a result of incorrect resizing. This is an ftpd glob() Expansion LIST Heap Overflow Vulnerability. ftp daemon contains a heap-based buffer overflow condition. The overflow occurs when the LIST command is issued with an argument that expands into an oversized string after being processed by glob().</xhtml:p>\n               <xhtml:p>This buffer overflow occurs in memory that is dynamically allocated. It may be possible for attackers to exploit this vulnerability and execute arbitrary code on the affected host.</xhtml:p>\n               <xhtml:p>To exploit this, the attacker must be able to create directories on the target host.</xhtml:p>\n               <xhtml:p>The glob() function is used to expand short-hand notation into complete file names. By sending to the FTP server a request containing a tilde (~) and other wildcard characters in the pathname string, a remote attacker can overflow a buffer and execute arbitrary code on the FTP server to gain root privileges. Once the request is processed, the glob() function expands the user input, which could exceed the expected length. In order to exploit this vulnerability, the attacker must be able to create directories on the FTP server.</xhtml:p>\n               <xhtml:p>[R.47.1][REF-2]</xhtml:p>See also: CVE-2001-0249",
                "\n               <xhtml:p>Buffer overflow in the glob implementation in libc in NetBSD-current before 20050914, and NetBSD 2.* and 3.* before 20061203, as used by the FTP daemon, allows remote authenticated users to execute arbitrary code via a long pathname that results from path expansion.</xhtml:p>\n               <xhtml:p>The limit computation of an internal buffer was done incorrectly. The size of the buffer in byte was used as element count, even though the elements of the buffer are 2 bytes long. Long expanded path names would therefore overflow the buffer.</xhtml:p>See also: CVE-2006-6652"
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.",
                "The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)."
            ],
            "x_capec_resources_required": [
                "Access to the program source or binary. If the program is only available in binary then a disassembler and other reverse engineering tools will be helpful."
            ],
            "x_capec_skills_required": {
                "High": "Finding this particular buffer overflow may not be trivial. Also, stack and especially heap based buffer overflows require a lot of knowledge if the intended goal is arbitrary code execution. Not only that the attacker needs to write the shell code to accomplish his or her goals, but the attacker also needs to find a way to get the program execution to jump to the planted shell code. There also needs to be sufficient room for the payload. So not every buffer overflow will be exploitable, even by a skilled attacker."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2009-0543
{
    "id": "bundle--e036e119-837f-4660-83b2-c7dacabc76fb",
    "objects": [
        {
            "created": "2020-05-24T00:02:38.316Z",
            "description": "ProFTPD Server 1.3.1, with NLS support enabled, allows remote attackers to bypass SQL injection protection mechanisms via invalid, encoded multibyte characters, which are not properly handled in (1) mod_sql_mysql and (2) mod_sql_postgres.",
            "external_references": [
                {
                    "external_id": "CVE-2009-0543",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "modified": "2020-05-24T00:02:38.316Z",
            "name": "CVE-2009-0543",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-89"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3173",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3173"
                },
                {
                    "name": "34268",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/34268"
                },
                {
                    "name": "GLSA-200903-27",
                    "refsource": "GENTOO",
                    "tags": [],
                    "url": "http://security.gentoo.org/glsa/glsa-200903-27.xml"
                },
                {
                    "name": "DSA-1730",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2009/dsa-1730"
                },
                {
                    "name": "MDVSA-2009:061",
                    "refsource": "MANDRIVA",
                    "tags": [],
                    "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2009:061"
                },
                {
                    "name": "[oss-security] 20090211 CVE request for proftpd",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://www.openwall.com/lists/oss-security/2009/02/11/4"
                },
                {
                    "name": "[oss-security] 20090211 Re: CVE request for proftpd",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://www.openwall.com/lists/oss-security/2009/02/11/5"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:06.675Z",
            "id": "relationship--9736146c-3630-4c78-a63d-911feb03ecb3",
            "modified": "2020-06-04T19:13:06.675Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--89acf77d-723b-43b4-b66d-6eaafed52369",
            "target_ref": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.675Z",
            "id": "relationship--919636a4-1a1c-4800-b15e-5bad1c9079b5",
            "modified": "2020-06-04T19:13:06.675Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--f0e32d0e-9580-4b79-95e0-6e3b99bf6e45",
            "target_ref": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.676Z",
            "id": "relationship--7f65840d-28b4-4c67-9712-c8d48aab57e1",
            "modified": "2020-06-04T19:13:06.676Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--7c90bef7-530c-427b-8fb7-f9d3eda9c26a",
            "target_ref": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.676Z",
            "id": "relationship--505fdade-0471-4b05-b7be-bce2f3720aaf",
            "modified": "2020-06-04T19:13:06.676Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--35bde6ec-0a19-462c-92b4-9c481dc4986e",
            "target_ref": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.676Z",
            "id": "relationship--a6bb9d8b-c5f1-443b-9bc7-43c6bd4b9949",
            "modified": "2020-06-04T19:13:06.676Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--42acc604-a86c-46f7-bd03-6e532c02d85e",
            "target_ref": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:06.676Z",
            "id": "relationship--1d09cf8e-860d-47fc-99b5-d2149c8742da",
            "modified": "2020-06-04T19:13:06.676Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
            "target_ref": "vulnerability--3f617fdb-f45a-32ee-8032-78a20fe870dc",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
            "external_references": [
                {
                    "external_id": "CAPEC-108",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/108.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-78",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/78.html"
                },
                {
                    "external_id": "CWE-114",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/114.html"
                }
            ],
            "id": "attack-pattern--89acf77d-723b-43b4-b66d-6eaafed52369",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Command Line Execution through SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>SQL injection vulnerability in Cacti 0.8.6i and earlier, when register_argc_argv is enabled, allows remote attackers to execute arbitrary SQL commands via the (1) second or (2) third arguments to cmd.php. NOTE: this issue can be leveraged to execute arbitrary commands since the SQL query results are later used in the polling_items array and popen function (CVE-2006-6799).</xhtml:p>\n               <xhtml:p>Reference: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-6799</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The application does not properly validate data before storing in the database",
                "Backend application implicitly trusts the data stored in the database",
                "Malicious data is used on the backend as a command line argument"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "High": "The attacker most likely has to be familiar with the internal functionality of the system to launch this attack. Without that knowledge, there are not many feedback mechanisms to give an attacker the indication of how to perform command injection or whether the attack is succeeding."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject his or her own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible.",
            "external_references": [
                {
                    "external_id": "CAPEC-109",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/109.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-100",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/100.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-564",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/564.html"
                },
                {
                    "description": "OWASP Testing Guide (v4 [DRAFT]), The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-4",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.owasp.org/index.php/Testing_for_ORM_Injection"
                }
            ],
            "id": "attack-pattern--f0e32d0e-9580-4b79-95e0-6e3b99bf6e45",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Object Relational Mapping Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "When using Hibernate, it is possible to use the session.find() method to run queries against the database. This is an overloaded method that provides facilities to perform binding between the supplied user data and place holders in the statically defined query. However, it is also possible to use the session.find() method without using any of these query binding overloads, hence effectively concatenating the user supplied data with rest of the SQL query, resulting in a possibility for SQL injection. While the framework may provide mechanisms to use methods immune to SQL injections, it may also contain ways that are not immune that may be chosen by the developer."
            ],
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "An application uses data access layer generated by an ORM tool or framework",
                "An application uses user supplied data in queries executed against the database",
                "The separation between data plane and control plane is not ensured, through either developer error or an underlying weakness in the data access layer code generation framework"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Medium": "Knowledge of general SQL injection techniques and subtleties of the ORM framework is needed"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message.",
            "external_references": [
                {
                    "external_id": "CAPEC-110",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/110.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                }
            ],
            "id": "attack-pattern--7c90bef7-530c-427b-8fb7-f9d3eda9c26a",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "SQL Injection through SOAP Parameter Tampering",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "An attacker uses a travel booking system that leverages SOAP communication between the client and the travel booking service. An attacker begins to tamper with the outgoing SOAP messages by modifying their parameters to include characters that would break a dynamically constructed SQL query. He notices that the system fails to respond when these malicious inputs are injected in certain parameters transferred in a SOAP message. The attacker crafts a SQL query that modifies his payment amount in the travel system's database and passes it as one of the parameters . A backend batch payment system later fetches the payment amount from the database (the modified payment amount) and sends to the credit card processor, enabling the attacker to purchase the airfare at a lower price. An attacker needs to have some knowledge of the system's database, perhaps by exploiting another weakness that results in information disclosure."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SOAP messages are used as a communication mechanism in the system",
                "SOAP parameters are not properly validated at the service provider",
                "The service provider does not properly utilize parameter binding when building SQL queries"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "High": "If the attacker has to perform SQL injection blindly",
                "Medium": "If the attacker is able to gain good understanding of the system's database schema"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker is able to leverage access gained to the database to read / write data to the file system, compromise the operating system, create a tunnel for accessing the host machine, and use this access to potentially attack other machines on the same network as the database machine. Traditionally SQL injections attacks are viewed as a way to gain unauthorized read access to the data stored in the database, modify the data in the database, delete the data, etc. However, almost every data base management system (DBMS) system includes facilities that if compromised allow an attacker complete access to the file system, operating system, and full access to the host running the database. The attacker can then use this privileged access to launch subsequent attacks. These facilities include dropping into a command shell, creating user defined functions that can call system level libraries present on the host machine, stored procedures, etc.",
            "external_references": [
                {
                    "external_id": "CAPEC-470",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/470.html"
                },
                {
                    "external_id": "CWE-250",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/250.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "description": "Bernardo Damele Assump \u00e7\u00e3o Guimar\u00e3es, Advanced SQL Injection to Operating System Full Control, 2009--04---10",
                    "external_id": "REF-408",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.blackhat.com/presentations/bh-europe-09/Guimaraes/Blackhat-europe-09-Damele-SQLInjection-whitepaper.pdf"
                }
            ],
            "id": "attack-pattern--35bde6ec-0a19-462c-92b4-9c481dc4986e",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "Expanding Control over the Operating System from the Database",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_prerequisites": [
                "A vulnerable DBMS is usedA SQL injection exists that gives an attacker access to the database or an attacker has access to the DBMS via other means"
            ],
            "x_capec_skills_required": {
                "High": "Low level knowledge of the various facilities available in different DBMS systems for interacting with the file system and operating system"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input. When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to talk directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database. In order to successfully inject SQL and retrieve information from a database, an attacker:",
            "external_references": [
                {
                    "external_id": "CAPEC-66",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/66.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                }
            ],
            "id": "attack-pattern--42acc604-a86c-46f7-bd03-6e532c02d85e",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "With PHP-Nuke versions 7.9 and earlier, an attacker can successfully access and modify data, including sensitive contents such as usernames and password hashes, and compromise the application through SQL Injection. The protection mechanism against SQL Injection employs a blacklist approach to input validation. However, because of improper blacklisting, it is possible to inject content such as \"foo'/**/UNION\" or \"foo UNION/**/\" to bypass validation and glean sensitive information from the database. See also: CVE-2006-5525"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SQL queries used by the application to store, retrieve or modify data.",
                "User-controllable input that is not properly validated by the application as part of SQL queries."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Low": "It is fairly simple for someone with basic SQL knowledge to perform SQL injection, in general. In certain instances, however, specific knowledge of the database employed may be required."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
            "external_references": [
                {
                    "external_id": "CAPEC-7",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/7.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                }
            ],
            "id": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Blind SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>An adversary may try entering something like \"username' AND 1=1; --\" in an input field. If the result is the same as when the adversary entered \"username\" in the field, then the adversary knows that the application is vulnerable to SQL Injection. The adversary can then ask yes/no questions from the database server to extract information from it. For example, the adversary can extract table names from a database using the following types of queries:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username' AND ascii(lower(substring((SELECT TOP 1 name FROM sysobjects WHERE xtype='U'), 1, 1))) > 108\".</xhtml:div>\n               <xhtml:p>If the above query executes properly, then the adversary knows that the first character in a table name in the database is a letter between m and z. If it doesn't, then the adversary knows that the character must be between a and l (assuming of course that table names only contain alphabetic characters). By performing a binary search on all character positions, the adversary can determine all table names in the database. Subsequently, the adversary may execute an actual attack and send something like:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username'; DROP TABLE trades; --</xhtml:div>\n            ",
                "In the PHP application TimeSheet 1.1, an adversary can successfully retrieve username and password hashes from the database using Blind SQL Injection. If the adversary is aware of the local path structure, the adversary can also remotely execute arbitrary code and write the output of the injected queries to the local path. Blind SQL Injection is possible since the application does not properly sanitize the $_POST['username'] variable in the login.php file. See also: CVE-2006-4705"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SQL queries used by the application to store, retrieve or modify data.",
                "User-controllable input that is not properly validated by the application as part of SQL queries."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Medium": "Determining the database type and version, as well as the right number and type of parameters to the query being injected in the absence of error messages requires greater skill than reverse-engineering database error messages."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2009-3639
{
    "id": "bundle--fdbc53f8-26a1-4bb0-9275-9441d9477e83",
    "objects": [
        {
            "created": "2020-05-24T00:02:37.784Z",
            "description": "The mod_tls module in ProFTPD before 1.3.2b, and 1.3.3 before 1.3.3rc2, when the dNSNameRequired TLS option is enabled, does not properly handle a '\\0' character in a domain name in the Subject Alternative Name field of an X.509 client certificate, which allows remote attackers to bypass intended client-hostname restrictions via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
            "external_references": [
                {
                    "external_id": "CVE-2009-3639",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--080fde57-7f8c-363b-beca-e1a1df682de2",
            "modified": "2020-05-24T00:02:37.784Z",
            "name": "CVE-2009-3639",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-310"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3275",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3275"
                },
                {
                    "name": "[oss-security] 20091023 proftpd - mod_tls - Improper SSL/TLS certificate subjectAltName verification",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://marc.info/?l=oss-security&m=125630966510672&w=2"
                },
                {
                    "name": "[oss-security] 20091023 Re: proftpd - mod_tls - Improper SSL/TLS certificate subjectAltName verification",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://marc.info/?l=oss-security&m=125632960508211&w=2"
                },
                {
                    "name": "37131",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/37131"
                },
                {
                    "name": "37219",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/37219"
                },
                {
                    "name": "DSA-1925",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2009/dsa-1925"
                },
                {
                    "name": "MDVSA-2009:288",
                    "refsource": "MANDRIVA",
                    "tags": [],
                    "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2009:288"
                },
                {
                    "name": "36804",
                    "refsource": "BID",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://www.securityfocus.com/bid/36804"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=530719",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=530719"
                },
                {
                    "name": "proftpd-modtls-security-bypass(53936)",
                    "refsource": "XF",
                    "tags": [],
                    "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/53936"
                },
                {
                    "name": "FEDORA-2009-11649",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "https://www.redhat.com/archives/fedora-package-announce/2009-November/msg00642.html"
                },
                {
                    "name": "FEDORA-2009-11666",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "https://www.redhat.com/archives/fedora-package-announce/2009-November/msg00649.html"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2019-19272
{
    "error": "vulnerability not found"
}
CVE-2019-19271
{
    "error": "vulnerability not found"
}
CVE-2011-1137
{
    "id": "bundle--0a514798-a635-4e36-8f81-3763c229f847",
    "objects": [
        {
            "created": "2020-05-24T00:02:10.804Z",
            "description": "Integer overflow in the mod_sftp (aka SFTP) module in ProFTPD 1.3.3d and earlier allows remote attackers to cause a denial of service (memory consumption leading to OOM kill) via a malformed SSH message.",
            "external_references": [
                {
                    "external_id": "CVE-2011-1137",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--c3ae3923-2cf7-3652-99d2-420a2acbfe0b",
            "modified": "2020-05-24T00:02:10.804Z",
            "name": "CVE-2011-1137",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-189"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3586",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3586"
                },
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3587",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3587"
                },
                {
                    "name": "FEDORA-2011-5040",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-April/058344.html"
                },
                {
                    "name": "FEDORA-2011-5033",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-April/058356.html"
                },
                {
                    "name": "http://proftp.cvs.sourceforge.net/viewvc/proftp/proftpd/contrib/mod_sftp/mod_sftp.c?r1=1.29.2.1&r2=1.29.2.2",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://proftp.cvs.sourceforge.net/viewvc/proftp/proftpd/contrib/mod_sftp/mod_sftp.c?r1=1.29.2.1&r2=1.29.2.2"
                },
                {
                    "name": "http://proftp.cvs.sourceforge.net/viewvc/proftp/proftpd/contrib/mod_sftp/packet.c?r1=1.14.2.2&r2=1.14.2.3",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://proftp.cvs.sourceforge.net/viewvc/proftp/proftpd/contrib/mod_sftp/packet.c?r1=1.14.2.2&r2=1.14.2.3"
                },
                {
                    "name": "http://proftp.cvs.sourceforge.net/viewvc/proftp/proftpd/contrib/mod_sftp/packet.h?r1=1.3&r2=1.3.2.1",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://proftp.cvs.sourceforge.net/viewvc/proftp/proftpd/contrib/mod_sftp/packet.h?r1=1.3&r2=1.3.2.1"
                },
                {
                    "name": "43234",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/43234"
                },
                {
                    "name": "43635",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/43635"
                },
                {
                    "name": "43978",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/43978"
                },
                {
                    "name": "SSA:2011-095-01",
                    "refsource": "SLACKWARE",
                    "tags": [],
                    "url": "http://slackware.com/security/viewer.php?l=slackware-security&y=2011&m=slackware-security.485806"
                },
                {
                    "name": "DSA-2185",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2011/dsa-2185"
                },
                {
                    "name": "16129",
                    "refsource": "EXPLOIT-DB",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://www.exploit-db.com/exploits/16129/"
                },
                {
                    "name": "46183",
                    "refsource": "BID",
                    "tags": [
                        "Exploit"
                    ],
                    "url": "http://www.securityfocus.com/bid/46183"
                },
                {
                    "name": "ADV-2011-0617",
                    "refsource": "VUPEN",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.vupen.com/english/advisories/2011/0617"
                },
                {
                    "name": "ADV-2011-0857",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2011/0857"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=681718",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Exploit",
                        "Patch"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=681718"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2008-7265
{
    "id": "bundle--ed2f31c8-1768-4b22-a08a-67d4db72f84a",
    "objects": [
        {
            "created": "2020-05-24T00:01:55.451Z",
            "description": "The pr_data_xfer function in ProFTPD before 1.3.2rc3 allows remote authenticated users to cause a denial of service (CPU consumption) via an ABOR command during a data transfer.",
            "external_references": [
                {
                    "external_id": "CVE-2008-7265",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--15cc0e76-1183-340f-b713-f6a15c72b3b3",
            "modified": "2020-05-24T00:01:55.451Z",
            "name": "CVE-2008-7265",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-399"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3131",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3131"
                },
                {
                    "name": "DSA-2191",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2011/dsa-2191"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2012-6095
{
    "id": "bundle--f041b96d-c1eb-4e2e-956e-ff16dd868bd0",
    "objects": [
        {
            "created": "2020-05-24T00:02:47.215Z",
            "description": "ProFTPD before 1.3.5rc1, when using the UserOwner directive, allows local users to modify the ownership of arbitrary files via a race condition and a symlink attack on the (1) MKD or (2) XMKD commands.",
            "external_references": [
                {
                    "external_id": "CVE-2012-6095",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--612ab82f-8f58-3c8c-9e49-fc973ad45dc1",
            "modified": "2020-05-24T00:02:47.215Z",
            "name": "CVE-2012-6095",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-362"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://bugs.proftpd.org/show_bug.cgi?id=3841",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://bugs.proftpd.org/show_bug.cgi?id=3841"
                },
                {
                    "name": "http://proftpd.org/docs/NEWS-1.3.5rc1",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://proftpd.org/docs/NEWS-1.3.5rc1"
                },
                {
                    "name": "51823",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/51823"
                },
                {
                    "name": "DSA-2606",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2013/dsa-2606"
                },
                {
                    "name": "[oss-security] 20130107 Re: CVE Request -- proFTPD (X < 1.3.5.rc1): Symlink race condition when applying UserOwner to a newly (ProFTPD) created directory",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://www.openwall.com/lists/oss-security/2013/01/07/3"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.059Z",
            "id": "relationship--1e00fa06-5a72-4c8e-994c-daf4c0fa751b",
            "modified": "2020-06-04T19:13:07.059Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--c70d3f38-8efe-4f47-bba4-db807d270d94",
            "target_ref": "vulnerability--612ab82f-8f58-3c8c-9e49-fc973ad45dc1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.059Z",
            "id": "relationship--92bd6e22-c4e2-40e9-960e-577ccd27038e",
            "modified": "2020-06-04T19:13:07.059Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--3da1844e-c905-420a-9179-260356a85a05",
            "target_ref": "vulnerability--612ab82f-8f58-3c8c-9e49-fc973ad45dc1",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "The adversary targets a race condition occurring when multiple processes access and manipulate the same resource concurrently, and the outcome of the execution depends on the particular order in which the access takes place. The adversary can leverage a race condition by \"running the race\", modifying the resource and modifying the normal execution flow. For instance, a race condition can occur while accessing a file: the adversary can trick the system by replacing the original file with his version and cause the system to read the malicious file.",
            "external_references": [
                {
                    "external_id": "CAPEC-26",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/26.html"
                },
                {
                    "external_id": "CWE-368",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/368.html"
                },
                {
                    "external_id": "CWE-363",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/363.html"
                },
                {
                    "external_id": "CWE-366",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/366.html"
                },
                {
                    "external_id": "CWE-370",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/370.html"
                },
                {
                    "external_id": "CWE-362",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/362.html"
                },
                {
                    "external_id": "CWE-662",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/662.html"
                },
                {
                    "external_id": "CWE-689",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/689.html"
                },
                {
                    "external_id": "CWE-667",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/667.html"
                },
                {
                    "external_id": "CWE-665",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/665.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Wikipedia, The Wikimedia Foundation, Inc",
                    "external_id": "REF-105",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://en.wikipedia.org/wiki/Race_condition"
                },
                {
                    "description": "David Wheeler, Secure programmer: Prevent race conditions, IBM developerWorks, IBM",
                    "external_id": "REF-106",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.ibm.com/developerworks/linux/library/l-sprace/index.html"
                },
                {
                    "description": "Fortify Software, SAMATE - Software Assurance Metrics And Tool Evaluation, 2006--06---22, National Institute of Standards and Technology (NIST)",
                    "external_id": "REF-107",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://samate.nist.gov/SRD/view_testcase.php?tID=1598"
                }
            ],
            "id": "attack-pattern--c70d3f38-8efe-4f47-bba4-db807d270d94",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Leveraging Race Conditions",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "The Net Direct client for Linux before 6.0.5 in Nortel Application Switch 2424, VPN 3050 and 3070, and SSL VPN Module 1000 extracts and executes files with insecure permissions, which allows local users to exploit a race condition to replace a world-writable file in /tmp/NetClient and cause another user to execute arbitrary code when attempting to execute this client, as demonstrated by replacing /tmp/NetClient/client. See also: CVE-2007-1057",
                "\n               <xhtml:p>The following code illustrates a file that is accessed multiple times by name in a publicly accessible directory. A race condition exists between the accesses where an attacker can replace the file referenced by the name (see [R.26.5]).</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">include <sys/types.h>include <fcntl.h>include <unistd.h>\n                  define FILE \"/tmp/myfile\"define UID 100\n                  void test(char *str){<xhtml:div style=\"margin-left:10px;\">int fd;fd = creat(FILE, 0644);if(fd == -1)<xhtml:div style=\"margin-left:10px;\">return;</xhtml:div>\n                     chown(FILE, UID, -1); /* BAD */close(fd);</xhtml:div>\n                  }\n                  int main(int argc, char **argv){<xhtml:div style=\"margin-left:10px;\">char *userstr;if(argc > 1) {<xhtml:div style=\"margin-left:10px;\">userstr = argv[1];test(userstr);</xhtml:div>\n                     }return 0;</xhtml:div>\n                  }</xhtml:div>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "A resource is accessed/modified concurrently by multiple processes such that a race condition exists.",
                "The adversary has the ability to modify the resource."
            ],
            "x_capec_skills_required": {
                "Medium": "Being able to \"run the race\" requires basic knowledge of concurrent processing including synchonization techniques."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets a race condition occurring between the time of check (state) for a resource and the time of use of a resource. A typical example is file access. The adversary can leverage a file access race condition by \"running the race\", meaning that they would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time, the adversary could replace or modify the file, causing the application to behave unexpectedly.",
            "external_references": [
                {
                    "external_id": "CAPEC-29",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/29.html"
                },
                {
                    "external_id": "CWE-367",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/367.html"
                },
                {
                    "external_id": "CWE-368",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/368.html"
                },
                {
                    "external_id": "CWE-366",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/366.html"
                },
                {
                    "external_id": "CWE-370",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/370.html"
                },
                {
                    "external_id": "CWE-362",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/362.html"
                },
                {
                    "external_id": "CWE-662",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/662.html"
                },
                {
                    "external_id": "CWE-691",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/691.html"
                },
                {
                    "external_id": "CWE-663",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/663.html"
                },
                {
                    "external_id": "CWE-665",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/665.html"
                },
                {
                    "description": "J. Viega, G. McGraw, Building Secure Software, 2002, Addison-Wesley",
                    "external_id": "REF-131",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Fortify Software, SAMATE - Software Assurance Metrics And Tool Evaluation, 2006--06---22, National Institute of Standards and Technology (NIST)",
                    "external_id": "REF-107",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://samate.nist.gov/SRD/view_testcase.php?tID=1598"
                }
            ],
            "id": "attack-pattern--3da1844e-c905-420a-9179-260356a85a05",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Alter Execution Logic",
                    "Resource Consumption (Denial of Service)"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Alter Execution Logic",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data",
                    "Alter Execution Logic"
                ]
            },
            "x_capec_example_instances": [
                "The Net Direct client for Linux before 6.0.5 in Nortel Application Switch 2424, VPN 3050 and 3070, and SSL VPN Module 1000 extracts and executes files with insecure permissions, which allows local users to exploit a race condition to replace a world-writable file in /tmp/NetClient and cause another user to execute arbitrary code when attempting to execute this client, as demonstrated by replacing /tmp/NetClient/client. See also: CVE-2007-1057",
                "\n               <xhtml:p>The following code illustrates a file that is accessed multiple times by name in a publicly accessible directory. A race condition exists between the accesses where an adversary can replace the file referenced by the name.</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"bad\">include <sys/types.h>include <fcntl.h>include <unistd.h>\n                  define FILE \"/tmp/myfile\"define UID 100\n                  void test(char *str){<xhtml:div style=\"margin-left:10px;\">int fd;fd = creat(FILE, 0644);if(fd == -1)<xhtml:div style=\"margin-left:10px;\">return;</xhtml:div>\n                     chown(FILE, UID, -1); /* BAD */close(fd);</xhtml:div>\n                  }\n                  int main(int argc, char **argv){<xhtml:div style=\"margin-left:10px;\">char *userstr;if(argc > 1) {<xhtml:div style=\"margin-left:10px;\">userstr = argv[1];test(userstr);</xhtml:div>\n                     }return 0;</xhtml:div>\n                  }</xhtml:div>\n               <xhtml:p>[R.29.3]</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "A resource is access/modified concurrently by multiple processes.",
                "The adversary is able to modify resource.",
                "A race condition exists while accessing a resource."
            ],
            "x_capec_skills_required": {
                "Medium": "This attack can get sophisticated since the attack has to occur within a short interval of time."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2016-7048
{
    "id": "bundle--ad113077-960e-4ce2-b0d8-5f1ccb4f0497",
    "objects": [
        {
            "created": "2020-05-24T00:02:23.612Z",
            "description": "The interactive installer in PostgreSQL before 9.3.15, 9.4.x before 9.4.10, and 9.5.x before 9.5.5 might allow remote attackers to execute arbitrary code by leveraging use of HTTP to download software.",
            "external_references": [
                {
                    "external_id": "CVE-2016-7048",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "modified": "2020-05-24T00:02:23.612Z",
            "name": "CVE-2016-7048",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-284"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=1378043",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Issue Tracking",
                        "Third Party Advisory"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1378043"
                },
                {
                    "name": "https://www.postgresql.org/support/security/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch",
                        "Vendor Advisory"
                    ],
                    "url": "https://www.postgresql.org/support/security/"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.156Z",
            "id": "relationship--54347d27-ec88-4a50-b772-aba21f721c88",
            "modified": "2020-06-04T19:13:07.156Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--634aeef0-13a8-449b-afea-332cbc6095bf",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--c12c244f-d764-42ed-8c70-73ac4fb2010c",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--13b94aaa-9c95-487c-ad68-8c29d8ac0068",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--aadeaa9e-3d54-4da5-97fa-7e853f16ae7c",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--93bedd5b-70cc-48a0-a7c9-09b3800bd6bc",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--746d7e64-d208-41ad-8968-6f27a2f82b40",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--a35eb10e-1168-4c77-8f46-87fa6ee40ef7",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--f1985753-8ba5-47e6-93d9-11a7915ed9a9",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--b2e8de4b-6757-4e7e-9c5c-210c44100577",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--0c3077de-7807-451e-9d58-66fc16caed4a",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--c195a0a3-62fc-4def-9702-8938440cc9a7",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--46823dd8-2df3-44c8-9ba5-4dcf0b90bb55",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--be032a5f-7575-4e82-86d8-6c5cabb3d9dd",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--4f1c11ff-cc60-4997-b677-7553df07a951",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--ed3de4d7-a053-42e4-9f3d-3a6293034e96",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.157Z",
            "id": "relationship--41d944d2-ccf1-44ea-8bb9-328242a31070",
            "modified": "2020-06-04T19:13:07.157Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--aef8e9e0-4714-4890-9470-06276c61abfd",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.158Z",
            "id": "relationship--97113c6e-41fc-4592-be29-6466efdf7362",
            "modified": "2020-06-04T19:13:07.158Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--13e147c3-7baa-4ec4-aafd-9135d46545cc",
            "target_ref": "vulnerability--06ef79b3-9028-32ee-9721-acee062cb4a1",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.158Z",
            "id": "relationship--257ec58d-576f-48ab-bbf8-7a46af1779a3",
            "modified": "2020-06-04T19:13:07.158Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
            "target_ref": "attack-pattern--93bedd5b-70cc-48a0-a7c9-09b3800bd6bc",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.158Z",
            "id": "relationship--0f4a6696-9a56-45cf-bf95-f9fe4532018f",
            "modified": "2020-06-04T19:13:07.158Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
            "target_ref": "attack-pattern--a35eb10e-1168-4c77-8f46-87fa6ee40ef7",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.158Z",
            "id": "relationship--7d79528c-bcc3-4df7-a220-1f03f985af16",
            "modified": "2020-06-04T19:13:07.158Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--478aa214-2ca7-4ec0-9978-18798e514790",
            "target_ref": "attack-pattern--aef8e9e0-4714-4890-9470-06276c61abfd",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.159Z",
            "id": "relationship--890180e2-aafb-4f41-a282-a51fdb31d299",
            "modified": "2020-06-04T19:13:07.159Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--62dfd1ca-52d5-483c-a84b-d6e80bf94b7b",
            "target_ref": "attack-pattern--13e147c3-7baa-4ec4-aafd-9135d46545cc",
            "type": "relationship"
        },
        {
            "created": "2017-05-31T21:31:42.750Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
            "external_references": [
                {
                    "external_id": "T1130",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1130"
                },
                {
                    "external_id": "CAPEC-479",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/479.html"
                },
                {
                    "description": "Wikipedia. (2016, December 6). Root certificate. Retrieved February 20, 2017.",
                    "source_name": "Wikipedia Root Certificate",
                    "url": "https://en.wikipedia.org/wiki/Root_certificate"
                },
                {
                    "description": "Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.",
                    "source_name": "Operation Emmental",
                    "url": "http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf"
                },
                {
                    "description": "Onuma. (2015, February 24). Superfish: Adware Preinstalled on Lenovo Laptops. Retrieved February 20, 2017.",
                    "source_name": "Kaspersky Superfish",
                    "url": "https://www.kaspersky.com/blog/lenovo-pc-with-adware-superfish-preinstalled/7712/"
                },
                {
                    "description": "Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.",
                    "source_name": "SpectorOps Code Signing Dec 2017",
                    "url": "https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec"
                },
                {
                    "description": "Patrick Wardle. (2018, January 11). Ay MaMi. Retrieved March 19, 2018.",
                    "source_name": "objective-see ay mami 2018",
                    "url": "https://objective-see.com/blog/blog_0x26.html"
                },
                {
                    "description": "Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018.",
                    "source_name": "Microsoft Sigcheck May 2017",
                    "url": "https://docs.microsoft.com/sysinternals/downloads/sigcheck"
                },
                {
                    "description": "Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017.",
                    "source_name": "Tripwire AppUNBlocker",
                    "url": "https://www.tripwire.com/state-of-security/off-topic/appunblocker-bypassing-applocker/"
                }
            ],
            "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "modified": "2019-07-19T14:44:30.545Z",
            "name": "Install Root Certificate",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Itzik Kotler, SafeBreach",
                "Travis Smith, Tripwire",
                "Red Canary",
                "Matt Graeber, @mattifestation, SpecterOps"
            ],
            "x_mitre_data_sources": [
                "SSL/TLS inspection",
                "Digital certificate logs"
            ],
            "x_mitre_defense_bypassed": [
                "Digital Certificate Validation"
            ],
            "x_mitre_detection": "A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>[HKLM or HKCU]\\Software[\\Policies\\]\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072",
            "x_mitre_permissions_required": [
                "Administrator",
                "User"
            ],
            "x_mitre_platforms": [
                "Linux",
                "Windows",
                "macOS"
            ],
            "x_mitre_version": "1.0"
        },
        {
            "created": "2017-05-31T21:30:34.928Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075).\n\nAdversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Use of existing services is a type of [Masquerading](https://attack.mitre.org/techniques/T1036) that may make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.\n\nAdversaries may also intentionally corrupt or kill services to execute malicious recovery programs/commands. (Citation: Twitter Service Recovery Nov 2017) (Citation: Microsoft Service Recovery Feb 2013)",
            "external_references": [
                {
                    "external_id": "T1031",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1031"
                },
                {
                    "external_id": "CAPEC-551",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/551.html"
                },
                {
                    "description": "The Cyber (@r0wdy_). (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.",
                    "source_name": "Twitter Service Recovery Nov 2017",
                    "url": "https://twitter.com/r0wdy_/status/936365549553991680"
                },
                {
                    "description": "Microsoft. (2013, February 22). Set up Recovery Actions to Take Place When a Service Fails. Retrieved April 9, 2018.",
                    "source_name": "Microsoft Service Recovery Feb 2013",
                    "url": "https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc753662(v=ws.11)"
                },
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "source_name": "TechNet Autoruns",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ],
            "id": "attack-pattern--62dfd1ca-52d5-483c-a84b-d6e80bf94b7b",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }
            ],
            "modified": "2019-07-18T16:20:52.185Z",
            "name": "Modify Existing Service",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Travis Smith, Tripwire",
                "Matthew Demaske, Adaptforward"
            ],
            "x_mitre_data_sources": [
                "Windows Registry",
                "File monitoring",
                "Process monitoring",
                "Process command-line parameters"
            ],
            "x_mitre_detection": "Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence. (Citation: TechNet Autoruns) \n\nService information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>.\n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute [cmd](https://attack.mitre.org/software/S0106) commands or scripts.\n\nLook for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1086), so additional logging may need to be configured to gather the appropriate data.",
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_version": "1.0"
        },
        {
            "created": "2017-05-31T21:30:45.613Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "When operating systems boot up, they can start programs or applications called services that perform background system functions. (Citation: TechNet Services) A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry. \n\nAdversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with [Masquerading](https://attack.mitre.org/techniques/T1036). Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1035).",
            "external_references": [
                {
                    "external_id": "T1050",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1050"
                },
                {
                    "external_id": "CAPEC-550",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/550.html"
                },
                {
                    "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.",
                    "source_name": "TechNet Services",
                    "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx"
                },
                {
                    "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.",
                    "source_name": "Microsoft 4697 APR 2017",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697"
                },
                {
                    "description": "Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.",
                    "source_name": "Microsoft Windows Event Forwarding FEB 2018",
                    "url": "https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection"
                },
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "source_name": "TechNet Autoruns",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ],
            "id": "attack-pattern--478aa214-2ca7-4ec0-9978-18798e514790",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "modified": "2019-07-18T16:43:25.906Z",
            "name": "New Service",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Pedro Harrison"
            ],
            "x_mitre_data_sources": [
                "Windows Registry",
                "Process monitoring",
                "Process command-line parameters",
                "Windows event logs"
            ],
            "x_mitre_detection": "Monitor service creation through changes in the Registry and common utilities using command-line invocation. Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017) (Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence. (Citation: TechNet Autoruns) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1086), so additional logging may need to be configured to gather the appropriate data.",
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_version": "1.0"
        },
        {
            "created": "2017-05-31T21:30:49.119Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
            "external_references": [
                {
                    "external_id": "T1058",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1058"
                },
                {
                    "external_id": "CAPEC-478",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/478.html"
                },
                {
                    "description": "Microsoft. (n.d.). Registry Key Security and Access Rights. Retrieved March 16, 2017.",
                    "source_name": "MSDN Registry Key Security",
                    "url": "https://msdn.microsoft.com/library/windows/desktop/ms724878.aspx"
                },
                {
                    "description": "Hull, D. (2014, May 3). Kansa: Service related collectors and analysis. Retrieved October 10, 2019.",
                    "source_name": "TrustedSignal Service Failure",
                    "url": "https://trustedsignal.blogspot.com/2014/05/kansa-service-related-collectors-and.html"
                },
                {
                    "description": "The Cyber (@r0wdy_). (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.",
                    "source_name": "Twitter Service Recovery Nov 2017",
                    "url": "https://twitter.com/r0wdy_/status/936365549553991680"
                },
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "source_name": "TechNet Autoruns",
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ],
            "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                },
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }
            ],
            "modified": "2019-10-11T02:52:39.175Z",
            "name": "Service Registry Permissions Weakness",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Travis Smith, Tripwire"
            ],
            "x_mitre_data_sources": [
                "Process command-line parameters",
                "Services",
                "Windows Registry"
            ],
            "x_mitre_detection": "Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: TechNet Autoruns) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1086), so additional logging may need to be configured to gather the appropriate data.",
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_system_requirements": [
                "Ability to modify service values in the Registry"
            ],
            "x_mitre_version": "1.1"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts. The adversary leverages this capability to execute his/her own script by embedding it within other scripts that the target software is likely to execute. The adversary must have the ability to inject their script into a script that is likely to be executed. If this is done, then the adversary can potentially launch a variety of probes and attacks against the web server's local environment, in many cases the so-called DMZ, back end resources the web server can communicate with, and other hosts. With the proliferation of intermediaries, such as Web App Firewalls, network devices, and even printers having JVMs and Web servers, there are many locales where an attacker can inject malicious scripts. Since this attack pattern defines scripts within scripts, there are likely privileges to execute said attack on the host. These attacks are not solely limited to the server side, client side scripts like Ajax and client side JavaScript can contain malicious scripts as well.",
            "external_references": [
                {
                    "external_id": "CAPEC-19",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/19.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                }
            ],
            "id": "attack-pattern--634aeef0-13a8-449b-afea-332cbc6095bf",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Embedding Scripts within Scripts",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Ajax applications enable rich functionality for browser based web applications. Applications like Google Maps deliver unprecedented ability to zoom in and out, scroll graphics, and change graphic presentation through Ajax. The security issues that an attacker may exploit in this instance are the relative lack of security features in JavaScript and the various browser's implementation of JavaScript, these security gaps are what XSS and a host of other client side vulnerabilities are based on. While Ajax may not open up new security holes, per se, due to the conversational aspects between client and server of Ajax communication, attacks can be optimized. A single zoom in or zoom out on a graphic in an Ajax application may round trip to the server dozens of times. One of the first steps many attackers take is frequently footprinting an environment, this can include scanning local addresses like 192.*.*.* IP addresses, checking local directories, files, and settings for known vulnerabilities, and so on.</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\"><IMG SRC=javascript:alert('XSS')></xhtml:div>\n               <xhtml:p>The XSS script that is embedded in a given IMG tag can be manipulated to probe a different address on every click of the mouse or other motions that the Ajax application is aware of.</xhtml:p>\n               <xhtml:p>In addition the enumerations allow for the attacker to nest sequential logic in the attacks. While Ajax applications do not open up brand new attack vectors, the existing attack vectors are more than adequate to execute attacks, and now these attacks can be optimized to sequentially execute and enumerate host environments.</xhtml:p>\n            ",
                "~/.bash_profile and ~/.bashrc are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly. ~/.bash_profile is executed for login shells and ~/.bashrc is executed for interactive non-login shells. This means that when a user logs in (via username and password) to the console (either locally or remotely via something like SSH), ~/.bash_profile is executed before the initial command prompt is returned to the user. After that, every time a new shell is opened, ~/.bashrc is executed. This allows users more fine grained control over when they want certain commands executed. These files are meant to be written to by the local user to configure their own environment; however, adversaries can also insert code into these files to gain persistence each time a user logs in or opens a new shell."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Target software must be able to execute scripts, and also grant the adversary privilege to write/upload scripts."
            ],
            "x_capec_skills_required": {
                "Low": "To load malicious script into open, e.g. world writable directory",
                "Medium": "Executing remote scripts on host and collecting output"
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain.",
            "external_references": [
                {
                    "external_id": "CAPEC-441",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/441.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                }
            ],
            "id": "attack-pattern--13b94aaa-9c95-487c-ad68-8c29d8ac0068",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Malicious Logic Insertion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Authorization": [
                    "Execute Unauthorized Commands"
                ]
            },
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "Access to the component currently deployed at a victim location."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2018-04-25T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary exploits a weakness in access control to modify the execution parameters of a Windows service. Specifically, if the permissions for users and groups are not properly assigned and allow access to the registry keys used to store the configuration information for a service, then an adversary could change settings defining the path to the executable and cause a malicious binary to be executed.",
            "external_references": [
                {
                    "external_id": "CAPEC-478",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/478.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                }
            ],
            "id": "attack-pattern--93bedd5b-70cc-48a0-a7c9-09b3800bd6bc",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Modification of Windows Service Configuration",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Integrity": [
                    "Execute Unauthorized Commands (By altering specific configuration settings for the service, the adversary could run arbitrary code to be executed.)"
                ]
            },
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The adversary must have the capability to write to the Windows Registry on the targeted system."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_status": "Usable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2018-04-26T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary exploits a weakness in authorization and installs a new root certificate on a compromised system. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.",
            "external_references": [
                {
                    "external_id": "CAPEC-479",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/479.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                }
            ],
            "id": "attack-pattern--a35eb10e-1168-4c77-8f46-87fa6ee40ef7",
            "modified": "2018-04-26T00:00:00.000Z",
            "name": "Malicious Root Certificate",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The adversary must have the ability to create a new root certificate."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary, through a previously installed malicious application, issues an intent directed toward a specific trusted application's component in an attempt to achieve a variety of different objectives including modification of data, information disclosure, and data injection. Components that have been unintentionally exported and made public are subject to this type of an attack. If the component blindly trusts the intent's action, then the target application performs the functionality at the adversary's request, helping the adversary achieve the desired negative technical impact.",
            "external_references": [
                {
                    "external_id": "CAPEC-502",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/502.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                },
                {
                    "description": "Erika Chin, Adrienne Porter Felt, Kate Greenwood, David Wagner, Analyzing Inter-Application Communication in Android, 2011, International Conference on Mobile Systems, Applications, and Services (MobiSys)",
                    "external_id": "REF-427",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://people.eecs.berkeley.edu/~daw/papers/intents-mobisys11.pdf"
                }
            ],
            "id": "attack-pattern--b2e8de4b-6757-4e7e-9c5c-210c44100577",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Intent Spoof",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_prerequisites": [
                "An adversary must be able install a purpose built malicious application onto the Android device and convince the user to execute it. The malicious application will be used to issue spoofed intents."
            ],
            "x_capec_status": "Draft",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary, through a malicious web page, accesses application specific functionality by leveraging interfaces registered through WebView's addJavascriptInterface API. Once an interface is registered to WebView through addJavascriptInterface, it becomes global and all pages loaded in the WebView can call this interface.",
            "external_references": [
                {
                    "external_id": "CAPEC-503",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/503.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                },
                {
                    "description": "Tongbo Luo, Hao Hao, Wenliang Du, Yifei Wang, Heng Yin, Attacks on WebView in the Android System, 2011, Annual Computer Security Applications Conference (ACSAC)",
                    "external_id": "REF-430",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cis.syr.edu/~wedu/Research/paper/webview_acsac2011.pdf"
                }
            ],
            "id": "attack-pattern--c195a0a3-62fc-4def-9702-8938440cc9a7",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "WebView Exposure",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_prerequisites": [
                "This type of an attack requires the adversary to convince the user to load the malicious web page inside the target application. Once loaded, the malicious web page will have the same permissions as the target application and will have access to all registered interfaces. Both the permission and the interface must be in place for the functionality to be exposed."
            ],
            "x_capec_status": "Draft",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker with access to data files and processes on a victim's system injects malicious data into critical operational data during configuration or recalibration, causing the victim's system to perform in a suboptimal manner that benefits the adversary.",
            "external_references": [
                {
                    "external_id": "CAPEC-536",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/536.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                },
                {
                    "description": "John F. Miller, Supply Chain Attack Framework and Attack Patterns, 2013, The MITRE Corporation",
                    "external_id": "REF-439",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.mitre.org/sites/default/files/publications/supply-chain-attack-framework-14-0228.pdf"
                }
            ],
            "id": "attack-pattern--be032a5f-7575-4e82-86d8-6c5cabb3d9dd",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Data Injected During Configuration",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_example_instances": [
                "An adversary wishes to bypass a security system to access an additional network segment where critical data is kept. The adversary knows that some configurations of the security system will allow for remote bypass under certain conditions, such as switching a specific parameter to a different value. The adversary knows the bypass will work but also will be detected within the logging data of the security system. The adversary waits until an upgrade is performed to the security system by the victim's system administrators, and the adversary has access to an external logging system. The adversary injects false log entries that cause the administrators to think there are two different error states within the security system - one involving the specific parameter and the other involving the logging entries. The specific parameter is adjusted to a different value, and the logging level is reduced to a lower level that will not cause an adversary bypass to be detected. The adversary stops injecting false log data, and the administrators of the security system believe the issues were caused by the upgrade and are now resolved. The adversary is then able to bypass the security system."
            ],
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The attacker must have previously compromised the victim's systems or have physical access to the victim's systems.",
                "Advanced knowledge of software and hardware capabilities of a manufacturer's product."
            ],
            "x_capec_skills_required": {
                "High": "Ability to generate and inject false data into operational data into a system with the intent of causing the victim to alter the configuration of the system."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary obtains unauthorized information due to insecure or incomplete data deletion in a multi-tenant environment. If a cloud provider fails to completely delete storage and data from former cloud tenants' systems/resources, once these resources are allocated to new, potentially malicious tenants, the latter can probe the provided resources for sensitive information still there.",
            "external_references": [
                {
                    "external_id": "CAPEC-546",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/546.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                },
                {
                    "description": "Kopo M. Ramokapane, Awais Rashid, Jose M. Such, Assured Deletion in the Cloud: Requirements, Challenges and Future Directions, Association for Computing Machinery (ACM), Proceedings of the 2016 ACM on Cloud Computing Security Workshop",
                    "external_id": "REF-461",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://nms.kcl.ac.uk/jose.such/pubs/Assured_deletion.pdf"
                }
            ],
            "id": "attack-pattern--ed3de4d7-a053-42e4-9f3d-3a6293034e96",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Probe Application Memory",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data (A successful attack that probes application memory will compromise the confidentiality of that data.)"
                ]
            },
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The cloud provider must not assuredly delete part or all of the sensitive data for which they are responsible.The adversary must have the ability to interact with the system."
            ],
            "x_capec_skills_required": {
                "Low": "The adversary requires the ability to traverse directory structure."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2015-11-09T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "When an operating system starts, it also starts programs called services or daemons. Adversaries may install a new service which will be executed at startup (on a Windows system, by modifying the registry). The service name may be disguised by using a name from a related operating system or benign software. Services are usually run with elevated privileges.",
            "external_references": [
                {
                    "external_id": "CAPEC-550",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/550.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                }
            ],
            "id": "attack-pattern--aef8e9e0-4714-4890-9470-06276c61abfd",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Install New Service",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_status": "Draft",
            "x_capec_version": "3.2"
        },
        {
            "created": "2015-11-09T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "When an operating system starts, it also starts programs called services or daemons. Modifying existing services may break existing services or may enable services that are disabled/not commonly used.",
            "external_references": [
                {
                    "external_id": "CAPEC-551",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/551.html"
                },
                {
                    "external_id": "CWE-284",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/284.html"
                },
                {
                    "external_id": "CWE-522",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/522.html"
                }
            ],
            "id": "attack-pattern--13e147c3-7baa-4ec4-aafd-9135d46545cc",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Modify Existing Service",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_status": "Draft",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2019-10211
{
    "error": "vulnerability not found"
}
CVE-2015-3166
{
    "id": "bundle--bf06db0b-c83e-4332-a026-ef9f22d6bcb2",
    "objects": [
        {
            "created": "2020-05-24T00:01:20.629Z",
            "description": "The snprintf implementation in PostgreSQL before 9.0.20, 9.1.x before 9.1.16, 9.2.x before 9.2.11, 9.3.x before 9.3.7, and 9.4.x before 9.4.2 does not properly handle system-call errors, which allows attackers to obtain sensitive information or have other unspecified impact via unknown vectors, as demonstrated by an out-of-memory error.",
            "external_references": [
                {
                    "external_id": "CVE-2015-3166",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "modified": "2020-05-24T00:01:20.629Z",
            "name": "CVE-2015-3166",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-119"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://ubuntu.com/usn/usn-2621-1",
                    "refsource": "MISC",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://ubuntu.com/usn/usn-2621-1"
                },
                {
                    "name": "http://www.debian.org/security/2015/dsa-3269",
                    "refsource": "MISC",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3269"
                },
                {
                    "name": "http://www.debian.org/security/2015/dsa-3270",
                    "refsource": "MISC",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3270"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1587/",
                    "refsource": "MISC",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1587/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.0/static/release-9-0-20.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.0/static/release-9-0-20.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.1/static/release-9-1-16.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.1/static/release-9-1-16.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.2/static/release-9-2-11.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.2/static/release-9-2-11.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.3/static/release-9-3-7.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.3/static/release-9-3-7.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-2.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-2.html"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.306Z",
            "id": "relationship--5ee9b68c-156a-4d95-837f-86847d48d7d5",
            "modified": "2020-06-04T19:13:07.306Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.307Z",
            "id": "relationship--6d8c3f81-e0b0-4a4e-98a4-b171868adfa1",
            "modified": "2020-06-04T19:13:07.307Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.307Z",
            "id": "relationship--8b0ed777-6112-427c-bf70-3acc533ac94d",
            "modified": "2020-06-04T19:13:07.307Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--476ca631-2695-43f8-82f6-83c06a07ae36",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.307Z",
            "id": "relationship--11f7aa00-6090-4fbc-a2cb-aa6273949123",
            "modified": "2020-06-04T19:13:07.307Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.311Z",
            "id": "relationship--6084f254-2087-4aa4-b7e8-32738002455a",
            "modified": "2020-06-04T19:13:07.311Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.311Z",
            "id": "relationship--11a738e4-62cf-44f4-8dee-3f091b4f4ee8",
            "modified": "2020-06-04T19:13:07.311Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.311Z",
            "id": "relationship--c9bb32bf-1233-49ba-8eda-46d251c422c4",
            "modified": "2020-06-04T19:13:07.311Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.311Z",
            "id": "relationship--4bab8d94-f969-4685-afb2-ed32af002ffc",
            "modified": "2020-06-04T19:13:07.311Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.311Z",
            "id": "relationship--db62472e-2089-4f26-b991-3705cdc31b3e",
            "modified": "2020-06-04T19:13:07.311Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.311Z",
            "id": "relationship--203b5d4d-ec24-4f64-a209-3a06abe8edcb",
            "modified": "2020-06-04T19:13:07.311Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "target_ref": "vulnerability--0ad2cca1-f1ac-3a13-b403-29fb1c4a4d64",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "external_references": [
                {
                    "external_id": "CAPEC-10",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/10.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-99",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/99.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Sharefuzz",
                    "external_id": "REF-2",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://sharefuzz.sourceforge.net"
                }
            ],
            "id": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Environment Variables",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in $HOME</xhtml:div>\n               <xhtml:p>A buffer overflow in sccw allows local users to gain root access via the $HOME environmental variable.</xhtml:p>See also: CVE-1999-0906",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in TERM</xhtml:div>\n               <xhtml:p>A buffer overflow in the rlogin program involves its consumption of the TERM environmental variable.</xhtml:p>See also: CVE-1999-0046"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application uses environment variables.",
                "An environment variable exposed to the user is vulnerable to a buffer overflow.",
                "The vulnerable environment variable uses untrusted data.",
                "Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
            "external_references": [
                {
                    "external_id": "CAPEC-100",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/100.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-129",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/129.html"
                },
                {
                    "external_id": "CWE-805",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/805.html"
                },
                {
                    "external_id": "CWE-19",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/19.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                }
            ],
            "id": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Overflow Buffers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "The most straightforward example is an application that reads in input from the user and stores it in an internal buffer but does not check that the size of the input data is less than or equal to the size of the buffer. If the user enters excessive length data, the buffer may overflow leading to the application crashing, or worse, enabling the user to cause execution of injected code.",
                "Many web servers enforce security in web applications through the use of filter plugins. An example is the SiteMinder plugin used for authentication. An overflow in such a plugin, possibly through a long URL or redirect parameter, can allow an adversary not only to bypass the security checks but also execute arbitrary code on the target web server in the context of the user that runs the web server process."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Targeted software performs buffer operations.",
                "Targeted software inadequately performs bounds-checking on buffer operations.",
                "Adversary has the capability to influence the input to buffer operations."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack. Detecting and exploiting a buffer overflow does not require any resources beyond knowledge of and access to the target system."
            ],
            "x_capec_skills_required": {
                "High": "In cases of directed overflows, where the motive is to divert the flow of the program or application as per the adversaries' bidding, high level skills are required. This may involve detailed knowledge of the target system architecture and kernel.",
                "Low": "In most cases, overflowing a buffer does not require advanced skills beyond the ability to notice an overflow and stuff an input variable with content."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary manipulates an application's interaction with a buffer in an attempt to read or modify data they shouldn't have access to. Buffer attacks are distinguished in that it is the buffer space itself that is the target of the attack rather than any code responsible for interpreting the content of the buffer. In virtually all buffer attacks the content that is placed in the buffer is immaterial. Instead, most buffer attacks involve retrieving or providing more input than can be stored in the allocated buffer, resulting in the reading or overwriting of other unintended program memory.",
            "external_references": [
                {
                    "external_id": "CAPEC-123",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/123.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                }
            ],
            "id": "attack-pattern--476ca631-2695-43f8-82f6-83c06a07ae36",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "Buffer Manipulation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution (A buffer manipulation attack often results in a crash of the application due to the corruption of memory.)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.)",
                    "Modify Data (If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.)",
                    "Read Data (If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.)"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The adversary must identify a programmatic means for interacting with a buffer, such as vulnerable C code, and be able to provide input to this interaction."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.",
            "external_references": [
                {
                    "external_id": "CAPEC-14",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/14.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-353",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/353.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Client-side Injection-induced Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in Internet Explorer 4.0 Via EMBED Tag</xhtml:div>\n               <xhtml:p>Authors often use <EMBED> tags in HTML documents. For example</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\"><EMBED TYPE=\"audio/midi\" SRC=\"/path/file.mid\" AUTOSTART=\"true\"></xhtml:div>\n               <xhtml:p>If an attacker supplies an overly long path in the SRC= directive, the mshtml.dll component will suffer a buffer overflow. This is a standard example of content in a Web page being directed to exploit a faulty module in the system. There are potentially thousands of different ways data can propagate into a given system, thus these kinds of attacks will continue to be found in the wild.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The targeted client software communicates with an external server.",
                "The targeted client software has a buffer overflow vulnerability."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap requires a more in-depth knowledge and higher skill level.",
                "Low": "To achieve a denial of service, an attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "external_references": [
                {
                    "external_id": "CAPEC-24",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/24.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Filter Failure through Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Filter Failure in Taylor UUCP Daemon</xhtml:div>\n               <xhtml:p>Sending in arguments that are too long to cause the filter to fail open is one instantiation of the filter failure attack. The Taylor UUCP daemon is designed to remove hostile arguments before they can be executed. If the arguments are too long, however, the daemon fails to remove them. This leaves the door open for attack.</xhtml:p>\n            ",
                "A filter is used by a web application to filter out characters that may allow the input to jump from the data plane to the control plane when data is used in a SQL statement (chaining this attack with the SQL injection attack). Leveraging a buffer overflow the attacker makes the filter fail insecurely and the tainted data is permitted to enter unfiltered into the system, subsequently causing a SQL injection.",
                "Audit Truncation and Filters with Buffer Overflow. Sometimes very large transactions can be used to destroy a log file or cause partial logging failures. In this kind of attack, log processing code might be examining a transaction in real-time processing, but the oversized transaction causes a logic branch or an exception of some kind that is trapped. In other words, the transaction is still executed, but the logging or filtering mechanism still fails. This has two consequences, the first being that you can run transactions that are not logged in any way (or perhaps the log entry is completely corrupted). The second consequence is that you might slip through an active filter that otherwise would stop your attack."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Ability to control the length of data passed to an active filter."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "external_references": [
                {
                    "external_id": "CAPEC-42",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/42.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "CERT Advisory CA-1997-05 MIME Conversion Buffer Overflow in Sendmail Versions 8.8.3 and 8.8.4, Software Engineering Institute: Carnegie Mellon University",
                    "external_id": "REF-364",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cert.org/advisories/CA-1997-05.html"
                }
            ],
            "id": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "MIME Conversion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Sendmail Overflow</xhtml:div>\n               <xhtml:p>A MIME conversion buffer overflow exists in Sendmail versions 8.8.3 and 8.8.4. Sendmail versions 8.8.3 and 8.8.4 are vulnerable to a buffer overflow in the MIME handling code. By sending a message with specially-crafted headers to the server, a remote attacker can overflow a buffer and execute arbitrary commands on the system with root privileges.</xhtml:p>\n               <xhtml:p>Sendmail performs a 7 bit to 8 bit conversion on email messages. This vulnerability is due to the fact that insufficient bounds checking was performed while performing these conversions. This gave attacker an opportunity to overwrite the internal stack of sendmail while it is executing with root privileges. An attacker first probes the target system to figure out what mail server is used on the system and what version. An attacker could then test out the exploit at their leisure on their own machine running the same version of the mail server before using it in the wild.</xhtml:p>See also: CVE-1999-0047"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target system uses a mail server.",
                "Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system."
            ],
            "x_capec_skills_required": {
                "High": "Causing arbitrary code to execute on the target system.",
                "Low": "It may be trivial to cause a DoS via this attack pattern"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-44",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/44.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "modified": "2015-12-07T00:00:00.000Z",
            "name": "Overflow Binary Resource File",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Binary files like music and video files are appended with additional data to cause buffer overflow on target systems. Because these files may be filled with otherwise popular content, the attacker has an excellent vector for wide distribution. There have been numerous cases, for example of malicious screen savers for sports teams that are distributed on the event of the team winning a championship."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Target software processes binary resource files.",
                "Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file."
            ],
            "x_capec_skills_required": {
                "Medium": "To modify file, deceive client into downloading, locate and exploit remote stack or heap vulnerability"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "external_references": [
                {
                    "external_id": "CAPEC-45",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/45.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Symbolic Links",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow with Symbolic Links in EFTP Server</xhtml:div>\n               <xhtml:p>The EFTP server has a buffer overflow that can be exploited if an attacker uploads a .lnk (link) file that contains more than 1,744 bytes. This is a classic example of an indirect buffer overflow. First the attacker uploads some content (the link file) and then the attacker causes the client consuming the data to be exploited. In this example, the ls command is exploited to compromise the server software.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The attacker can create symbolic link on the target host.",
                "The target host does not perform correct boundary checking while consuming data from a resources."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-46",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/46.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Overflow Variables and Tags",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in MidiPlug</xhtml:div>\n               <xhtml:p>A buffer overflow vulnerability exists in the Yamaha MidiPlug that can be accessed via a Text variable found in an EMBED tag.</xhtml:p>See also: CVE-1999-0946",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in Exim</xhtml:div>\n               <xhtml:p>A buffer overflow in Exim allows local users to gain root privileges by providing a long :include: option in a .forward file.</xhtml:p>See also: CVE-1999-0971"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target program consumes user-controllable data in the form of tags or variables.",
                "The target program does not perform sufficient boundary checking."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-47",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/47.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-130",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/130.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Parameter Expansion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Attack Example: FTP glob()</xhtml:p>\n               <xhtml:p>The glob() function in FTP servers has been susceptible to attack as a result of incorrect resizing. This is an ftpd glob() Expansion LIST Heap Overflow Vulnerability. ftp daemon contains a heap-based buffer overflow condition. The overflow occurs when the LIST command is issued with an argument that expands into an oversized string after being processed by glob().</xhtml:p>\n               <xhtml:p>This buffer overflow occurs in memory that is dynamically allocated. It may be possible for attackers to exploit this vulnerability and execute arbitrary code on the affected host.</xhtml:p>\n               <xhtml:p>To exploit this, the attacker must be able to create directories on the target host.</xhtml:p>\n               <xhtml:p>The glob() function is used to expand short-hand notation into complete file names. By sending to the FTP server a request containing a tilde (~) and other wildcard characters in the pathname string, a remote attacker can overflow a buffer and execute arbitrary code on the FTP server to gain root privileges. Once the request is processed, the glob() function expands the user input, which could exceed the expected length. In order to exploit this vulnerability, the attacker must be able to create directories on the FTP server.</xhtml:p>\n               <xhtml:p>[R.47.1][REF-2]</xhtml:p>See also: CVE-2001-0249",
                "\n               <xhtml:p>Buffer overflow in the glob implementation in libc in NetBSD-current before 20050914, and NetBSD 2.* and 3.* before 20061203, as used by the FTP daemon, allows remote authenticated users to execute arbitrary code via a long pathname that results from path expansion.</xhtml:p>\n               <xhtml:p>The limit computation of an internal buffer was done incorrectly. The size of the buffer in byte was used as element count, even though the elements of the buffer are 2 bytes long. Long expanded path names would therefore overflow the buffer.</xhtml:p>See also: CVE-2006-6652"
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.",
                "The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)."
            ],
            "x_capec_resources_required": [
                "Access to the program source or binary. If the program is only available in binary then a disassembler and other reverse engineering tools will be helpful."
            ],
            "x_capec_skills_required": {
                "High": "Finding this particular buffer overflow may not be trivial. Also, stack and especially heap based buffer overflows require a lot of knowledge if the intended goal is arbitrary code execution. Not only that the attacker needs to write the shell code to accomplish his or her goals, but the attacker also needs to find a way to get the program execution to jump to the planted shell code. There also needs to be sufficient room for the payload. So not every buffer overflow will be exploitable, even by a skilled attacker."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2015-0244
{
    "id": "bundle--48280882-1096-4648-9920-f9ad013dcb35",
    "objects": [
        {
            "created": "2020-05-24T00:01:21.951Z",
            "description": "PostgreSQL before 9.0.19, 9.1.x before 9.1.15, 9.2.x before 9.2.10, 9.3.x before 9.3.6, and 9.4.x before 9.4.1 does not properly handle errors while reading a protocol message, which allows remote attackers to conduct SQL injection attacks via crafted binary data in a parameter and causing an error, which triggers the loss of synchronization and part of the protocol message to be treated as a new message, as demonstrated by causing a timeout or query cancellation.",
            "external_references": [
                {
                    "external_id": "CVE-2015-0244",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "modified": "2020-05-24T00:01:21.951Z",
            "name": "CVE-2015-0244",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-89"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://www.debian.org/security/2015/dsa-3155",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3155"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1569/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1569/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-0-19.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-0-19.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-1-15.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-1-15.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-2-10.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-2-10.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-3-6.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-3-6.html"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.402Z",
            "id": "relationship--7b22372b-156d-4e8b-a13f-b63f64d1860a",
            "modified": "2020-06-04T19:13:07.402Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--89acf77d-723b-43b4-b66d-6eaafed52369",
            "target_ref": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.403Z",
            "id": "relationship--da580168-c102-446d-9b27-508bd6ab6dfc",
            "modified": "2020-06-04T19:13:07.403Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--f0e32d0e-9580-4b79-95e0-6e3b99bf6e45",
            "target_ref": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.403Z",
            "id": "relationship--bfcabb4e-7949-4e34-9162-91dd8cec11b2",
            "modified": "2020-06-04T19:13:07.403Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--7c90bef7-530c-427b-8fb7-f9d3eda9c26a",
            "target_ref": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.403Z",
            "id": "relationship--94914ace-adfd-494b-bae4-ff9075f4c39f",
            "modified": "2020-06-04T19:13:07.403Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--35bde6ec-0a19-462c-92b4-9c481dc4986e",
            "target_ref": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.403Z",
            "id": "relationship--7eaa7665-d625-482b-bfff-781d6e68d01b",
            "modified": "2020-06-04T19:13:07.403Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--42acc604-a86c-46f7-bd03-6e532c02d85e",
            "target_ref": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.404Z",
            "id": "relationship--0c0dc4ee-0a9b-423e-85a7-a84869e8c665",
            "modified": "2020-06-04T19:13:07.404Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
            "target_ref": "vulnerability--958b3887-b084-3219-8f5d-bd22708ec432",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
            "external_references": [
                {
                    "external_id": "CAPEC-108",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/108.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-78",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/78.html"
                },
                {
                    "external_id": "CWE-114",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/114.html"
                }
            ],
            "id": "attack-pattern--89acf77d-723b-43b4-b66d-6eaafed52369",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Command Line Execution through SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>SQL injection vulnerability in Cacti 0.8.6i and earlier, when register_argc_argv is enabled, allows remote attackers to execute arbitrary SQL commands via the (1) second or (2) third arguments to cmd.php. NOTE: this issue can be leveraged to execute arbitrary commands since the SQL query results are later used in the polling_items array and popen function (CVE-2006-6799).</xhtml:p>\n               <xhtml:p>Reference: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-6799</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The application does not properly validate data before storing in the database",
                "Backend application implicitly trusts the data stored in the database",
                "Malicious data is used on the backend as a command line argument"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "High": "The attacker most likely has to be familiar with the internal functionality of the system to launch this attack. Without that knowledge, there are not many feedback mechanisms to give an attacker the indication of how to perform command injection or whether the attack is succeeding."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject his or her own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible.",
            "external_references": [
                {
                    "external_id": "CAPEC-109",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/109.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-100",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/100.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-564",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/564.html"
                },
                {
                    "description": "OWASP Testing Guide (v4 [DRAFT]), The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-4",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.owasp.org/index.php/Testing_for_ORM_Injection"
                }
            ],
            "id": "attack-pattern--f0e32d0e-9580-4b79-95e0-6e3b99bf6e45",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Object Relational Mapping Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "When using Hibernate, it is possible to use the session.find() method to run queries against the database. This is an overloaded method that provides facilities to perform binding between the supplied user data and place holders in the statically defined query. However, it is also possible to use the session.find() method without using any of these query binding overloads, hence effectively concatenating the user supplied data with rest of the SQL query, resulting in a possibility for SQL injection. While the framework may provide mechanisms to use methods immune to SQL injections, it may also contain ways that are not immune that may be chosen by the developer."
            ],
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "An application uses data access layer generated by an ORM tool or framework",
                "An application uses user supplied data in queries executed against the database",
                "The separation between data plane and control plane is not ensured, through either developer error or an underlying weakness in the data access layer code generation framework"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Medium": "Knowledge of general SQL injection techniques and subtleties of the ORM framework is needed"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message.",
            "external_references": [
                {
                    "external_id": "CAPEC-110",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/110.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                }
            ],
            "id": "attack-pattern--7c90bef7-530c-427b-8fb7-f9d3eda9c26a",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "SQL Injection through SOAP Parameter Tampering",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "An attacker uses a travel booking system that leverages SOAP communication between the client and the travel booking service. An attacker begins to tamper with the outgoing SOAP messages by modifying their parameters to include characters that would break a dynamically constructed SQL query. He notices that the system fails to respond when these malicious inputs are injected in certain parameters transferred in a SOAP message. The attacker crafts a SQL query that modifies his payment amount in the travel system's database and passes it as one of the parameters . A backend batch payment system later fetches the payment amount from the database (the modified payment amount) and sends to the credit card processor, enabling the attacker to purchase the airfare at a lower price. An attacker needs to have some knowledge of the system's database, perhaps by exploiting another weakness that results in information disclosure."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SOAP messages are used as a communication mechanism in the system",
                "SOAP parameters are not properly validated at the service provider",
                "The service provider does not properly utilize parameter binding when building SQL queries"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "High": "If the attacker has to perform SQL injection blindly",
                "Medium": "If the attacker is able to gain good understanding of the system's database schema"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker is able to leverage access gained to the database to read / write data to the file system, compromise the operating system, create a tunnel for accessing the host machine, and use this access to potentially attack other machines on the same network as the database machine. Traditionally SQL injections attacks are viewed as a way to gain unauthorized read access to the data stored in the database, modify the data in the database, delete the data, etc. However, almost every data base management system (DBMS) system includes facilities that if compromised allow an attacker complete access to the file system, operating system, and full access to the host running the database. The attacker can then use this privileged access to launch subsequent attacks. These facilities include dropping into a command shell, creating user defined functions that can call system level libraries present on the host machine, stored procedures, etc.",
            "external_references": [
                {
                    "external_id": "CAPEC-470",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/470.html"
                },
                {
                    "external_id": "CWE-250",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/250.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "description": "Bernardo Damele Assump \u00e7\u00e3o Guimar\u00e3es, Advanced SQL Injection to Operating System Full Control, 2009--04---10",
                    "external_id": "REF-408",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.blackhat.com/presentations/bh-europe-09/Guimaraes/Blackhat-europe-09-Damele-SQLInjection-whitepaper.pdf"
                }
            ],
            "id": "attack-pattern--35bde6ec-0a19-462c-92b4-9c481dc4986e",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "Expanding Control over the Operating System from the Database",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_prerequisites": [
                "A vulnerable DBMS is usedA SQL injection exists that gives an attacker access to the database or an attacker has access to the DBMS via other means"
            ],
            "x_capec_skills_required": {
                "High": "Low level knowledge of the various facilities available in different DBMS systems for interacting with the file system and operating system"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input. When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to talk directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database. In order to successfully inject SQL and retrieve information from a database, an attacker:",
            "external_references": [
                {
                    "external_id": "CAPEC-66",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/66.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                }
            ],
            "id": "attack-pattern--42acc604-a86c-46f7-bd03-6e532c02d85e",
            "modified": "2019-04-04T00:00:00.000Z",
            "name": "SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "With PHP-Nuke versions 7.9 and earlier, an attacker can successfully access and modify data, including sensitive contents such as usernames and password hashes, and compromise the application through SQL Injection. The protection mechanism against SQL Injection employs a blacklist approach to input validation. However, because of improper blacklisting, it is possible to inject content such as \"foo'/**/UNION\" or \"foo UNION/**/\" to bypass validation and glean sensitive information from the database. See also: CVE-2006-5525"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SQL queries used by the application to store, retrieve or modify data.",
                "User-controllable input that is not properly validated by the application as part of SQL queries."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Low": "It is fairly simple for someone with basic SQL knowledge to perform SQL injection, in general. In certain instances, however, specific knowledge of the database employed may be required."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
            "external_references": [
                {
                    "external_id": "CAPEC-7",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/7.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                }
            ],
            "id": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Blind SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>An adversary may try entering something like \"username' AND 1=1; --\" in an input field. If the result is the same as when the adversary entered \"username\" in the field, then the adversary knows that the application is vulnerable to SQL Injection. The adversary can then ask yes/no questions from the database server to extract information from it. For example, the adversary can extract table names from a database using the following types of queries:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username' AND ascii(lower(substring((SELECT TOP 1 name FROM sysobjects WHERE xtype='U'), 1, 1))) > 108\".</xhtml:div>\n               <xhtml:p>If the above query executes properly, then the adversary knows that the first character in a table name in the database is a letter between m and z. If it doesn't, then the adversary knows that the character must be between a and l (assuming of course that table names only contain alphabetic characters). By performing a binary search on all character positions, the adversary can determine all table names in the database. Subsequently, the adversary may execute an actual attack and send something like:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username'; DROP TABLE trades; --</xhtml:div>\n            ",
                "In the PHP application TimeSheet 1.1, an adversary can successfully retrieve username and password hashes from the database using Blind SQL Injection. If the adversary is aware of the local path structure, the adversary can also remotely execute arbitrary code and write the output of the injected queries to the local path. Blind SQL Injection is possible since the application does not properly sanitize the $_POST['username'] variable in the login.php file. See also: CVE-2006-4705"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SQL queries used by the application to store, retrieve or modify data.",
                "User-controllable input that is not properly validated by the application as part of SQL queries."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Medium": "Determining the database type and version, as well as the right number and type of parameters to the query being injected in the absence of error messages requires greater skill than reverse-engineering database error messages."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2017-14798
{
    "error": "vulnerability not found"
}
CVE-2015-0243
{
    "id": "bundle--ff3d9075-72c1-490a-9101-cc97f8c58ee4",
    "objects": [
        {
            "created": "2020-05-24T00:01:21.951Z",
            "description": "Multiple buffer overflows in contrib/pgcrypto in PostgreSQL before 9.0.19, 9.1.x before 9.1.15, 9.2.x before 9.2.10, 9.3.x before 9.3.6, and 9.4.x before 9.4.1 allow remote authenticated users to cause a denial of service (crash) and possibly execute arbitrary code via unspecified vectors.",
            "external_references": [
                {
                    "external_id": "CVE-2015-0243",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "modified": "2020-05-24T00:01:21.951Z",
            "name": "CVE-2015-0243",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-120"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://www.debian.org/security/2015/dsa-3155",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3155"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1569/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1569/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-0-19.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-0-19.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-1-15.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-1-15.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-2-10.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-2-10.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-3-6.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-3-6.html"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.540Z",
            "id": "relationship--d6e3822b-0a77-456b-9eaa-fbe8eb0c5a50",
            "modified": "2020-06-04T19:13:07.540Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.540Z",
            "id": "relationship--9985adb6-399e-449c-9547-501ac9f71106",
            "modified": "2020-06-04T19:13:07.540Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.540Z",
            "id": "relationship--c3fd38fc-5d07-40e9-8be7-37e106f5d1de",
            "modified": "2020-06-04T19:13:07.540Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.540Z",
            "id": "relationship--22ab97ae-02b4-4686-b345-e45d27fa1af9",
            "modified": "2020-06-04T19:13:07.540Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.540Z",
            "id": "relationship--3ca8733d-6df1-4888-b314-2214d93ad8f1",
            "modified": "2020-06-04T19:13:07.540Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.541Z",
            "id": "relationship--dc6b63cc-9e98-4dbc-815d-8e5e67c548ba",
            "modified": "2020-06-04T19:13:07.541Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.541Z",
            "id": "relationship--4080b857-205b-4d21-8fcd-96b6ea21fd7b",
            "modified": "2020-06-04T19:13:07.541Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.541Z",
            "id": "relationship--6ee12246-983d-4231-a0f6-45880ab8e787",
            "modified": "2020-06-04T19:13:07.541Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.541Z",
            "id": "relationship--b9f18eb9-7e83-4183-b9f8-e425c3aa15df",
            "modified": "2020-06-04T19:13:07.541Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.541Z",
            "id": "relationship--fa9dcb47-41e3-42c1-8497-637dc54f75eb",
            "modified": "2020-06-04T19:13:07.541Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--4cd18074-15c1-4206-8391-115685669623",
            "target_ref": "vulnerability--c6fb6530-a5a8-377c-84f8-96f74f8aafbe",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "external_references": [
                {
                    "external_id": "CAPEC-10",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/10.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-99",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/99.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Sharefuzz",
                    "external_id": "REF-2",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://sharefuzz.sourceforge.net"
                }
            ],
            "id": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Environment Variables",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in $HOME</xhtml:div>\n               <xhtml:p>A buffer overflow in sccw allows local users to gain root access via the $HOME environmental variable.</xhtml:p>See also: CVE-1999-0906",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in TERM</xhtml:div>\n               <xhtml:p>A buffer overflow in the rlogin program involves its consumption of the TERM environmental variable.</xhtml:p>See also: CVE-1999-0046"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application uses environment variables.",
                "An environment variable exposed to the user is vulnerable to a buffer overflow.",
                "The vulnerable environment variable uses untrusted data.",
                "Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
            "external_references": [
                {
                    "external_id": "CAPEC-100",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/100.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-129",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/129.html"
                },
                {
                    "external_id": "CWE-805",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/805.html"
                },
                {
                    "external_id": "CWE-19",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/19.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                }
            ],
            "id": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Overflow Buffers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "The most straightforward example is an application that reads in input from the user and stores it in an internal buffer but does not check that the size of the input data is less than or equal to the size of the buffer. If the user enters excessive length data, the buffer may overflow leading to the application crashing, or worse, enabling the user to cause execution of injected code.",
                "Many web servers enforce security in web applications through the use of filter plugins. An example is the SiteMinder plugin used for authentication. An overflow in such a plugin, possibly through a long URL or redirect parameter, can allow an adversary not only to bypass the security checks but also execute arbitrary code on the target web server in the context of the user that runs the web server process."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Targeted software performs buffer operations.",
                "Targeted software inadequately performs bounds-checking on buffer operations.",
                "Adversary has the capability to influence the input to buffer operations."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack. Detecting and exploiting a buffer overflow does not require any resources beyond knowledge of and access to the target system."
            ],
            "x_capec_skills_required": {
                "High": "In cases of directed overflows, where the motive is to divert the flow of the program or application as per the adversaries' bidding, high level skills are required. This may involve detailed knowledge of the target system architecture and kernel.",
                "Low": "In most cases, overflowing a buffer does not require advanced skills beyond the ability to notice an overflow and stuff an input variable with content."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.",
            "external_references": [
                {
                    "external_id": "CAPEC-14",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/14.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-353",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/353.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Client-side Injection-induced Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in Internet Explorer 4.0 Via EMBED Tag</xhtml:div>\n               <xhtml:p>Authors often use <EMBED> tags in HTML documents. For example</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\"><EMBED TYPE=\"audio/midi\" SRC=\"/path/file.mid\" AUTOSTART=\"true\"></xhtml:div>\n               <xhtml:p>If an attacker supplies an overly long path in the SRC= directive, the mshtml.dll component will suffer a buffer overflow. This is a standard example of content in a Web page being directed to exploit a faulty module in the system. There are potentially thousands of different ways data can propagate into a given system, thus these kinds of attacks will continue to be found in the wild.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The targeted client software communicates with an external server.",
                "The targeted client software has a buffer overflow vulnerability."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap requires a more in-depth knowledge and higher skill level.",
                "Low": "To achieve a denial of service, an attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "external_references": [
                {
                    "external_id": "CAPEC-24",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/24.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Filter Failure through Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Filter Failure in Taylor UUCP Daemon</xhtml:div>\n               <xhtml:p>Sending in arguments that are too long to cause the filter to fail open is one instantiation of the filter failure attack. The Taylor UUCP daemon is designed to remove hostile arguments before they can be executed. If the arguments are too long, however, the daemon fails to remove them. This leaves the door open for attack.</xhtml:p>\n            ",
                "A filter is used by a web application to filter out characters that may allow the input to jump from the data plane to the control plane when data is used in a SQL statement (chaining this attack with the SQL injection attack). Leveraging a buffer overflow the attacker makes the filter fail insecurely and the tainted data is permitted to enter unfiltered into the system, subsequently causing a SQL injection.",
                "Audit Truncation and Filters with Buffer Overflow. Sometimes very large transactions can be used to destroy a log file or cause partial logging failures. In this kind of attack, log processing code might be examining a transaction in real-time processing, but the oversized transaction causes a logic branch or an exception of some kind that is trapped. In other words, the transaction is still executed, but the logging or filtering mechanism still fails. This has two consequences, the first being that you can run transactions that are not logged in any way (or perhaps the log entry is completely corrupted). The second consequence is that you might slip through an active filter that otherwise would stop your attack."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Ability to control the length of data passed to an active filter."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "external_references": [
                {
                    "external_id": "CAPEC-42",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/42.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "CERT Advisory CA-1997-05 MIME Conversion Buffer Overflow in Sendmail Versions 8.8.3 and 8.8.4, Software Engineering Institute: Carnegie Mellon University",
                    "external_id": "REF-364",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cert.org/advisories/CA-1997-05.html"
                }
            ],
            "id": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "MIME Conversion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Sendmail Overflow</xhtml:div>\n               <xhtml:p>A MIME conversion buffer overflow exists in Sendmail versions 8.8.3 and 8.8.4. Sendmail versions 8.8.3 and 8.8.4 are vulnerable to a buffer overflow in the MIME handling code. By sending a message with specially-crafted headers to the server, a remote attacker can overflow a buffer and execute arbitrary commands on the system with root privileges.</xhtml:p>\n               <xhtml:p>Sendmail performs a 7 bit to 8 bit conversion on email messages. This vulnerability is due to the fact that insufficient bounds checking was performed while performing these conversions. This gave attacker an opportunity to overwrite the internal stack of sendmail while it is executing with root privileges. An attacker first probes the target system to figure out what mail server is used on the system and what version. An attacker could then test out the exploit at their leisure on their own machine running the same version of the mail server before using it in the wild.</xhtml:p>See also: CVE-1999-0047"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target system uses a mail server.",
                "Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system."
            ],
            "x_capec_skills_required": {
                "High": "Causing arbitrary code to execute on the target system.",
                "Low": "It may be trivial to cause a DoS via this attack pattern"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-44",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/44.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "modified": "2015-12-07T00:00:00.000Z",
            "name": "Overflow Binary Resource File",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Binary files like music and video files are appended with additional data to cause buffer overflow on target systems. Because these files may be filled with otherwise popular content, the attacker has an excellent vector for wide distribution. There have been numerous cases, for example of malicious screen savers for sports teams that are distributed on the event of the team winning a championship."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Target software processes binary resource files.",
                "Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file."
            ],
            "x_capec_skills_required": {
                "Medium": "To modify file, deceive client into downloading, locate and exploit remote stack or heap vulnerability"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "external_references": [
                {
                    "external_id": "CAPEC-45",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/45.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Symbolic Links",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow with Symbolic Links in EFTP Server</xhtml:div>\n               <xhtml:p>The EFTP server has a buffer overflow that can be exploited if an attacker uploads a .lnk (link) file that contains more than 1,744 bytes. This is a classic example of an indirect buffer overflow. First the attacker uploads some content (the link file) and then the attacker causes the client consuming the data to be exploited. In this example, the ls command is exploited to compromise the server software.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The attacker can create symbolic link on the target host.",
                "The target host does not perform correct boundary checking while consuming data from a resources."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-46",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/46.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Overflow Variables and Tags",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in MidiPlug</xhtml:div>\n               <xhtml:p>A buffer overflow vulnerability exists in the Yamaha MidiPlug that can be accessed via a Text variable found in an EMBED tag.</xhtml:p>See also: CVE-1999-0946",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in Exim</xhtml:div>\n               <xhtml:p>A buffer overflow in Exim allows local users to gain root privileges by providing a long :include: option in a .forward file.</xhtml:p>See also: CVE-1999-0971"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target program consumes user-controllable data in the form of tags or variables.",
                "The target program does not perform sufficient boundary checking."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-47",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/47.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-130",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/130.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Parameter Expansion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Attack Example: FTP glob()</xhtml:p>\n               <xhtml:p>The glob() function in FTP servers has been susceptible to attack as a result of incorrect resizing. This is an ftpd glob() Expansion LIST Heap Overflow Vulnerability. ftp daemon contains a heap-based buffer overflow condition. The overflow occurs when the LIST command is issued with an argument that expands into an oversized string after being processed by glob().</xhtml:p>\n               <xhtml:p>This buffer overflow occurs in memory that is dynamically allocated. It may be possible for attackers to exploit this vulnerability and execute arbitrary code on the affected host.</xhtml:p>\n               <xhtml:p>To exploit this, the attacker must be able to create directories on the target host.</xhtml:p>\n               <xhtml:p>The glob() function is used to expand short-hand notation into complete file names. By sending to the FTP server a request containing a tilde (~) and other wildcard characters in the pathname string, a remote attacker can overflow a buffer and execute arbitrary code on the FTP server to gain root privileges. Once the request is processed, the glob() function expands the user input, which could exceed the expected length. In order to exploit this vulnerability, the attacker must be able to create directories on the FTP server.</xhtml:p>\n               <xhtml:p>[R.47.1][REF-2]</xhtml:p>See also: CVE-2001-0249",
                "\n               <xhtml:p>Buffer overflow in the glob implementation in libc in NetBSD-current before 20050914, and NetBSD 2.* and 3.* before 20061203, as used by the FTP daemon, allows remote authenticated users to execute arbitrary code via a long pathname that results from path expansion.</xhtml:p>\n               <xhtml:p>The limit computation of an internal buffer was done incorrectly. The size of the buffer in byte was used as element count, even though the elements of the buffer are 2 bytes long. Long expanded path names would therefore overflow the buffer.</xhtml:p>See also: CVE-2006-6652"
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.",
                "The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)."
            ],
            "x_capec_resources_required": [
                "Access to the program source or binary. If the program is only available in binary then a disassembler and other reverse engineering tools will be helpful."
            ],
            "x_capec_skills_required": {
                "High": "Finding this particular buffer overflow may not be trivial. Also, stack and especially heap based buffer overflows require a lot of knowledge if the intended goal is arbitrary code execution. Not only that the attacker needs to write the shell code to accomplish his or her goals, but the attacker also needs to find a way to get the program execution to jump to the planted shell code. There also needs to be sufficient room for the payload. So not every buffer overflow will be exploitable, even by a skilled attacker."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted.",
            "external_references": [
                {
                    "external_id": "CAPEC-67",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/67.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-134",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/134.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "scut, team teso, Exploiting Format String Vulnerabilities",
                    "external_id": "REF-503",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://doc.bughunter.net/format-string/exploit-fs.html"
                },
                {
                    "description": "Halvar Flake, Auditing binaries for security vulnerabilities",
                    "external_id": "REF-504",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.blackhat.com/presentations/bh-europe-00/HalvarFlake/HalvarFlake.ppt"
                },
                {
                    "description": "Fortify Taxonomy of Vulnerabilities, Fortify Software",
                    "external_id": "REF-505",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://vulncat.hpefod.com/en"
                },
                {
                    "description": "Syslog man page",
                    "external_id": "REF-506",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.rt.com/man/syslog.3.html"
                }
            ],
            "id": "attack-pattern--4cd18074-15c1-4206-8391-115685669623",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "String Format Overflow in syslog()",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "Format string vulnerability in TraceEvent function for ntop before 2.1 allows remote attackers to execute arbitrary code by causing format strings to be injected into calls to the syslog function, via (1) an HTTP GET request, (2) a user name in HTTP authentication, or (3) a password in HTTP authentication. See also: CVE-2002-0412"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The format string argument of the Syslog function can be tainted with user supplied data."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2015-0242
{
    "id": "bundle--9238442f-c1c1-46c9-a6b0-b3451e2eead2",
    "objects": [
        {
            "created": "2020-05-24T00:01:21.951Z",
            "description": "Stack-based buffer overflow in the *printf function implementations in PostgreSQL before 9.0.19, 9.1.x before 9.1.15, 9.2.x before 9.2.10, 9.3.x before 9.3.6, and 9.4.x before 9.4.1, when running on a Windows system, allows remote authenticated users to cause a denial of service (crash) and possibly execute arbitrary code via a floating point number with a large precision, as demonstrated by using the to_char function.",
            "external_references": [
                {
                    "external_id": "CVE-2015-0242",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--5a61af5f-4512-3f86-ad80-1d5d1550a123",
            "modified": "2020-05-24T00:01:21.951Z",
            "name": "CVE-2015-0242",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-787"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://www.debian.org/security/2015/dsa-3155",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3155"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1569/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1569/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-0-19.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-0-19.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-1-15.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-1-15.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-2-10.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-2-10.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-3-6.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-3-6.html"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2015-0241
{
    "id": "bundle--5ffcdc59-0fc2-4f5d-8119-9825dd6ccb79",
    "objects": [
        {
            "created": "2020-05-24T00:01:21.951Z",
            "description": "The to_char function in PostgreSQL before 9.0.19, 9.1.x before 9.1.15, 9.2.x before 9.2.10, 9.3.x before 9.3.6, and 9.4.x before 9.4.1 allows remote authenticated users to cause a denial of service (crash) or possibly execute arbitrary code via a (1) large number of digits when processing a numeric formatting template, which triggers a buffer over-read, or (2) crafted timestamp formatting template, which triggers a buffer overflow.",
            "external_references": [
                {
                    "external_id": "CVE-2015-0241",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "modified": "2020-05-24T00:01:21.951Z",
            "name": "CVE-2015-0241",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-120"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://www.debian.org/security/2015/dsa-3155",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3155"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1569/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1569/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-0-19.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-0-19.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-1-15.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-1-15.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-2-10.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-2-10.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-3-6.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-3-6.html"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.754Z",
            "id": "relationship--3765fa49-e0bb-4841-a7d2-c5c4f2b66479",
            "modified": "2020-06-04T19:13:07.754Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.754Z",
            "id": "relationship--17ef93b6-dc0d-467e-82e3-3621f6563dfc",
            "modified": "2020-06-04T19:13:07.754Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.754Z",
            "id": "relationship--e426d1a0-38dd-4ad0-9c35-e2c8aa08f371",
            "modified": "2020-06-04T19:13:07.754Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.754Z",
            "id": "relationship--935c981f-df12-44e4-a9dd-e398637516a1",
            "modified": "2020-06-04T19:13:07.754Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.755Z",
            "id": "relationship--859af622-d05f-47c6-89a5-8fb6d31e2046",
            "modified": "2020-06-04T19:13:07.755Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.755Z",
            "id": "relationship--965adeba-12b0-4eb5-a28f-ae71b06f409f",
            "modified": "2020-06-04T19:13:07.755Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.755Z",
            "id": "relationship--a9ea089c-8c11-44a8-9dc5-398212aea19c",
            "modified": "2020-06-04T19:13:07.755Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.755Z",
            "id": "relationship--b3acd664-ec5c-407c-a90a-0d47988d869f",
            "modified": "2020-06-04T19:13:07.755Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.755Z",
            "id": "relationship--1512bc9a-c801-43f1-acfe-5fbf13a4f98e",
            "modified": "2020-06-04T19:13:07.755Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.756Z",
            "id": "relationship--d31778ed-e606-482f-8740-d63d9662d9c8",
            "modified": "2020-06-04T19:13:07.756Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--4cd18074-15c1-4206-8391-115685669623",
            "target_ref": "vulnerability--4536178e-eaca-3e52-832d-2ebc6c29dd3e",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "external_references": [
                {
                    "external_id": "CAPEC-10",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/10.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-99",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/99.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Sharefuzz",
                    "external_id": "REF-2",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://sharefuzz.sourceforge.net"
                }
            ],
            "id": "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Environment Variables",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in $HOME</xhtml:div>\n               <xhtml:p>A buffer overflow in sccw allows local users to gain root access via the $HOME environmental variable.</xhtml:p>See also: CVE-1999-0906",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in TERM</xhtml:div>\n               <xhtml:p>A buffer overflow in the rlogin program involves its consumption of the TERM environmental variable.</xhtml:p>See also: CVE-1999-0046"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application uses environment variables.",
                "An environment variable exposed to the user is vulnerable to a buffer overflow.",
                "The vulnerable environment variable uses untrusted data.",
                "Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
            "external_references": [
                {
                    "external_id": "CAPEC-100",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/100.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-129",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/129.html"
                },
                {
                    "external_id": "CWE-805",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/805.html"
                },
                {
                    "external_id": "CWE-19",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/19.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                }
            ],
            "id": "attack-pattern--77e51461-7843-411c-a90e-852498957f76",
            "modified": "2017-08-04T00:00:00.000Z",
            "name": "Overflow Buffers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "The most straightforward example is an application that reads in input from the user and stores it in an internal buffer but does not check that the size of the input data is less than or equal to the size of the buffer. If the user enters excessive length data, the buffer may overflow leading to the application crashing, or worse, enabling the user to cause execution of injected code.",
                "Many web servers enforce security in web applications through the use of filter plugins. An example is the SiteMinder plugin used for authentication. An overflow in such a plugin, possibly through a long URL or redirect parameter, can allow an adversary not only to bypass the security checks but also execute arbitrary code on the target web server in the context of the user that runs the web server process."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Targeted software performs buffer operations.",
                "Targeted software inadequately performs bounds-checking on buffer operations.",
                "Adversary has the capability to influence the input to buffer operations."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack. Detecting and exploiting a buffer overflow does not require any resources beyond knowledge of and access to the target system."
            ],
            "x_capec_skills_required": {
                "High": "In cases of directed overflows, where the motive is to divert the flow of the program or application as per the adversaries' bidding, high level skills are required. This may involve detailed knowledge of the target system architecture and kernel.",
                "Low": "In most cases, overflowing a buffer does not require advanced skills beyond the ability to notice an overflow and stuff an input variable with content."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.",
            "external_references": [
                {
                    "external_id": "CAPEC-14",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/14.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-353",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/353.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--c4a0c765-e4ca-43c2-996e-08ce13ae8f80",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Client-side Injection-induced Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Buffer Overflow in Internet Explorer 4.0 Via EMBED Tag</xhtml:div>\n               <xhtml:p>Authors often use <EMBED> tags in HTML documents. For example</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\"><EMBED TYPE=\"audio/midi\" SRC=\"/path/file.mid\" AUTOSTART=\"true\"></xhtml:div>\n               <xhtml:p>If an attacker supplies an overly long path in the SRC= directive, the mshtml.dll component will suffer a buffer overflow. This is a standard example of content in a Web page being directed to exploit a faulty module in the system. There are potentially thousands of different ways data can propagate into a given system, thus these kinds of attacks will continue to be found in the wild.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The targeted client software communicates with an external server.",
                "The targeted client software has a buffer overflow vulnerability."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap requires a more in-depth knowledge and higher skill level.",
                "Low": "To achieve a denial of service, an attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "external_references": [
                {
                    "external_id": "CAPEC-24",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/24.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d591235a-da3b-4872-8962-27fe44fa1ab0",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Filter Failure through Buffer Overflow",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Filter Failure in Taylor UUCP Daemon</xhtml:div>\n               <xhtml:p>Sending in arguments that are too long to cause the filter to fail open is one instantiation of the filter failure attack. The Taylor UUCP daemon is designed to remove hostile arguments before they can be executed. If the arguments are too long, however, the daemon fails to remove them. This leaves the door open for attack.</xhtml:p>\n            ",
                "A filter is used by a web application to filter out characters that may allow the input to jump from the data plane to the control plane when data is used in a SQL statement (chaining this attack with the SQL injection attack). Leveraging a buffer overflow the attacker makes the filter fail insecurely and the tainted data is permitted to enter unfiltered into the system, subsequently causing a SQL injection.",
                "Audit Truncation and Filters with Buffer Overflow. Sometimes very large transactions can be used to destroy a log file or cause partial logging failures. In this kind of attack, log processing code might be examining a transaction in real-time processing, but the oversized transaction causes a logic branch or an exception of some kind that is trapped. In other words, the transaction is still executed, but the logging or filtering mechanism still fails. This has two consequences, the first being that you can run transactions that are not logged in any way (or perhaps the log entry is completely corrupted). The second consequence is that you might slip through an active filter that otherwise would stop your attack."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Ability to control the length of data passed to an active filter."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "external_references": [
                {
                    "external_id": "CAPEC-42",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/42.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "CERT Advisory CA-1997-05 MIME Conversion Buffer Overflow in Sendmail Versions 8.8.3 and 8.8.4, Software Engineering Institute: Carnegie Mellon University",
                    "external_id": "REF-364",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cert.org/advisories/CA-1997-05.html"
                }
            ],
            "id": "attack-pattern--3c08bb9d-43b5-4468-8b38-387c6cb60da7",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "MIME Conversion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Sendmail Overflow</xhtml:div>\n               <xhtml:p>A MIME conversion buffer overflow exists in Sendmail versions 8.8.3 and 8.8.4. Sendmail versions 8.8.3 and 8.8.4 are vulnerable to a buffer overflow in the MIME handling code. By sending a message with specially-crafted headers to the server, a remote attacker can overflow a buffer and execute arbitrary commands on the system with root privileges.</xhtml:p>\n               <xhtml:p>Sendmail performs a 7 bit to 8 bit conversion on email messages. This vulnerability is due to the fact that insufficient bounds checking was performed while performing these conversions. This gave attacker an opportunity to overwrite the internal stack of sendmail while it is executing with root privileges. An attacker first probes the target system to figure out what mail server is used on the system and what version. An attacker could then test out the exploit at their leisure on their own machine running the same version of the mail server before using it in the wild.</xhtml:p>See also: CVE-1999-0047"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target system uses a mail server.",
                "Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system."
            ],
            "x_capec_skills_required": {
                "High": "Causing arbitrary code to execute on the target system.",
                "Low": "It may be trivial to cause a DoS via this attack pattern"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-44",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/44.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d3634072-88f9-4711-987f-6bff7698bd4c",
            "modified": "2015-12-07T00:00:00.000Z",
            "name": "Overflow Binary Resource File",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Binary files like music and video files are appended with additional data to cause buffer overflow on target systems. Because these files may be filled with otherwise popular content, the attacker has an excellent vector for wide distribution. There have been numerous cases, for example of malicious screen savers for sports teams that are distributed on the event of the team winning a championship."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Target software processes binary resource files.",
                "Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file."
            ],
            "x_capec_skills_required": {
                "Medium": "To modify file, deceive client into downloading, locate and exploit remote stack or heap vulnerability"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "external_references": [
                {
                    "external_id": "CAPEC-45",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/45.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--5d5ff43b-cbe7-4986-bfec-cf979f97e6b9",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Symbolic Links",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow with Symbolic Links in EFTP Server</xhtml:div>\n               <xhtml:p>The EFTP server has a buffer overflow that can be exploited if an attacker uploads a .lnk (link) file that contains more than 1,744 bytes. This is a classic example of an indirect buffer overflow. First the attacker uploads some content (the link file) and then the attacker causes the client consuming the data to be exploited. In this example, the ls command is exploited to compromise the server software.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The attacker can create symbolic link on the target host.",
                "The target host does not perform correct boundary checking while consuming data from a resources."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-46",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/46.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-733",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/733.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--8e403d18-af4e-4abd-bd38-0f99f74b4636",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Overflow Variables and Tags",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in MidiPlug</xhtml:div>\n               <xhtml:p>A buffer overflow vulnerability exists in the Yamaha MidiPlug that can be accessed via a Text variable found in an EMBED tag.</xhtml:p>See also: CVE-1999-0946",
                "\n               <xhtml:div style=\"color:#32498D; font-weight:bold;\">Attack Example: Overflow Variables and Tags in Exim</xhtml:div>\n               <xhtml:p>A buffer overflow in Exim allows local users to gain root privileges by providing a long :include: option in a .forward file.</xhtml:p>See also: CVE-1999-0971"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target program consumes user-controllable data in the form of tags or variables.",
                "The target program does not perform sufficient boundary checking."
            ],
            "x_capec_skills_required": {
                "High": "Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.",
                "Low": "An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "external_references": [
                {
                    "external_id": "CAPEC-47",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/47.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-119",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/119.html"
                },
                {
                    "external_id": "CWE-118",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/118.html"
                },
                {
                    "external_id": "CWE-130",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/130.html"
                },
                {
                    "external_id": "CWE-131",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/131.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--e61f5dd9-d26e-454f-ab07-171f3dea6e73",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Buffer Overflow via Parameter Expansion",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Attack Example: FTP glob()</xhtml:p>\n               <xhtml:p>The glob() function in FTP servers has been susceptible to attack as a result of incorrect resizing. This is an ftpd glob() Expansion LIST Heap Overflow Vulnerability. ftp daemon contains a heap-based buffer overflow condition. The overflow occurs when the LIST command is issued with an argument that expands into an oversized string after being processed by glob().</xhtml:p>\n               <xhtml:p>This buffer overflow occurs in memory that is dynamically allocated. It may be possible for attackers to exploit this vulnerability and execute arbitrary code on the affected host.</xhtml:p>\n               <xhtml:p>To exploit this, the attacker must be able to create directories on the target host.</xhtml:p>\n               <xhtml:p>The glob() function is used to expand short-hand notation into complete file names. By sending to the FTP server a request containing a tilde (~) and other wildcard characters in the pathname string, a remote attacker can overflow a buffer and execute arbitrary code on the FTP server to gain root privileges. Once the request is processed, the glob() function expands the user input, which could exceed the expected length. In order to exploit this vulnerability, the attacker must be able to create directories on the FTP server.</xhtml:p>\n               <xhtml:p>[R.47.1][REF-2]</xhtml:p>See also: CVE-2001-0249",
                "\n               <xhtml:p>Buffer overflow in the glob implementation in libc in NetBSD-current before 20050914, and NetBSD 2.* and 3.* before 20061203, as used by the FTP daemon, allows remote authenticated users to execute arbitrary code via a long pathname that results from path expansion.</xhtml:p>\n               <xhtml:p>The limit computation of an internal buffer was done incorrectly. The size of the buffer in byte was used as element count, even though the elements of the buffer are 2 bytes long. Long expanded path names would therefore overflow the buffer.</xhtml:p>See also: CVE-2006-6652"
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.",
                "The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)."
            ],
            "x_capec_resources_required": [
                "Access to the program source or binary. If the program is only available in binary then a disassembler and other reverse engineering tools will be helpful."
            ],
            "x_capec_skills_required": {
                "High": "Finding this particular buffer overflow may not be trivial. Also, stack and especially heap based buffer overflows require a lot of knowledge if the intended goal is arbitrary code execution. Not only that the attacker needs to write the shell code to accomplish his or her goals, but the attacker also needs to find a way to get the program execution to jump to the planted shell code. There also needs to be sufficient room for the payload. So not every buffer overflow will be exploitable, even by a skilled attacker."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted.",
            "external_references": [
                {
                    "external_id": "CAPEC-67",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/67.html"
                },
                {
                    "external_id": "CWE-120",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html"
                },
                {
                    "external_id": "CWE-134",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/134.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-680",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "scut, team teso, Exploiting Format String Vulnerabilities",
                    "external_id": "REF-503",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://doc.bughunter.net/format-string/exploit-fs.html"
                },
                {
                    "description": "Halvar Flake, Auditing binaries for security vulnerabilities",
                    "external_id": "REF-504",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.blackhat.com/presentations/bh-europe-00/HalvarFlake/HalvarFlake.ppt"
                },
                {
                    "description": "Fortify Taxonomy of Vulnerabilities, Fortify Software",
                    "external_id": "REF-505",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://vulncat.hpefod.com/en"
                },
                {
                    "description": "Syslog man page",
                    "external_id": "REF-506",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.rt.com/man/syslog.3.html"
                }
            ],
            "id": "attack-pattern--4cd18074-15c1-4206-8391-115685669623",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "String Format Overflow in syslog()",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "Format string vulnerability in TraceEvent function for ntop before 2.1 allows remote attackers to execute arbitrary code by causing format strings to be injected into calls to the syslog function, via (1) an HTTP GET request, (2) a user name in HTTP authentication, or (3) a password in HTTP authentication. See also: CVE-2002-0412"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The format string argument of the Syslog function can be tainted with user supplied data."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2018-1115
{
    "id": "bundle--5276d83f-4725-46b1-8d92-ad880f2beca8",
    "objects": [
        {
            "created": "2020-05-24T00:01:25.013Z",
            "description": "postgresql before versions 10.4, 9.6.9 is vulnerable in the adminpack extension, the pg_catalog.pg_logfile_rotate() function doesn't follow the same ACLs than pg_rorate_logfile. If the adminpack is added to a database, an attacker able to connect to it could exploit this to force log rotation.",
            "external_references": [
                {
                    "external_id": "CVE-2018-1115",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--b856773f-5e82-3636-9901-8be9d3843e38",
            "modified": "2020-05-24T00:01:25.013Z",
            "name": "CVE-2018-1115",
            "type": "vulnerability",
            "x_CWE": [
                "NVD-CWE-noinfo"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "104285",
                    "refsource": "BID",
                    "tags": [
                        "Third Party Advisory",
                        "VDB Entry"
                    ],
                    "url": "http://www.securityfocus.com/bid/104285"
                },
                {
                    "name": "RHSA-2018:2565",
                    "refsource": "REDHAT",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "https://access.redhat.com/errata/RHSA-2018:2565"
                },
                {
                    "name": "RHSA-2018:2566",
                    "refsource": "REDHAT",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "https://access.redhat.com/errata/RHSA-2018:2566"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1115",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Issue Tracking",
                        "Patch",
                        "Third Party Advisory"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1115"
                },
                {
                    "name": "https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=7b34740",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch",
                        "Vendor Advisory"
                    ],
                    "url": "https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=7b34740"
                },
                {
                    "name": "GLSA-201810-08",
                    "refsource": "GENTOO",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "https://security.gentoo.org/glsa/201810-08"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2015-3167
{
    "id": "bundle--1fe67072-e90d-49c0-a110-e18b9270a9d0",
    "objects": [
        {
            "created": "2020-05-24T00:01:20.629Z",
            "description": "contrib/pgcrypto in PostgreSQL before 9.0.20, 9.1.x before 9.1.16, 9.2.x before 9.2.11, 9.3.x before 9.3.7, and 9.4.x before 9.4.2 uses different error responses when an incorrect key is used, which makes it easier for attackers to obtain the key via a brute force attack.",
            "external_references": [
                {
                    "external_id": "CVE-2015-3167",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "modified": "2020-05-24T00:01:20.629Z",
            "name": "CVE-2015-3167",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-200"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://ubuntu.com/usn/usn-2621-1",
                    "refsource": "MISC",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://ubuntu.com/usn/usn-2621-1"
                },
                {
                    "name": "http://www.debian.org/security/2015/dsa-3269",
                    "refsource": "MISC",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3269"
                },
                {
                    "name": "http://www.debian.org/security/2015/dsa-3270",
                    "refsource": "MISC",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3270"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1587/",
                    "refsource": "MISC",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1587/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.0/static/release-9-0-20.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.0/static/release-9-0-20.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.1/static/release-9-1-16.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.1/static/release-9-1-16.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.2/static/release-9-2-11.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.2/static/release-9-2-11.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.3/static/release-9-3-7.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.3/static/release-9-3-7.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-2.html",
                    "refsource": "MISC",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-2.html"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:07.972Z",
            "id": "relationship--e3e84a64-214c-4940-b108-41e45e1e113e",
            "modified": "2020-06-04T19:13:07.972Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--913426fa-ea1f-43b0-8492-1d363ea109d6",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.973Z",
            "id": "relationship--58d59d7a-21e2-464f-bb3a-b514f139e36e",
            "modified": "2020-06-04T19:13:07.973Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--f190e1b3-e8d6-4aef-817c-b3e7782e2aed",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.973Z",
            "id": "relationship--d599ae6d-ffb0-459a-a1a0-5c43e7d6c828",
            "modified": "2020-06-04T19:13:07.973Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--87b0d2df-b246-4bf9-aee8-4912e2fa1a30",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.973Z",
            "id": "relationship--983af922-61c0-42fd-af87-765b2876661f",
            "modified": "2020-06-04T19:13:07.973Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--1fa1539d-4a13-4453-bf43-ad0987b2fbf5",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.973Z",
            "id": "relationship--85bf9d43-72dd-4228-a957-e3f1ecb5ea84",
            "modified": "2020-06-04T19:13:07.973Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--76e6fe1e-34f2-40cd-8f12-f4d4f9c41808",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.974Z",
            "id": "relationship--09e7a8c0-7083-41d4-b520-f222e86a8de3",
            "modified": "2020-06-04T19:13:07.974Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--9c520f01-d8ec-425f-90ef-41422cfe083e",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.974Z",
            "id": "relationship--b114eac2-6600-424a-a35d-0bc0890ac3c2",
            "modified": "2020-06-04T19:13:07.974Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--ef825216-5e5d-43e4-87bf-edcf278fd8c1",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.974Z",
            "id": "relationship--3f5b4127-11fa-40d7-a8ec-d13e6d638439",
            "modified": "2020-06-04T19:13:07.974Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--e6c6d5fb-33e8-43ec-bff5-c0ade9d51304",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.974Z",
            "id": "relationship--3f3baada-43f8-4edc-b265-129812c15f75",
            "modified": "2020-06-04T19:13:07.974Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--88933ba2-fe2a-4b71-ac08-2537c5903b2e",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.974Z",
            "id": "relationship--2246e207-412f-4ae3-9503-e78e05446bc9",
            "modified": "2020-06-04T19:13:07.974Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--d780db94-413f-402d-a4d9-cf179b316c8c",
            "target_ref": "vulnerability--445dee43-8f19-3b93-833f-c1ca291e9e5f",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:07.974Z",
            "id": "relationship--3a9f578d-f4c2-46b6-81cc-93fb21104ff1",
            "modified": "2020-06-04T19:13:07.974Z",
            "relationship_type": "related-to",
            "source_ref": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
            "target_ref": "attack-pattern--d780db94-413f-402d-a4d9-cf179b316c8c",
            "type": "relationship"
        },
        {
            "created": "2017-05-31T21:30:28.187Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used. Adversaries may also use local host files in order to discover the hostname to IP address mappings of remote systems. \n\n### Windows\n\nExamples of tools and commands that acquire this information include \"ping\" or \"net view\" using [Net](https://attack.mitre.org/software/S0039). The contents of the <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> file can be viewed to gain insight into the existing hostname to IP mappings on the system.\n\n### Mac\n\nSpecific to Mac, the <code>bonjour</code> protocol to discover additional Mac-based systems within the same broadcast domain. Utilities such as \"ping\" and others can be used to gather information about remote systems. The contents of the <code>/etc/hosts</code> file can be viewed to gain insight into existing hostname to IP mappings on the system.\n\n### Linux\n\nUtilities such as \"ping\" and others can be used to gather information about remote systems. The contents of the <code>/etc/hosts</code> file can be viewed to gain insight into existing hostname to IP mappings on the system.\n\n### Cloud\n\nIn cloud environments, the above techniques may be used to discover remote systems depending upon the host operating system. In addition, cloud environments often provide APIs with information about remote systems and services.\n",
            "external_references": [
                {
                    "external_id": "T1018",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1018"
                },
                {
                    "external_id": "CAPEC-292",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/292.html"
                }
            ],
            "id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }
            ],
            "modified": "2019-10-08T20:36:57.696Z",
            "name": "Remote System Discovery",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_contributors": [
                "Praetorian",
                "RedHuntLabs (@redhuntlabs)"
            ],
            "x_mitre_data_sources": [
                "Network protocol analysis",
                "Process monitoring",
                "Process use of network",
                "Process command-line parameters"
            ],
            "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1086). ",
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows",
                "GCP",
                "Azure",
                "AWS"
            ],
            "x_mitre_version": "2.0"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary actively probes the target in a manner that is designed to solicit information that could be leveraged for malicious purposes. This is achieved by exploring the target via ordinary interactions for the purpose of gathering intelligence about the target, or by sending data that is syntactically invalid or non-standard in an attempt to produce a response that contains the desired data. As a result of these interactions, the adversary is able to obtain information from the target that aids the attacker in making inferences about its security, configuration, or potential vulnerabilities. Examplar exchanges with the target may trigger unhandled exceptions or verbose error messages that reveal information like stack traces, configuration information, path information, or database design. This type of attack also includes the manipulation of query strings in a URI to produce invalid SQL queries, or by trying alternative path values in the hope that the server will return useful information.",
            "external_references": [
                {
                    "external_id": "CAPEC-116",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/116.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                }
            ],
            "id": "attack-pattern--913426fa-ea1f-43b0-8492-1d363ea109d6",
            "modified": "2017-05-01T00:00:00.000Z",
            "name": "Excavation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An adversary requires some way of interacting with the system."
            ],
            "x_capec_resources_required": [
                "A tool, such as a MITM Proxy or a fuzzer, that is capable of generating and injecting custom inputs to be used in the attack."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker.",
            "external_references": [
                {
                    "external_id": "CAPEC-13",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/13.html"
                },
                {
                    "external_id": "CWE-353",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/353.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-302",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/302.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-15",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/15.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--f190e1b3-e8d6-4aef-817c-b3e7782e2aed",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Subverting Environment Variable Values",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Bypass Protection Mechanism",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Changing the LD_LIBRARY_PATH environment variable in TELNET will cause TELNET to use an alternate (possibly Trojan) version of a function library. The Trojan library must be accessible using the target file system and should include Trojan code that will allow the user to log in with a bad password. This requires that the attacker upload the Trojan library to a specific location on the target. As an alternative to uploading a Trojan file, some file systems support file paths that include remote addresses, such as \\\\172.16.2.100\\shared_files\\trojan_dll.dll. See also: Path Manipulation (CVE-1999-0073)",
                "The HISTCONTROL environment variable keeps track of what should be saved by the history command and eventually into the ~/.bash_history file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". HISTCONTROL can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \" ls\" will not be saved, but \"ls\" would be saved by history. HISTCONTROL does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An environment variable is accessible to the user.",
                "An environment variable used by the application can be tainted with user supplied data.",
                "Input data used in an environment variable is not validated properly.",
                "The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable."
            ],
            "x_capec_skills_required": {
                "High": "Some more advanced attacks may require knowledge about protocols and probing technique which help controlling a variable. The malicious user may try to understand the authentication mechanism in order to defeat it.",
                "Low": "In a web based scenario, the client controls the data that it submitted to the server. So anybody can try to send malicious data and try to bypass the authentication mechanism."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary engages in probing and exploration activities to identify constituents and properties of the target. Footprinting is a general term to describe a variety of information gathering techniques, often used by attackers in preparation for some attack. It consists of using tools to learn as much as possible about the composition, configuration, and security mechanisms of the targeted application, system or network. Information that might be collected during a footprinting effort could include open ports, applications and their versions, network topology, and similar information. While footprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.",
            "external_references": [
                {
                    "external_id": "CAPEC-169",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/169.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Manic Velocity, Footprinting And The Basics Of Hacking, Web Textfiles",
                    "external_id": "REF-31",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://web.textfiles.com/hacking/footprinting.txt"
                },
                {
                    "description": "Eddie Sutton, Footprint: What Is And How Do You Erase Them",
                    "external_id": "REF-32",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.infosecwriters.com/text_resources/pdf/Footprinting.pdf"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--87b0d2df-b246-4bf9-aee8-4912e2fa1a30",
            "modified": "2017-05-01T00:00:00.000Z",
            "name": "Footprinting",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_example_instances": [
                "In this example let us look at the website http://www.example.com to get much information we can about Alice. From the website, we find that Alice also runs foobar.org. We type in www example.com into the prompt of the Name Lookup window in a tool, and our result is this IP address: 192.173.28.130 We type the domain into the Name Lookup prompt and we are given the same IP. We can safely say that example and foobar.org are hosted on the same box. But if we were to do a reverse name lookup on the IP, which domain will come up? www.example.com or foobar.org? Neither, the result is nijasvspirates.org. So nijasvspirates.org is the name of the box hosting 31337squirrel.org and foobar.org. So now that we have the IP, let's check to see if nijasvspirates is awake. We type the IP into the prompt in the Ping window. We'll set the interval between packets to 1 millisecond. We'll set the number of seconds to wait until a ping times out to 5. We'll set the ping size to 500 bytes and we'll send ten pings. Ten packets sent and ten packets received. nijasvspirates.org returned a message to my computer within an average of 0.35 seconds for every packet sent. nijasvspirates is alive. We open the Whois window and type nijasvspirates.org into the Query prompt, and whois.networksolutions.com into the Server prompt. This means we'll be asking Network Solutions to tell us everything they know about nijasvspirates.org. The result is this laundry list of info: Registrant: FooBar (nijasvspirates -DOM) p.o.box 11111 SLC, UT 84151 US Domain Name: nijasvspirates.ORG Administrative Contact, Billing Contact: Smith, John jsmith@anonymous.net FooBar p.o.box 11111 SLC, UT 84151 555-555-6103 Technical Contact: Johnson, Ken kj@fierymonkey.org fierymonkey p.o.box 11111 SLC, UT 84151 555-555-3849 Record last updated on 17-Aug-2001. Record expires on 11-Aug-2002. Record created on 11-Aug-2000. Database last updated on 12-Dec-2001 04:06:00 EST. Domain servers in listed order: NS1. fierymonkey.ORG 192.173.28.130 NS2. fierymonkey.ORG 64.192.168.80 A corner stone of footprinting is Port Scanning. Let's port scan nijasvspirates.org and see what kind of services are running on that box. We type in the nijasvspirates IP into the Host prompt of the Port Scan window. We'll start searching from port number 1, and we'll stop at the default Sub7 port, 27374. Our results are: 21 TCP ftp 22 TCP ssh SSH-1.99-OpenSSH_2.30 25 TCP smtp 53 TCP domain 80 TCP www 110 TCP pop3 111 TCP sunrpc 113 TCP ident Just by this we know that Alice is running a website and email, using POP3, SUNRPC (SUN Remote Procedure Call), and ident."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An application must publicize identifiable information about the system or application through voluntary or involuntary means. Certain identification details of information systems are visible on communication networks (e.g., if an adversary uses a sniffer to inspect the traffic) due to their inherent structure and protocol standards. Any system or network that can be detected can be footprinted. However, some configuration choices may limit the useful information that can be collected during a footprinting attack."
            ],
            "x_capec_resources_required": [
                "The adversary requires a variety of tools to collect information about the target. These include port/network scanners and tools to analyze responses from applications to determine version and configuration information. Footprinting a system adequately may also take a few days if the attacker wishes the footprinting attempt to go undetected."
            ],
            "x_capec_skills_required": {
                "Low": "The adversary knows how to send HTTP request, run the scan tool."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "external_references": [
                {
                    "external_id": "CAPEC-22",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-290",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/290.html"
                },
                {
                    "external_id": "CWE-287",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "external_id": "CWE-693",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/693.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--1fa1539d-4a13-4453-bf43-ad0987b2fbf5",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Exploiting Trust in Client",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges",
                    "Read Data"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "Web applications may use JavaScript to perform client side validation, request encoding/formatting, and other security functions, which provides some usability benefits and eliminates some client-server round-tripping. However, the web server cannot assume that the requests it receives have been subject to those validations, because an attacker can use an alternate method for crafting the HTTP Request and submit data that contains poisoned values designed to spoof a user and/or get the web server to disclose information.",
                "Web 2.0 style applications may be particularly vulnerable because they in large part rely on existing infrastructure which provides scalability without the ability to govern the clients. Attackers identify vulnerabilities that either assume the client side is responsible for some security services (without the requisite ability to ensure enforcement of these checks) and/or the lack of a hardened, default deny server configuration that allows for an attacker probing for weaknesses in unexpected ways. Client side validation, request formatting and other services may be performed, but these are strictly usability enhancements not security enhancements.",
                "Many web applications use client side scripting like JavaScript to enforce authentication, authorization, session state and other variables, but at the end of day they all make requests to the server. These client side checks may provide usability and performance gains, but they lack integrity in terms of the http request. It is possible for an attacker to post variables directly to the server without using any of the client script security checks and customize the patterns to impersonate other users or probe for more information.",
                "Many message oriented middleware systems like MQ Series are rely on information that is passed along with the message request for making authorization decisions, for example what group or role the request should be passed. However, if the message server does not or cannot authenticate the authorization information in the request then the server's policy decisions about authorization are trivial to subvert because the client process can simply elevate privilege by passing in elevated group or role information which the message server accepts and acts on."
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."
            ],
            "x_capec_resources_required": [
                "Ability to communicate synchronously or asynchronously with server"
            ],
            "x_capec_skills_required": {
                "Medium": "The attacker must have fairly detailed knowledge of the syntax and semantics of client/server communications protocols and grammars"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary compares output from a target system to known indicators that uniquely identify specific details about the target. Fingerprinting by itself is not usually detrimental to the target. However, the information gathered through fingerprinting often enables an adversary to discover existing weaknesses in the target.",
            "external_references": [
                {
                    "external_id": "CAPEC-224",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/224.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                }
            ],
            "id": "attack-pattern--76e6fe1e-34f2-40cd-8f12-f4d4f9c41808",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Fingerprinting",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "A means by which to interact with the target system directly."
            ],
            "x_capec_resources_required": [
                "If on a network, the adversary needs a tool capable of viewing network communications at the packet level and with header information, like Mitmproxy, Wireshark, or Fiddler."
            ],
            "x_capec_skills_required": {
                "Medium": "Some fingerprinting activity requires very specific knowledge of how different operating systems respond to various TCP/IP requests. Application fingerprinting can be as easy as envoking the application with the correct command line argument, or mouse clicking in the appropriate place on the screen."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping', in order to determine if a target system is responsive. If the request is not blocked by a firewall or ACL, the target host will respond with an ICMP Type 0 Echo Reply datagram. This type of exchange is usually referred to as a 'Ping' due to the Ping utility present in almost all operating systems. Ping, as commonly implemented, allows a user to test for alive hosts, measure round-trip time, and measure the percentage of packet loss. Performing this operation for a range of hosts on the network is known as a 'Ping Sweep'. While the Ping utility is useful for small-scale host discovery, it was not designed for rapid or efficient host discovery over large network blocks. Other scanning utilities have been created that make ICMP ping sweeps easier to perform. Most networks filter ingress ICMP Type 8 messages for security reasons. Various other methods of performing ping sweeps have developed as a result. It is important to recognize the key security goal of the adversary is to discover if an IP address is alive, or has a responsive host. To this end, virtually any type of ICMP message, as defined by RFC 792 is useful. An adversary can cycle through various types of ICMP messages to determine if holes exist in the firewall configuration. When ICMP ping sweeps fail to discover hosts, other protocols can be used for the same purpose, such as TCP SYN or ACK segments, UDP datagrams sent to closed ports, etc.",
            "external_references": [
                {
                    "external_id": "CAPEC-285",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "J. Postel, RFC792 - Internet Control Messaging Protocol, 1981--09, Defense Advanced Research Projects Agency (DARPA)",
                    "external_id": "REF-123",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.faqs.org/rfcs/rfc792.html"
                },
                {
                    "description": "R. Braden, Ed., RFC1122 - Requirements for Internet Hosts - Communication Layers, 1989--10",
                    "external_id": "REF-124",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.faqs.org/rfcs/rfc1122.html"
                },
                {
                    "description": "Mark Wolfgang, Host Discovery with Nmap, 2002--11",
                    "external_id": "REF-125",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://nmap.org/docs/discovery.pdf"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--9c520f01-d8ec-425f-90ef-41422cfe083e",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "ICMP Echo Request Ping",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Other (A successful attack of this kind can identify open ports and available services on a system.)"
                ]
            },
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The ability to send an ICMP type 8 query (Echo Request) to a remote target and receive an ICMP type 0 message (ICMP Echo Reply) in response. Any firewalls or access control lists between the sender and receiver must allow ICMP Type 8 and ICMP Type 0 messages in order for a ping operation to succeed."
            ],
            "x_capec_resources_required": [
                "Scanners or utilities that provide the ability to send custom ICMP queries."
            ],
            "x_capec_skills_required": {
                "Low": "The adversary needs to know certain linux commands for this type of attack."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary uses a SYN scan to determine the status of ports on the remote target. SYN scanning is the most common type of port scanning that is used because of its enormous advantages and few drawbacks. As a result, novice attackers tend to overly rely on the SYN scan while performing system reconnaissance. As a scanning method, the primary advantages of SYN scanning are its universality and speed. RFC 793 defines the required behavior of any TCP/IP device in that an incoming connection request begins with a SYN packet, which in turn must be followed by a SYN/ACK packet from the receiving service. For this reason, like TCP Connect scanning, SYN scanning works against any TCP stack. Unlike TCP Connect scanning, it is possible to scan thousands of ports per second using this method. This type of scanning is usually referred to as 'half-open' scanning because it does not complete the three-way handshake. The scanning rate is extremely fast because no time is wasted completing the handshake or tearing down the connection. TCP SYN scanning can also immediately detect 3 of the 4 important types of port status: open, closed, and filtered. When a SYN is sent to an open port and unfiltered port, a SYN/ACK will be generated. This technique allows an attacker to scan through stateful firewalls due to the common configuration that TCP SYN segments for a new connection will be allowed for almost any port. When a SYN packet is sent to a closed port a RST is generated, indicating the port is closed. When SYN scanning to a particular port generates no response, or when the request triggers ICMP Type 3 unreachable errors, the port is filtered. A TCP Connect scan has the following characteristics:",
            "external_references": [
                {
                    "external_id": "CAPEC-287",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/287.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Defense Advanced Research Projects Agency Information Processing Techniques Office, Information Sciences Institute University of Southern California, RFC793 - Transmission Control Protocol, 1981--09, Defense Advanced Research Projects Agency (DARPA)",
                    "external_id": "REF-128",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.faqs.org/rfcs/rfc793.html"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, The Art of Port Scanning (Volume: 7, Issue. 51), Phrack Magazine, 1997",
                    "external_id": "REF-130",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://phrack.org/issues/51/11.html"
                }
            ],
            "id": "attack-pattern--ef825216-5e5d-43e4-87bf-edcf278fd8c1",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "TCP SYN Scan",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other (A successful attack of this kind can identify open ports and available services on a system.)",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "This scan type is not possible with some operating systems (Windows XP SP 2). On Linux and Unix systems it requires root privileges to use raw sockets."
            ],
            "x_capec_resources_required": [
                "The ability to send TCP SYN segments to a host during network reconnaissance via the use of a network mapper or scanner, or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary enumerates the MX records for a given via a DNS query. This type of information gathering returns the names of mail servers on the network. Mail servers are often not exposed to the Internet but are located within the DMZ of a network protected by a firewall. A side effect of this configuration is that enumerating the MX records for an organization my reveal the IP address of the firewall or possibly other internal systems. Attackers often resort to MX record enumeration when a DNS Zone Transfer is not possible.",
            "external_references": [
                {
                    "external_id": "CAPEC-290",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/290.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--e6c6d5fb-33e8-43ec-bff5-c0ade9d51304",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Enumerate Mail Exchange (MX) Records",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "The adversary requires access to a DNS server that will return the MX records for a network."
            ],
            "x_capec_resources_required": [
                "A command-line utility or other application capable of sending requests to the DNS server is necessary."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some external DNS servers will return a list of IP address and valid hostnames. Under certain conditions, it may even be possible to obtain Zone data about the organization's internal network. When successful the attacker learns valuable information about the topology of the target organization, including information about particular servers, their role within the IT structure, and possibly information about the operating systems running upon the network. This is configuration dependent behavior so it may also be required to search out multiple DNS servers while attempting to find one with ZONE transfers allowed.",
            "external_references": [
                {
                    "external_id": "CAPEC-291",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/291.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--88933ba2-fe2a-4b71-ac08-2537c5903b2e",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "DNS Zone Transfers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_prerequisites": [
                "Access to a DNS server that allows Zone transfers."
            ],
            "x_capec_resources_required": [
                "A client application capable of interacting with the DNS server or a command-line utility or web application that automates DNS interactions."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary sends a probe to an IP address to determine if the host is alive. Host discovery is one of the earliest phases of network reconnaissance. The adversary usually starts with a range of IP addresses belonging to a target network and uses various methods to determine if a host is present at that IP address. Host discovery is usually referred to as 'Ping' scanning using a sonar analogy. The goal is to send a packet through to the IP address and solicit a response from the host. As such, a 'ping' can be virtually any crafted packet whatsoever, provided the adversary can identify a functional host based on its response. An attack of this nature is usually carried out with a 'ping sweep,' where a particular kind of ping is sent to a range of IP addresses.",
            "external_references": [
                {
                    "external_id": "CAPEC-292",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/292.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--d780db94-413f-402d-a4d9-cf179b316c8c",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Host Discovery",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "The adversary requires logical access to the target network in order to carry out host discovery."
            ],
            "x_capec_resources_required": [
                "The resources required will differ based upon the type of host discovery being performed. Usually a network scanning tool or scanning script is required due to the volume of requests that must be generated."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2012-2143
{
    "id": "bundle--51d67707-4b7c-43db-bd6e-fc655b977fc1",
    "objects": [
        {
            "created": "2020-05-24T00:02:47.380Z",
            "description": "The crypt_des (aka DES-based crypt) function in FreeBSD before 9.0-RELEASE-p2, as used in PHP, PostgreSQL, and other products, does not process the complete cleartext password if this password contains a 0x80 character, which makes it easier for context-dependent attackers to obtain access via an authentication attempt with an initial substring of the intended password, as demonstrated by a Unicode password. | As per: http://git.php.net/?p=php-src.git;a=commitdiff;h=aab49e934de1fff046e659cbec46e3d053b41c34 and http://git.php.net/?p=php-src.git;a=commitdiff_plain;h=aab49e934de1fff046e659cbec46e3d053b41c34\r\n\r\nPHP 5.3.13 and earlier are vulnerable.\r\n",
            "external_references": [
                {
                    "external_id": "CVE-2012-2143",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--470c53ba-2c2f-37a4-8f9b-b7c3c716384d",
            "modified": "2020-05-24T00:02:47.380Z",
            "name": "CVE-2012-2143",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-310"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://git.php.net/?p=php-src.git;a=commit;h=aab49e934de1fff046e659cbec46e3d053b41c34",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://git.php.net/?p=php-src.git;a=commit;h=aab49e934de1fff046e659cbec46e3d053b41c34"
                },
                {
                    "name": "http://git.postgresql.org/gitweb/?p=postgresql.git&a=commit&h=932ded2ed51e8333852e370c7a6dad75d9f236f9",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://git.postgresql.org/gitweb/?p=postgresql.git&a=commit&h=932ded2ed51e8333852e370c7a6dad75d9f236f9"
                },
                {
                    "name": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10705",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10705"
                },
                {
                    "name": "APPLE-SA-2012-09-19-2",
                    "refsource": "APPLE",
                    "tags": [],
                    "url": "http://lists.apple.com/archives/security-announce/2012/Sep/msg00004.html"
                },
                {
                    "name": "FEDORA-2012-8893",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2012-June/082258.html"
                },
                {
                    "name": "FEDORA-2012-8924",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2012-June/082292.html"
                },
                {
                    "name": "FEDORA-2012-8915",
                    "refsource": "FEDORA",
                    "tags": [],
                    "url": "http://lists.fedoraproject.org/pipermail/package-announce/2012-June/082294.html"
                },
                {
                    "name": "SUSE-SU-2012:0840",
                    "refsource": "SUSE",
                    "tags": [],
                    "url": "http://lists.opensuse.org/opensuse-security-announce/2012-07/msg00003.html"
                },
                {
                    "name": "openSUSE-SU-2012:1251",
                    "refsource": "SUSE",
                    "tags": [],
                    "url": "http://lists.opensuse.org/opensuse-updates/2012-09/msg00102.html"
                },
                {
                    "name": "openSUSE-SU-2012:1288",
                    "refsource": "SUSE",
                    "tags": [],
                    "url": "http://lists.opensuse.org/opensuse-updates/2012-10/msg00013.html"
                },
                {
                    "name": "openSUSE-SU-2012:1299",
                    "refsource": "SUSE",
                    "tags": [],
                    "url": "http://lists.opensuse.org/opensuse-updates/2012-10/msg00024.html"
                },
                {
                    "name": "RHSA-2012:1037",
                    "refsource": "REDHAT",
                    "tags": [],
                    "url": "http://rhn.redhat.com/errata/RHSA-2012-1037.html"
                },
                {
                    "name": "49304",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/49304"
                },
                {
                    "name": "50718",
                    "refsource": "SECUNIA",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://secunia.com/advisories/50718"
                },
                {
                    "name": "FreeBSD-SA-12:02",
                    "refsource": "FREEBSD",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://security.freebsd.org/advisories/FreeBSD-SA-12:02.crypt.asc"
                },
                {
                    "name": "http://support.apple.com/kb/HT5501",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "http://support.apple.com/kb/HT5501"
                },
                {
                    "name": "DSA-2491",
                    "refsource": "DEBIAN",
                    "tags": [],
                    "url": "http://www.debian.org/security/2012/dsa-2491"
                },
                {
                    "name": "MDVSA-2012:092",
                    "refsource": "MANDRIVA",
                    "tags": [],
                    "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2012:092"
                },
                {
                    "name": "http://www.postgresql.org/docs/8.3/static/release-8-3-19.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/8.3/static/release-8-3-19.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/8.4/static/release-8-4-12.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/8.4/static/release-8-4-12.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.0/static/release-9-0-8.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.0/static/release-9-0-8.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.1/static/release-9-1-4.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.1/static/release-9-1-4.html"
                },
                {
                    "name": "http://www.postgresql.org/support/security/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/support/security/"
                },
                {
                    "name": "1026995",
                    "refsource": "SECTRACK",
                    "tags": [],
                    "url": "http://www.securitytracker.com/id?1026995"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=816956",
                    "refsource": "CONFIRM",
                    "tags": [],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=816956"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2014-8161
{
    "id": "bundle--cb1fa9cf-c742-4f67-afaf-7118baed3151",
    "objects": [
        {
            "created": "2020-05-24T00:01:20.152Z",
            "description": "PostgreSQL before 9.0.19, 9.1.x before 9.1.15, 9.2.x before 9.2.10, 9.3.x before 9.3.6, and 9.4.x before 9.4.1 allows remote authenticated users to obtain sensitive column values by triggering constraint violation and then reading the error message.",
            "external_references": [
                {
                    "external_id": "CVE-2014-8161",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--a004972c-ddae-30e7-9a2d-47ed7e945656",
            "modified": "2020-05-24T00:01:20.152Z",
            "name": "CVE-2014-8161",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-209"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "http://www.debian.org/security/2015/dsa-3155",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Third Party Advisory"
                    ],
                    "url": "http://www.debian.org/security/2015/dsa-3155"
                },
                {
                    "name": "http://www.postgresql.org/about/news/1569/",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/about/news/1569/"
                },
                {
                    "name": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/9.4/static/release-9-4-1.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-0-19.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-0-19.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-1-15.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-1-15.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-2-10.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-2-10.html"
                },
                {
                    "name": "http://www.postgresql.org/docs/current/static/release-9-3-6.html",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Release Notes",
                        "Vendor Advisory"
                    ],
                    "url": "http://www.postgresql.org/docs/current/static/release-9-3-6.html"
                }
            ]
        },
        {
            "created": "2020-06-04T19:13:08.154Z",
            "id": "relationship--7220d6bb-d8ac-4ab8-8b0f-2e0394b5d736",
            "modified": "2020-06-04T19:13:08.154Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--27f34b27-52ae-42ae-a5c4-1155641eab90",
            "target_ref": "vulnerability--a004972c-ddae-30e7-9a2d-47ed7e945656",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:08.155Z",
            "id": "relationship--2f27dd19-fb1b-45ec-84e5-b7137727cbba",
            "modified": "2020-06-04T19:13:08.155Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--b5618a54-4646-423d-8676-b2eb56dd4328",
            "target_ref": "vulnerability--a004972c-ddae-30e7-9a2d-47ed7e945656",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:08.155Z",
            "id": "relationship--29e295ad-893d-4644-878e-e9b9cc3dc62c",
            "modified": "2020-06-04T19:13:08.155Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--63048cb5-6d42-4fa2-a0e1-eeff2ef2a34d",
            "target_ref": "vulnerability--a004972c-ddae-30e7-9a2d-47ed7e945656",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:08.155Z",
            "id": "relationship--44651de7-6e86-4e6d-86d8-7953559f911e",
            "modified": "2020-06-04T19:13:08.155Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--49132d37-44e8-458c-a06e-0e5b9ac9bbd6",
            "target_ref": "vulnerability--a004972c-ddae-30e7-9a2d-47ed7e945656",
            "type": "relationship"
        },
        {
            "created": "2020-06-04T19:13:08.155Z",
            "id": "relationship--c18fafb7-ec99-488d-a46c-8e69603ff610",
            "modified": "2020-06-04T19:13:08.155Z",
            "relationship_type": "targets",
            "source_ref": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
            "target_ref": "vulnerability--a004972c-ddae-30e7-9a2d-47ed7e945656",
            "type": "relationship"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.",
            "external_references": [
                {
                    "external_id": "CAPEC-214",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/214.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                },
                {
                    "external_id": "CWE-388",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/388.html"
                }
            ],
            "id": "attack-pattern--27f34b27-52ae-42ae-a5c4-1155641eab90",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "Fuzzing for garnering J2EE/.NET-based stack traces, for application mapping",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_prerequisites": [
                "The target application must fail to sanitize incoming messages adequately before processing and must generate a stack trace in at least some error situations."
            ],
            "x_capec_resources_required": [
                "The attacker must have sufficient access to send messages to the target. The attacker must also have the ability to observe the stack trace produced by the target application. Fuzzing tools, which automatically generate and send message variants, are necessary for this attack."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. By observing logs and error messages, the attacker can learn details about the configuration of the target application and might be able to cause the target to disclose sensitive information.",
            "external_references": [
                {
                    "external_id": "CAPEC-215",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/215.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                },
                {
                    "external_id": "CWE-532",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/532.html"
                }
            ],
            "id": "attack-pattern--b5618a54-4646-423d-8676-b2eb56dd4328",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Fuzzing and observing application log data/errors for application mapping",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Other (Information Leakage)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>The following code generates an error message that leaks the full pathname of the configuration file.</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"bad\">$ConfigDir = \"/home/myprog/config\";$uname = GetUserInput(\"username\");ExitError(\"Bad hacker!\") if ($uname !~ /^\\w+$/);$file = \"$ConfigDir/$uname.txt\";if (! (-e $file)) { ExitError(\"Error: $file does not exist\"); }...</xhtml:div>\n               <xhtml:p>If this code is running on a server, such as a web application, then the person making the request should not know what the full pathname of the configuration directory is. By submitting a username that does not produce a $file that exists, an attacker could get this pathname. It could then be used to exploit path traversal or symbolic link following problems that may exist elsewhere in the application.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target application must fail to sanitize incoming messages adequately before processing."
            ],
            "x_capec_resources_required": [
                "Fuzzing tools, which automatically generate and send message variants, are necessary for this attack. The attacker must have sufficient access to send messages to the target. The attacker must also have the ability to observe the target application's log and/or error messages in order to collect information about the target."
            ],
            "x_capec_skills_required": {
                "Medium": "Although fuzzing parameters is not difficult, and often possible with automated fuzzing tools, interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform, the languages and packages used as well as software design."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary is able to efficiently decrypt data without knowing the decryption key if a target system leaks data on whether or not a padding error happened while decrypting the ciphertext. A target system that leaks this type of information becomes the padding oracle and an adversary is able to make use of that oracle to efficiently decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). In addition to performing decryption, an adversary is also able to produce valid ciphertexts (i.e., perform encryption) by using the padding oracle, all without knowing the encryption key. Any cryptosystem can be vulnerable to padding oracle attacks if the encrypted messages are not authenticated to ensure their validity prior to decryption, and then the information about padding error is leaked to the adversary. This attack technique may be used, for instance, to break CAPTCHA systems or decrypt/modify state information stored in client side objects (e.g., hidden fields or cookies). This attack technique is a side-channel attack on the cryptosystem that uses a data leak from an improperly implemented decryption routine to completely subvert the cryptosystem. The one bit of information that tells the adversary whether a padding error during decryption has occurred, in whatever form it comes, is sufficient for the adversary to break the cryptosystem. That bit of information can come in a form of an explicit error message about a padding error, a returned blank page, or even the server taking longer to respond (a timing attack). This attack can be launched cross domain where an adversary is able to use cross-domain information leaks to get the bits of information from the padding oracle from a target system / service with which the victim is communicating. To do so an adversary sends a request containing ciphertext to the target system. Due to the browser's same origin policy, the adversary is not able to see the response directly, but can use cross-domain information leak techniques to still get the information needed (i.e., information on whether or not a padding error has occurred). For instance, this can be done using \"img\" tag plus the onerror()/onload() events. The adversary's JavaScript can make web browsers to load an image on the target site, and know if the image is loaded or not. This is 1-bit information needed for the padding oracle attack to work: if the image is loaded, then it is valid padding, otherwise it is not.",
            "external_references": [
                {
                    "external_id": "CAPEC-463",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/463.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                },
                {
                    "external_id": "CWE-514",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/514.html"
                },
                {
                    "external_id": "CWE-649",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/649.html"
                },
                {
                    "external_id": "CWE-347",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/347.html"
                },
                {
                    "external_id": "CWE-354",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/354.html"
                },
                {
                    "external_id": "CWE-696",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/696.html"
                },
                {
                    "description": "Juliano Rizzo, Thai Duong, Practical Padding Oracle Attacks, 2010--05---25",
                    "external_id": "REF-400",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://www.usenix.org/legacy/events/woot10/tech/full_papers/Rizzo.pdf"
                }
            ],
            "id": "attack-pattern--63048cb5-6d42-4fa2-a0e1-eeff2ef2a34d",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Padding Oracle Crypto Attack",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_prerequisites": [
                "The decryption routine does not properly authenticate the message / does not verify its integrity prior to performing the decryption operation",
                "The target system leaks data (in some way) on whether a padding error has occurred when attempting to decrypt the ciphertext.",
                "The padding oracle remains available for enough time / for as many requests as needed for the adversary to decrypt the ciphertext."
            ],
            "x_capec_resources_required": [
                "\n               <xhtml:p>Ability to detect instances where a target system is vulnerable to an oracle padding attack</xhtml:p>\n               <xhtml:p>Sufficient cryptography knowledge and tools needed to take advantage of the presence of the padding oracle to perform decryption / encryption of data without a key</xhtml:p>\n            "
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary, aware of an application's location (and possibly authorized to use the application), probes an application's structure and evaluates its robustness by submitting requests and examining responses. Often, this is accomplished by sending variants of expected queries in the hope that these modified queries might return information beyond what the expected set of queries would provide.",
            "external_references": [
                {
                    "external_id": "CAPEC-54",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/54.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                }
            ],
            "id": "attack-pattern--49132d37-44e8-458c-a06e-0e5b9ac9bbd6",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "Query System for Information",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ]
            },
            "x_capec_example_instances": [
                "Blind SQL injection is an example of this technique, applied to successful exploit. See also: CVE-2006-4705",
                "\n               <xhtml:p>Attacker sends bad data at various servlets in a J2EE system, records returned exception stack traces, and maps application functionality.</xhtml:p>\n               <xhtml:p>In addition, this technique allows attackers to correlate those servlets used with the underlying open source packages (and potentially version numbers) that provide them.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "This class of attacks does not strictly require authorized access to the application. As Attackers use this attack process to classify, map, and identify vulnerable aspects of an application, it simply requires hypotheses to be verified, interaction with the application, and time to conduct trial-and-error activities."
            ],
            "x_capec_resources_required": [
                "\n               <xhtml:p>The Attacker needs the ability to probe application functionality and provide it erroneous directives or data without triggering intrusion detection schemes or making enough of an impact on application logging that steps are taken against the attacker.</xhtml:p>\n               <xhtml:p>The Attack does not need special hardware, software, skills, or access.</xhtml:p>\n            "
            ],
            "x_capec_skills_required": {
                "Medium": "Although fuzzing parameters is not difficult, and often possible with automated fuzzers, interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform, the languages and packages used as well as software design."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
            "external_references": [
                {
                    "external_id": "CAPEC-7",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/7.html"
                },
                {
                    "external_id": "CWE-89",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/89.html"
                },
                {
                    "external_id": "CWE-209",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-713",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/713.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                }
            ],
            "id": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Blind SQL Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>An adversary may try entering something like \"username' AND 1=1; --\" in an input field. If the result is the same as when the adversary entered \"username\" in the field, then the adversary knows that the application is vulnerable to SQL Injection. The adversary can then ask yes/no questions from the database server to extract information from it. For example, the adversary can extract table names from a database using the following types of queries:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username' AND ascii(lower(substring((SELECT TOP 1 name FROM sysobjects WHERE xtype='U'), 1, 1))) > 108\".</xhtml:div>\n               <xhtml:p>If the above query executes properly, then the adversary knows that the first character in a table name in the database is a letter between m and z. If it doesn't, then the adversary knows that the character must be between a and l (assuming of course that table names only contain alphabetic characters). By performing a binary search on all character positions, the adversary can determine all table names in the database. Subsequently, the adversary may execute an actual attack and send something like:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username'; DROP TABLE trades; --</xhtml:div>\n            ",
                "In the PHP application TimeSheet 1.1, an adversary can successfully retrieve username and password hashes from the database using Blind SQL Injection. If the adversary is aware of the local path structure, the adversary can also remotely execute arbitrary code and write the output of the injected queries to the local path. Blind SQL Injection is possible since the application does not properly sanitize the $_POST['username'] variable in the login.php file. See also: CVE-2006-4705"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "SQL queries used by the application to store, retrieve or modify data.",
                "User-controllable input that is not properly validated by the application as part of SQL queries."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Medium": "Determining the database type and version, as well as the right number and type of parameters to the query being injected in the absence of error messages requires greater skill than reverse-engineering database error messages."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2010-0733
{
    "id": "bundle--fa13654a-f75b-4c99-94b2-3c857141ba16",
    "objects": [
        {
            "created": "2020-05-24T00:01:20.378Z",
            "description": "Integer overflow in src/backend/executor/nodeHash.c in PostgreSQL 8.4.1 and earlier, and 8.5 through 8.5alpha2, allows remote authenticated users to cause a denial of service (daemon crash) via a SELECT statement with many LEFT JOIN clauses, related to certain hashtable size calculations.",
            "external_references": [
                {
                    "external_id": "CVE-2010-0733",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--4e002dfc-f769-32a0-b04e-81406bc55bc4",
            "modified": "2020-05-24T00:01:20.378Z",
            "name": "CVE-2010-0733",
            "type": "vulnerability",
            "x_CWE": [
                "CWE-189"
            ],
            "x_data_type": "CVE",
            "x_references": [
                {
                    "name": "[pgsql-bugs] 20091028 BUG #5145: Complex query with lots of LEFT JOIN causes segfault",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://archives.postgresql.org/pgsql-bugs/2009-10/msg00277.php"
                },
                {
                    "name": "[pgsql-bugs] 20091029 Re: BUG #5145: Complex query with lots of LEFT JOIN causes segfault",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://archives.postgresql.org/pgsql-bugs/2009-10/msg00287.php"
                },
                {
                    "name": "[pgsql-bugs] 20091029 Re: BUG #5145: Complex query with lots of LEFT JOIN causes segfault",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://archives.postgresql.org/pgsql-bugs/2009-10/msg00289.php"
                },
                {
                    "name": "[pgsql-bugs] 20091030 Re: BUG #5145: Complex query with lots of LEFT JOIN causes segfault",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://archives.postgresql.org/pgsql-bugs/2009-10/msg00310.php"
                },
                {
                    "name": "http://git.postgresql.org/gitweb?p=postgresql.git;a=commit;h=64b057e6823655fb6c5d1f24a28f236b94dd6c54",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "http://git.postgresql.org/gitweb?p=postgresql.git;a=commit;h=64b057e6823655fb6c5d1f24a28f236b94dd6c54"
                },
                {
                    "name": "SUSE-SR:2010:014",
                    "refsource": "SUSE",
                    "tags": [],
                    "url": "http://lists.opensuse.org/opensuse-security-announce/2010-08/msg00001.html"
                },
                {
                    "name": "39820",
                    "refsource": "SECUNIA",
                    "tags": [],
                    "url": "http://secunia.com/advisories/39820"
                },
                {
                    "name": "[oss-security] 20100309 CVE Request: postgresql integer overflow in hash table size calculation",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://www.openwall.com/lists/oss-security/2010/03/09/2"
                },
                {
                    "name": "[oss-security] 20100316 Re: CVE Request: postgresql integer overflow in hash table size calculation",
                    "refsource": "MLIST",
                    "tags": [],
                    "url": "http://www.openwall.com/lists/oss-security/2010/03/16/10"
                },
                {
                    "name": "RHSA-2010:0427",
                    "refsource": "REDHAT",
                    "tags": [],
                    "url": "http://www.redhat.com/support/errata/RHSA-2010-0427.html"
                },
                {
                    "name": "RHSA-2010:0428",
                    "refsource": "REDHAT",
                    "tags": [],
                    "url": "http://www.redhat.com/support/errata/RHSA-2010-0428.html"
                },
                {
                    "name": "RHSA-2010:0429",
                    "refsource": "REDHAT",
                    "tags": [],
                    "url": "http://www.redhat.com/support/errata/RHSA-2010-0429.html"
                },
                {
                    "name": "38619",
                    "refsource": "BID",
                    "tags": [],
                    "url": "http://www.securityfocus.com/bid/38619"
                },
                {
                    "name": "ADV-2010-1197",
                    "refsource": "VUPEN",
                    "tags": [],
                    "url": "http://www.vupen.com/english/advisories/2010/1197"
                },
                {
                    "name": "https://bugzilla.redhat.com/show_bug.cgi?id=546621",
                    "refsource": "CONFIRM",
                    "tags": [
                        "Patch"
                    ],
                    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=546621"
                },
                {
                    "name": "oval:org.mitre.oval:def:10691",
                    "refsource": "OVAL",
                    "tags": [],
                    "url": "https://oval.cisecurity.org/repository/search/definition/oval%3Aorg.mitre.oval%3Adef%3A10691"
                }
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}
CVE-2019-10210
{
    "error": "vulnerability not found"
}
